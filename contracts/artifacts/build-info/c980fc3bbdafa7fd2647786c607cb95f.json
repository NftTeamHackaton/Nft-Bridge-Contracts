{
	"id": "c980fc3bbdafa7fd2647786c607cb95f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.4",
	"solcLongVersion": "0.6.4+commit.1dca32f3",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MonkeyNft.sol": {
				"content": "pragma solidity 0.6.4;\npragma experimental ABIEncoderV2;\n\nimport \"./access/AccessControl.sol\";\nimport \"./utils/Pausable.sol\";\nimport \"./utils/SafeMath.sol\";\nimport \"./interfaces/IDepositExecute.sol\";\nimport \"./interfaces/IBridge.sol\";\nimport \"./interfaces/IERCHandler.sol\";\nimport \"./interfaces/IGenericHandler.sol\";\n\n/**\n    @title Facilitates deposits, creation and votiing of deposit proposals, and deposit executions.\n    @author ChainSafe Systems.\n */\ncontract Bridge is Pausable, AccessControl, SafeMath {\n\n}\n"
			},
			"contracts/interfaces/IGenericHandler.sol": {
				"content": "pragma solidity 0.6.4;\n\n/**\n    @title Interface for handler that handles generic deposits and deposit executions.\n    @author ChainSafe Systems.\n */\ninterface IGenericHandler {\n    /**\n        @notice Correlates {resourceID} with {contractAddress}, {depositFunctionSig}, and {executeFunctionSig}.\n        @param resourceID ResourceID to be used when making deposits.\n        @param contractAddress Address of contract to be called when a deposit is made and a deposited is executed.\n        @param depositFunctionSig Function signature of method to be called in {contractAddress} when a deposit is made.\n        @param executeFunctionSig Function signature of method to be called in {contractAddress} when a deposit is executed.\n     */\n    function setResource(bytes32 resourceID, address contractAddress, bytes4 depositFunctionSig, bytes4 executeFunctionSig) external;\n}"
			},
			"contracts/interfaces/IERCHandler.sol": {
				"content": "pragma solidity 0.6.4;\n\n/**\n    @title Interface to be used with handlers that support ERC20s and ERC721s.\n    @author ChainSafe Systems.\n */\ninterface IERCHandler {\n    /**\n        @notice Correlates {resourceID} with {contractAddress}.\n        @param resourceID ResourceID to be used when making deposits.\n        @param contractAddress Address of contract to be called when a deposit is made and a deposited is executed.\n     */\n    function setResource(bytes32 resourceID, address contractAddress) external;\n    /**\n        @notice Marks {contractAddress} as mintable/burnable.\n        @param contractAddress Address of contract to be used when making or executing deposits.\n     */\n    function setBurnable(address contractAddress) external;\n    /**\n        @notice Used to manually release funds from ERC safes.\n        @param tokenAddress Address of token contract to release.\n        @param recipient Address to release tokens to.\n        @param amountOrTokenID Either the amount of ERC20 tokens or the ERC721 token ID to release.\n     */\n    function withdraw(address tokenAddress, address recipient, uint256 amountOrTokenID) external;\n}\n"
			},
			"contracts/interfaces/IBridge.sol": {
				"content": "pragma solidity 0.6.4;\n\n/**\n    @title Interface for Bridge contract.\n    @author ChainSafe Systems.\n */\ninterface IBridge {\n    /**\n        @notice Exposing getter for {_chainID} instead of forcing the use of call.\n        @return uint8 The {_chainID} that is currently set for the Bridge contract.\n     */\n    function _chainID() external returns (uint8);\n}"
			},
			"contracts/interfaces/IDepositExecute.sol": {
				"content": "pragma solidity 0.6.4;\n\n/**\n    @title Interface for handler contracts that support deposits and deposit executions.\n    @author ChainSafe Systems.\n */\ninterface IDepositExecute {\n    /**\n        @notice It is intended that deposit are made using the Bridge contract.\n        @param destinationChainID Chain ID deposit is expected to be bridged to.\n        @param depositNonce This value is generated as an ID by the Bridge contract.\n        @param depositer Address of account making the deposit in the Bridge contract.\n        @param data Consists of additional data needed for a specific deposit.\n     */\n    function deposit(bytes32 resourceID, uint8 destinationChainID, uint64 depositNonce, address depositer, bytes calldata data) external;\n\n    /**\n        @notice It is intended that proposals are executed by the Bridge contract.\n        @param data Consists of additional data needed for a specific deposit execution.\n     */\n    function executeProposal(bytes32 resourceID, bytes calldata data) external;\n}\n"
			},
			"contracts/utils/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * note that this is a stripped down version of open zeppelin's safemath\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol\n */\n\ncontract SafeMath {\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return _sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function _sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n}"
			},
			"contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This is a stripped down version of Open zeppelin's Pausable contract.\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/EnumerableSet.sol\n *\n */\ncontract Pausable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor () internal {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _whenNotPaused();\n        _;\n    }\n\n    function _whenNotPaused() private view {\n        require(!_paused, \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenPaused() {\n        _whenPaused();\n        _;\n    }\n\n    function _whenPaused() private view {\n        require(_paused, \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(msg.sender);\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(msg.sender);\n    }\n}"
			},
			"contracts/access/AccessControl.sol": {
				"content": "pragma solidity ^0.6.0;\n\nimport \"../utils/EnumerableSet.sol\";\nimport \"../utils/Address.sol\";\nimport \"../GSN/Context.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context {\n    using EnumerableSet for EnumerableSet.AddressSet;\n    using Address for address;\n\n    struct RoleData {\n        EnumerableSet.AddressSet members;\n        bytes32 adminRole;\n    }\n\n    mapping (bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view returns (bool) {\n        return _roles[role].members.contains(account);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view returns (uint256) {\n        return _roles[role].members.length();\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view returns (address) {\n        return _roles[role].members.at(index);\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\");\n\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual {\n        require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        _roles[role].adminRole = adminRole;\n    }\n\n    function _grantRole(bytes32 role, address account) private {\n        if (_roles[role].members.add(account)) {\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    function _revokeRole(bytes32 role, address account) private {\n        if (_roles[role].members.remove(account)) {\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}"
			},
			"contracts/GSN/Context.sol": {
				"content": "pragma solidity ^0.6.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\ncontract Context {\n    // Empty internal constructor, to prevent people from mistakenly deploying\n    // an instance of this contract, which should be used via inheritance.\n    constructor () internal { }\n\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}"
			},
			"contracts/utils/Address.sol": {
				"content": "pragma solidity ^0.6.2;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { codehash := extcodehash(account) }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n}"
			},
			"contracts/utils/EnumerableSet.sol": {
				"content": "pragma solidity ^0.6.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`\n * (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping (bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\n\n            bytes32 lastvalue = set._values[lastIndex];\n\n            // Move the last value to the index where the value to delete is\n            set._values[toDeleteIndex] = lastvalue;\n            // Update the index for the moved value\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        require(set._values.length > index, \"EnumerableSet: index out of bounds\");\n        return set._values[index];\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint256(_at(set._inner, index)));\n    }\n\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/GSN/Context.sol": {
				"Context": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/GSN/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GSN/Context.sol\":{\"keccak256\":\"0x8610316b7096a19d9f99ae7587e393f1039211fd82d541e26a0693a76e8bc570\",\"urls\":[\"bzz-raw://cb7ca41b389fc0b5de53802af64d86ad0c92b4704eeb695bfabc7e79769fd64c\",\"dweb:/ipfs/Qmd6LUJURrcN7RBSLoporoAAeJ8cWtjGT96QKCaCeCofKN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/MonkeyNft.sol": {
				"Bridge": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "ChainSafe Systems.",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
							}
						},
						"title": "Facilitates deposits, creation and votiing of deposit proposals, and deposit executions."
					},
					"evm": {
						"assembly": "    /* \"contracts/MonkeyNft.sol\":457:514  contract Bridge is Pausable, AccessControl, SafeMath {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/utils/Pausable.sol\":782:787  false */\n  0x00\n    /* \"contracts/utils/Pausable.sol\":772:779  _paused */\n  dup1\n  0x00\n    /* \"contracts/utils/Pausable.sol\":772:787  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MonkeyNft.sol\":457:514  contract Bridge is Pausable, AccessControl, SafeMath {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MonkeyNft.sol\":457:514  contract Bridge is Pausable, AccessControl, SafeMath {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"contracts/MonkeyNft.sol\":457:514  contract Bridge is Pausable, AccessControl, SafeMath {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9010d07c\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x9010d07c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xca15c873\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x248a9ca3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_6\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/access/AccessControl.sol\":3826:3938  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      jump(tag_15)\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      jump(tag_18)\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/AccessControl.sol\":4188:4411  function grantRole(bytes32 role, address account) public virtual {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      jump(tag_21)\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      stop\n        /* \"contracts/access/AccessControl.sol\":5362:5567  function renounceRole(bytes32 role, address account) public virtual {... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      jump(tag_21)\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/utils/Pausable.sol\":889:965  function paused() public view returns (bool) {... */\n    tag_6:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      jump(tag_29)\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/AccessControl.sol\":3509:3645  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_7:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      jump(tag_32)\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      jump(tag_35)\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/AccessControl.sol\":2494:2631  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n    tag_8:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      jump(tag_21)\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      jump(tag_29)\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/AccessControl.sol\":1684:1733  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_9:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      jump(tag_18)\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/AccessControl.sol\":2799:2924  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n    tag_10:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      jump(tag_15)\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      jump(tag_47)\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/access/AccessControl.sol\":4645:4871  function revokeRole(bytes32 role, address account) public virtual {... */\n    tag_11:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      jump(tag_21)\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/access/AccessControl.sol\":3826:3938  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n    tag_16:\n        /* \"contracts/access/AccessControl.sol\":3883:3890  bytes32 */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":3909:3915  _roles */\n      0x01\n        /* \"contracts/access/AccessControl.sol\":3909:3921  _roles[role] */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":3916:3920  role */\n      dup4\n        /* \"contracts/access/AccessControl.sol\":3909:3921  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/access/AccessControl.sol\":3909:3931  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"contracts/access/AccessControl.sol\":3902:3931  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"contracts/access/AccessControl.sol\":3826:3938  function getRoleAdmin(bytes32 role) public view returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/access/AccessControl.sol\":4188:4411  function grantRole(bytes32 role, address account) public virtual {... */\n    tag_22:\n        /* \"contracts/access/AccessControl.sol\":4271:4316  hasRole(_roles[role].adminRole, _msgSender()) */\n      tag_53\n        /* \"contracts/access/AccessControl.sol\":4279:4285  _roles */\n      0x01\n        /* \"contracts/access/AccessControl.sol\":4279:4291  _roles[role] */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":4286:4290  role */\n      dup5\n        /* \"contracts/access/AccessControl.sol\":4279:4291  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/access/AccessControl.sol\":4279:4301  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"contracts/access/AccessControl.sol\":4303:4315  _msgSender() */\n      tag_54\n        /* \"contracts/access/AccessControl.sol\":4303:4313  _msgSender */\n      tag_55\n        /* \"contracts/access/AccessControl.sol\":4303:4315  _msgSender() */\n      jump\t// in\n    tag_54:\n        /* \"contracts/access/AccessControl.sol\":4271:4278  hasRole */\n      tag_38\n        /* \"contracts/access/AccessControl.sol\":4271:4316  hasRole(_roles[role].adminRole, _msgSender()) */\n      jump\t// in\n    tag_53:\n        /* \"contracts/access/AccessControl.sol\":4263:4368  require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to grant\") */\n      tag_56\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_57\n      swap1\n      jump(tag_58)\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_56:\n        /* \"contracts/access/AccessControl.sol\":4379:4404  _grantRole(role, account) */\n      tag_59\n        /* \"contracts/access/AccessControl.sol\":4390:4394  role */\n      dup3\n        /* \"contracts/access/AccessControl.sol\":4396:4403  account */\n      dup3\n        /* \"contracts/access/AccessControl.sol\":4379:4389  _grantRole */\n      tag_60\n        /* \"contracts/access/AccessControl.sol\":4379:4404  _grantRole(role, account) */\n      jump\t// in\n    tag_59:\n        /* \"contracts/access/AccessControl.sol\":4188:4411  function grantRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/AccessControl.sol\":5362:5567  function renounceRole(bytes32 role, address account) public virtual {... */\n    tag_25:\n        /* \"contracts/access/AccessControl.sol\":5459:5471  _msgSender() */\n      tag_62\n        /* \"contracts/access/AccessControl.sol\":5459:5469  _msgSender */\n      tag_55\n        /* \"contracts/access/AccessControl.sol\":5459:5471  _msgSender() */\n      jump\t// in\n    tag_62:\n        /* \"contracts/access/AccessControl.sol\":5448:5471  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/AccessControl.sol\":5448:5455  account */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":5448:5471  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/access/AccessControl.sol\":5440:5523  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      jump(tag_65)\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"contracts/access/AccessControl.sol\":5534:5560  _revokeRole(role, account) */\n      tag_66\n        /* \"contracts/access/AccessControl.sol\":5546:5550  role */\n      dup3\n        /* \"contracts/access/AccessControl.sol\":5552:5559  account */\n      dup3\n        /* \"contracts/access/AccessControl.sol\":5534:5545  _revokeRole */\n      tag_67\n        /* \"contracts/access/AccessControl.sol\":5534:5560  _revokeRole(role, account) */\n      jump\t// in\n    tag_66:\n        /* \"contracts/access/AccessControl.sol\":5362:5567  function renounceRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/Pausable.sol\":889:965  function paused() public view returns (bool) {... */\n    tag_27:\n        /* \"contracts/utils/Pausable.sol\":928:932  bool */\n      0x00\n        /* \"contracts/utils/Pausable.sol\":951:958  _paused */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/utils/Pausable.sol\":944:958  return _paused */\n      swap1\n      pop\n        /* \"contracts/utils/Pausable.sol\":889:965  function paused() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/access/AccessControl.sol\":3509:3645  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n    tag_33:\n        /* \"contracts/access/AccessControl.sol\":3582:3589  address */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":3608:3638  _roles[role].members.at(index) */\n      tag_70\n        /* \"contracts/access/AccessControl.sol\":3632:3637  index */\n      dup3\n        /* \"contracts/access/AccessControl.sol\":3608:3614  _roles */\n      0x01\n        /* \"contracts/access/AccessControl.sol\":3608:3620  _roles[role] */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":3615:3619  role */\n      dup7\n        /* \"contracts/access/AccessControl.sol\":3608:3620  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/access/AccessControl.sol\":3608:3628  _roles[role].members */\n      0x00\n      add\n        /* \"contracts/access/AccessControl.sol\":3608:3631  _roles[role].members.at */\n      tag_71\n      swap1\n        /* \"contracts/access/AccessControl.sol\":3608:3638  _roles[role].members.at(index) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_70:\n        /* \"contracts/access/AccessControl.sol\":3601:3638  return _roles[role].members.at(index) */\n      swap1\n      pop\n        /* \"contracts/access/AccessControl.sol\":3509:3645  function getRoleMember(bytes32 role, uint256 index) public view returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/AccessControl.sol\":2494:2631  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n    tag_38:\n        /* \"contracts/access/AccessControl.sol\":2563:2567  bool */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":2586:2624  _roles[role].members.contains(account) */\n      tag_73\n        /* \"contracts/access/AccessControl.sol\":2616:2623  account */\n      dup3\n        /* \"contracts/access/AccessControl.sol\":2586:2592  _roles */\n      0x01\n        /* \"contracts/access/AccessControl.sol\":2586:2598  _roles[role] */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":2593:2597  role */\n      dup7\n        /* \"contracts/access/AccessControl.sol\":2586:2598  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/access/AccessControl.sol\":2586:2606  _roles[role].members */\n      0x00\n      add\n        /* \"contracts/access/AccessControl.sol\":2586:2615  _roles[role].members.contains */\n      tag_74\n      swap1\n        /* \"contracts/access/AccessControl.sol\":2586:2624  _roles[role].members.contains(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_73:\n        /* \"contracts/access/AccessControl.sol\":2579:2624  return _roles[role].members.contains(account) */\n      swap1\n      pop\n        /* \"contracts/access/AccessControl.sol\":2494:2631  function hasRole(bytes32 role, address account) public view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/AccessControl.sol\":1684:1733  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_41:\n        /* \"contracts/access/AccessControl.sol\":1729:1733  0x00 */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":1684:1733  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/access/AccessControl.sol\":2799:2924  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n    tag_45:\n        /* \"contracts/access/AccessControl.sol\":2862:2869  uint256 */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":2888:2917  _roles[role].members.length() */\n      tag_76\n        /* \"contracts/access/AccessControl.sol\":2888:2894  _roles */\n      0x01\n        /* \"contracts/access/AccessControl.sol\":2888:2900  _roles[role] */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":2895:2899  role */\n      dup5\n        /* \"contracts/access/AccessControl.sol\":2888:2900  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/access/AccessControl.sol\":2888:2908  _roles[role].members */\n      0x00\n      add\n        /* \"contracts/access/AccessControl.sol\":2888:2915  _roles[role].members.length */\n      tag_77\n        /* \"contracts/access/AccessControl.sol\":2888:2917  _roles[role].members.length() */\n      jump\t// in\n    tag_76:\n        /* \"contracts/access/AccessControl.sol\":2881:2917  return _roles[role].members.length() */\n      swap1\n      pop\n        /* \"contracts/access/AccessControl.sol\":2799:2924  function getRoleMemberCount(bytes32 role) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/access/AccessControl.sol\":4645:4871  function revokeRole(bytes32 role, address account) public virtual {... */\n    tag_50:\n        /* \"contracts/access/AccessControl.sol\":4729:4774  hasRole(_roles[role].adminRole, _msgSender()) */\n      tag_79\n        /* \"contracts/access/AccessControl.sol\":4737:4743  _roles */\n      0x01\n        /* \"contracts/access/AccessControl.sol\":4737:4749  _roles[role] */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":4744:4748  role */\n      dup5\n        /* \"contracts/access/AccessControl.sol\":4737:4749  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/access/AccessControl.sol\":4737:4759  _roles[role].adminRole */\n      0x02\n      add\n      sload\n        /* \"contracts/access/AccessControl.sol\":4761:4773  _msgSender() */\n      tag_80\n        /* \"contracts/access/AccessControl.sol\":4761:4771  _msgSender */\n      tag_55\n        /* \"contracts/access/AccessControl.sol\":4761:4773  _msgSender() */\n      jump\t// in\n    tag_80:\n        /* \"contracts/access/AccessControl.sol\":4729:4736  hasRole */\n      tag_38\n        /* \"contracts/access/AccessControl.sol\":4729:4774  hasRole(_roles[role].adminRole, _msgSender()) */\n      jump\t// in\n    tag_79:\n        /* \"contracts/access/AccessControl.sol\":4721:4827  require(hasRole(_roles[role].adminRole, _msgSender()), \"AccessControl: sender must be an admin to revoke\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap1\n      jump(tag_83)\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_81:\n        /* \"contracts/access/AccessControl.sol\":4838:4864  _revokeRole(role, account) */\n      tag_84\n        /* \"contracts/access/AccessControl.sol\":4850:4854  role */\n      dup3\n        /* \"contracts/access/AccessControl.sol\":4856:4863  account */\n      dup3\n        /* \"contracts/access/AccessControl.sol\":4838:4849  _revokeRole */\n      tag_67\n        /* \"contracts/access/AccessControl.sol\":4838:4864  _revokeRole(role, account) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/access/AccessControl.sol\":4645:4871  function revokeRole(bytes32 role, address account) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GSN/Context.sol\":735:839  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_55:\n        /* \"contracts/GSN/Context.sol\":788:803  address payable */\n      0x00\n        /* \"contracts/GSN/Context.sol\":822:832  msg.sender */\n      caller\n        /* \"contracts/GSN/Context.sol\":815:832  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/GSN/Context.sol\":735:839  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/access/AccessControl.sol\":6449:6633  function _grantRole(bytes32 role, address account) private {... */\n    tag_60:\n        /* \"contracts/access/AccessControl.sol\":6522:6555  _roles[role].members.add(account) */\n      tag_87\n        /* \"contracts/access/AccessControl.sol\":6547:6554  account */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":6522:6528  _roles */\n      0x01\n        /* \"contracts/access/AccessControl.sol\":6522:6534  _roles[role] */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":6529:6533  role */\n      dup6\n        /* \"contracts/access/AccessControl.sol\":6522:6534  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/access/AccessControl.sol\":6522:6542  _roles[role].members */\n      0x00\n      add\n        /* \"contracts/access/AccessControl.sol\":6522:6546  _roles[role].members.add */\n      tag_88\n      swap1\n        /* \"contracts/access/AccessControl.sol\":6522:6555  _roles[role].members.add(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_87:\n        /* \"contracts/access/AccessControl.sol\":6518:6627  if (_roles[role].members.add(account)) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"contracts/access/AccessControl.sol\":6603:6615  _msgSender() */\n      tag_90\n        /* \"contracts/access/AccessControl.sol\":6603:6613  _msgSender */\n      tag_55\n        /* \"contracts/access/AccessControl.sol\":6603:6615  _msgSender() */\n      jump\t// in\n    tag_90:\n        /* \"contracts/access/AccessControl.sol\":6576:6616  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/AccessControl.sol\":6594:6601  account */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":6576:6616  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/AccessControl.sol\":6588:6592  role */\n      dup4\n        /* \"contracts/access/AccessControl.sol\":6576:6616  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/access/AccessControl.sol\":6518:6627  if (_roles[role].members.add(account)) {... */\n    tag_89:\n        /* \"contracts/access/AccessControl.sol\":6449:6633  function _grantRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/access/AccessControl.sol\":6639:6827  function _revokeRole(bytes32 role, address account) private {... */\n    tag_67:\n        /* \"contracts/access/AccessControl.sol\":6713:6749  _roles[role].members.remove(account) */\n      tag_92\n        /* \"contracts/access/AccessControl.sol\":6741:6748  account */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":6713:6719  _roles */\n      0x01\n        /* \"contracts/access/AccessControl.sol\":6713:6725  _roles[role] */\n      0x00\n        /* \"contracts/access/AccessControl.sol\":6720:6724  role */\n      dup6\n        /* \"contracts/access/AccessControl.sol\":6713:6725  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/access/AccessControl.sol\":6713:6733  _roles[role].members */\n      0x00\n      add\n        /* \"contracts/access/AccessControl.sol\":6713:6740  _roles[role].members.remove */\n      tag_93\n      swap1\n        /* \"contracts/access/AccessControl.sol\":6713:6749  _roles[role].members.remove(account) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_92:\n        /* \"contracts/access/AccessControl.sol\":6709:6821  if (_roles[role].members.remove(account)) {... */\n      iszero\n      tag_94\n      jumpi\n        /* \"contracts/access/AccessControl.sol\":6797:6809  _msgSender() */\n      tag_95\n        /* \"contracts/access/AccessControl.sol\":6797:6807  _msgSender */\n      tag_55\n        /* \"contracts/access/AccessControl.sol\":6797:6809  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"contracts/access/AccessControl.sol\":6770:6810  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/AccessControl.sol\":6788:6795  account */\n      dup2\n        /* \"contracts/access/AccessControl.sol\":6770:6810  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/access/AccessControl.sol\":6782:6786  role */\n      dup4\n        /* \"contracts/access/AccessControl.sol\":6770:6810  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/access/AccessControl.sol\":6709:6821  if (_roles[role].members.remove(account)) {... */\n    tag_94:\n        /* \"contracts/access/AccessControl.sol\":6639:6827  function _revokeRole(bytes32 role, address account) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/EnumerableSet.sol\":6052:6199  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_71:\n        /* \"contracts/utils/EnumerableSet.sol\":6126:6133  address */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":6168:6190  _at(set._inner, index) */\n      tag_97\n        /* \"contracts/utils/EnumerableSet.sol\":6172:6175  set */\n      dup4\n        /* \"contracts/utils/EnumerableSet.sol\":6172:6182  set._inner */\n      0x00\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":6184:6189  index */\n      dup4\n        /* \"contracts/utils/EnumerableSet.sol\":6168:6171  _at */\n      tag_98\n        /* \"contracts/utils/EnumerableSet.sol\":6168:6190  _at(set._inner, index) */\n      jump\t// in\n    tag_97:\n        /* \"contracts/utils/EnumerableSet.sol\":6160:6191  uint256(_at(set._inner, index)) */\n      0x00\n      shr\n        /* \"contracts/utils/EnumerableSet.sol\":6145:6192  return address(uint256(_at(set._inner, index))) */\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":6052:6199  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/EnumerableSet.sol\":5368:5524  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_74:\n        /* \"contracts/utils/EnumerableSet.sol\":5448:5452  bool */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":5471:5517  _contains(set._inner, bytes32(uint256(value))) */\n      tag_100\n        /* \"contracts/utils/EnumerableSet.sol\":5481:5484  set */\n      dup4\n        /* \"contracts/utils/EnumerableSet.sol\":5481:5491  set._inner */\n      0x00\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":5509:5514  value */\n      dup4\n        /* \"contracts/utils/EnumerableSet.sol\":5501:5515  uint256(value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/EnumerableSet.sol\":5493:5516  bytes32(uint256(value)) */\n      0x00\n      shl\n        /* \"contracts/utils/EnumerableSet.sol\":5471:5480  _contains */\n      tag_101\n        /* \"contracts/utils/EnumerableSet.sol\":5471:5517  _contains(set._inner, bytes32(uint256(value))) */\n      jump\t// in\n    tag_100:\n        /* \"contracts/utils/EnumerableSet.sol\":5464:5517  return _contains(set._inner, bytes32(uint256(value))) */\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":5368:5524  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/EnumerableSet.sol\":5605:5720  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_77:\n        /* \"contracts/utils/EnumerableSet.sol\":5668:5675  uint256 */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":5694:5713  _length(set._inner) */\n      tag_103\n        /* \"contracts/utils/EnumerableSet.sol\":5702:5705  set */\n      dup3\n        /* \"contracts/utils/EnumerableSet.sol\":5702:5712  set._inner */\n      0x00\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":5694:5701  _length */\n      tag_104\n        /* \"contracts/utils/EnumerableSet.sol\":5694:5713  _length(set._inner) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/utils/EnumerableSet.sol\":5687:5713  return _length(set._inner) */\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":5605:5720  function length(AddressSet storage set) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/utils/EnumerableSet.sol\":4831:4972  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_88:\n        /* \"contracts/utils/EnumerableSet.sol\":4901:4905  bool */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":4924:4965  _add(set._inner, bytes32(uint256(value))) */\n      tag_106\n        /* \"contracts/utils/EnumerableSet.sol\":4929:4932  set */\n      dup4\n        /* \"contracts/utils/EnumerableSet.sol\":4929:4939  set._inner */\n      0x00\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":4957:4962  value */\n      dup4\n        /* \"contracts/utils/EnumerableSet.sol\":4949:4963  uint256(value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/EnumerableSet.sol\":4941:4964  bytes32(uint256(value)) */\n      0x00\n      shl\n        /* \"contracts/utils/EnumerableSet.sol\":4924:4928  _add */\n      tag_107\n        /* \"contracts/utils/EnumerableSet.sol\":4924:4965  _add(set._inner, bytes32(uint256(value))) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/utils/EnumerableSet.sol\":4917:4965  return _add(set._inner, bytes32(uint256(value))) */\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":4831:4972  function add(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/EnumerableSet.sol\":5140:5287  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_93:\n        /* \"contracts/utils/EnumerableSet.sol\":5213:5217  bool */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":5236:5280  _remove(set._inner, bytes32(uint256(value))) */\n      tag_109\n        /* \"contracts/utils/EnumerableSet.sol\":5244:5247  set */\n      dup4\n        /* \"contracts/utils/EnumerableSet.sol\":5244:5254  set._inner */\n      0x00\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":5272:5277  value */\n      dup4\n        /* \"contracts/utils/EnumerableSet.sol\":5264:5278  uint256(value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/utils/EnumerableSet.sol\":5256:5279  bytes32(uint256(value)) */\n      0x00\n      shl\n        /* \"contracts/utils/EnumerableSet.sol\":5236:5243  _remove */\n      tag_110\n        /* \"contracts/utils/EnumerableSet.sol\":5236:5280  _remove(set._inner, bytes32(uint256(value))) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/utils/EnumerableSet.sol\":5229:5280  return _remove(set._inner, bytes32(uint256(value))) */\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":5140:5287  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/EnumerableSet.sol\":4390:4591  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_98:\n        /* \"contracts/utils/EnumerableSet.sol\":4457:4464  bytes32 */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":4505:4510  index */\n      dup2\n        /* \"contracts/utils/EnumerableSet.sol\":4484:4487  set */\n      dup4\n        /* \"contracts/utils/EnumerableSet.sol\":4484:4495  set._values */\n      0x00\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":4484:4502  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":4484:4510  set._values.length > index */\n      gt\n        /* \"contracts/utils/EnumerableSet.sol\":4476:4549  require(set._values.length > index, \"EnumerableSet: index out of bounds\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      jump(tag_114)\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"contracts/utils/EnumerableSet.sol\":4566:4569  set */\n      dup3\n        /* \"contracts/utils/EnumerableSet.sol\":4566:4577  set._values */\n      0x00\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":4578:4583  index */\n      dup3\n        /* \"contracts/utils/EnumerableSet.sol\":4566:4584  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_115\n      jumpi\n      invalid\n    tag_115:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/utils/EnumerableSet.sol\":4559:4584  return set._values[index] */\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":4390:4591  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/EnumerableSet.sol\":3743:3870  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_101:\n        /* \"contracts/utils/EnumerableSet.sol\":3816:3820  bool */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":3862:3863  0 */\n      dup1\n        /* \"contracts/utils/EnumerableSet.sol\":3839:3842  set */\n      dup4\n        /* \"contracts/utils/EnumerableSet.sol\":3839:3851  set._indexes */\n      0x01\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":3839:3858  set._indexes[value] */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":3852:3857  value */\n      dup5\n        /* \"contracts/utils/EnumerableSet.sol\":3839:3858  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/utils/EnumerableSet.sol\":3839:3863  set._indexes[value] != 0 */\n      eq\n      iszero\n        /* \"contracts/utils/EnumerableSet.sol\":3832:3863  return set._indexes[value] != 0 */\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":3743:3870  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/EnumerableSet.sol\":3951:4058  function _length(Set storage set) private view returns (uint256) {... */\n    tag_104:\n        /* \"contracts/utils/EnumerableSet.sol\":4007:4014  uint256 */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":4033:4036  set */\n      dup2\n        /* \"contracts/utils/EnumerableSet.sol\":4033:4044  set._values */\n      0x00\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":4033:4051  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":4026:4051  return set._values.length */\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":3951:4058  function _length(Set storage set) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/utils/EnumerableSet.sol\":1578:1982  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_107:\n        /* \"contracts/utils/EnumerableSet.sol\":1641:1645  bool */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":1662:1683  _contains(set, value) */\n      tag_120\n        /* \"contracts/utils/EnumerableSet.sol\":1672:1675  set */\n      dup4\n        /* \"contracts/utils/EnumerableSet.sol\":1677:1682  value */\n      dup4\n        /* \"contracts/utils/EnumerableSet.sol\":1662:1671  _contains */\n      tag_101\n        /* \"contracts/utils/EnumerableSet.sol\":1662:1683  _contains(set, value) */\n      jump\t// in\n    tag_120:\n        /* \"contracts/utils/EnumerableSet.sol\":1657:1976  if (!_contains(set, value)) {... */\n      tag_121\n      jumpi\n        /* \"contracts/utils/EnumerableSet.sol\":1699:1702  set */\n      dup3\n        /* \"contracts/utils/EnumerableSet.sol\":1699:1710  set._values */\n      0x00\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":1716:1721  value */\n      dup3\n        /* \"contracts/utils/EnumerableSet.sol\":1699:1722  set._values.push(value) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x01\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":1699:1722  set._values.push(value) */\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/utils/EnumerableSet.sol\":1879:1882  set */\n      dup3\n        /* \"contracts/utils/EnumerableSet.sol\":1879:1890  set._values */\n      0x00\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":1879:1897  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":1857:1860  set */\n      dup4\n        /* \"contracts/utils/EnumerableSet.sol\":1857:1869  set._indexes */\n      0x01\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":1857:1876  set._indexes[value] */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":1870:1875  value */\n      dup5\n        /* \"contracts/utils/EnumerableSet.sol\":1857:1876  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/utils/EnumerableSet.sol\":1857:1897  set._indexes[value] = set._values.length */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":1918:1922  true */\n      0x01\n        /* \"contracts/utils/EnumerableSet.sol\":1911:1922  return true */\n      swap1\n      pop\n      jump(tag_119)\n        /* \"contracts/utils/EnumerableSet.sol\":1657:1976  if (!_contains(set, value)) {... */\n    tag_121:\n        /* \"contracts/utils/EnumerableSet.sol\":1960:1965  false */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":1953:1965  return false */\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":1578:1982  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_119:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/utils/EnumerableSet.sol\":2150:3662  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_110:\n        /* \"contracts/utils/EnumerableSet.sol\":2216:2220  bool */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":2332:2350  uint256 valueIndex */\n      dup1\n        /* \"contracts/utils/EnumerableSet.sol\":2353:2356  set */\n      dup4\n        /* \"contracts/utils/EnumerableSet.sol\":2353:2365  set._indexes */\n      0x01\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":2353:2372  set._indexes[value] */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":2366:2371  value */\n      dup5\n        /* \"contracts/utils/EnumerableSet.sol\":2353:2372  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/utils/EnumerableSet.sol\":2332:2372  uint256 valueIndex = set._indexes[value] */\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":2401:2402  0 */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":2387:2397  valueIndex */\n      dup2\n        /* \"contracts/utils/EnumerableSet.sol\":2387:2402  valueIndex != 0 */\n      eq\n        /* \"contracts/utils/EnumerableSet.sol\":2383:3656  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n      tag_125\n      jumpi\n        /* \"contracts/utils/EnumerableSet.sol\":2744:2765  uint256 toDeleteIndex */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":2781:2782  1 */\n      0x01\n        /* \"contracts/utils/EnumerableSet.sol\":2768:2778  valueIndex */\n      dup3\n        /* \"contracts/utils/EnumerableSet.sol\":2768:2782  valueIndex - 1 */\n      sub\n        /* \"contracts/utils/EnumerableSet.sol\":2744:2782  uint256 toDeleteIndex = valueIndex - 1 */\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":2796:2813  uint256 lastIndex */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":2837:2838  1 */\n      0x01\n        /* \"contracts/utils/EnumerableSet.sol\":2816:2819  set */\n      dup7\n        /* \"contracts/utils/EnumerableSet.sol\":2816:2827  set._values */\n      0x00\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":2816:2834  set._values.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":2816:2838  set._values.length - 1 */\n      sub\n        /* \"contracts/utils/EnumerableSet.sol\":2796:2838  uint256 lastIndex = set._values.length - 1 */\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":3078:3095  bytes32 lastvalue */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":3098:3101  set */\n      dup7\n        /* \"contracts/utils/EnumerableSet.sol\":3098:3109  set._values */\n      0x00\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":3110:3119  lastIndex */\n      dup3\n        /* \"contracts/utils/EnumerableSet.sol\":3098:3120  set._values[lastIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_126\n      jumpi\n      invalid\n    tag_126:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/utils/EnumerableSet.sol\":3078:3120  bytes32 lastvalue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":3241:3250  lastvalue */\n      dup1\n        /* \"contracts/utils/EnumerableSet.sol\":3212:3215  set */\n      dup8\n        /* \"contracts/utils/EnumerableSet.sol\":3212:3223  set._values */\n      0x00\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":3224:3237  toDeleteIndex */\n      dup5\n        /* \"contracts/utils/EnumerableSet.sol\":3212:3238  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_128\n      jumpi\n      invalid\n    tag_128:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":3212:3250  set._values[toDeleteIndex] = lastvalue */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":3358:3359  1 */\n      0x01\n        /* \"contracts/utils/EnumerableSet.sol\":3342:3355  toDeleteIndex */\n      dup4\n        /* \"contracts/utils/EnumerableSet.sol\":3342:3359  toDeleteIndex + 1 */\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":3316:3319  set */\n      dup8\n        /* \"contracts/utils/EnumerableSet.sol\":3316:3328  set._indexes */\n      0x01\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":3316:3339  set._indexes[lastvalue] */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":3329:3338  lastvalue */\n      dup4\n        /* \"contracts/utils/EnumerableSet.sol\":3316:3339  set._indexes[lastvalue] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/utils/EnumerableSet.sol\":3316:3359  set._indexes[lastvalue] = toDeleteIndex + 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":3465:3468  set */\n      dup7\n        /* \"contracts/utils/EnumerableSet.sol\":3465:3476  set._values */\n      0x00\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":3465:3482  set._values.pop() */\n      dup1\n      sload\n      dup1\n      tag_130\n      jumpi\n      invalid\n    tag_130:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/utils/EnumerableSet.sol\":3557:3560  set */\n      dup7\n        /* \"contracts/utils/EnumerableSet.sol\":3557:3569  set._indexes */\n      0x01\n      add\n        /* \"contracts/utils/EnumerableSet.sol\":3557:3576  set._indexes[value] */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":3570:3575  value */\n      dup8\n        /* \"contracts/utils/EnumerableSet.sol\":3557:3576  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/utils/EnumerableSet.sol\":3550:3576  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/utils/EnumerableSet.sol\":3598:3602  true */\n      0x01\n        /* \"contracts/utils/EnumerableSet.sol\":3591:3602  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_124)\n        /* \"contracts/utils/EnumerableSet.sol\":2383:3656  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n    tag_125:\n        /* \"contracts/utils/EnumerableSet.sol\":3640:3645  false */\n      0x00\n        /* \"contracts/utils/EnumerableSet.sol\":3633:3645  return false */\n      swap2\n      pop\n      pop\n        /* \"contracts/utils/EnumerableSet.sol\":2150:3662  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_124:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"--CODEGEN--\":5:135   */\n    tag_134:\n      0x00\n        /* \"--CODEGEN--\":85:91   */\n      dup2\n        /* \"--CODEGEN--\":72:92   */\n      calldataload\n        /* \"--CODEGEN--\":63:92   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":97:130   */\n      tag_136\n        /* \"--CODEGEN--\":124:129   */\n      dup2\n        /* \"--CODEGEN--\":97:130   */\n      jump(tag_137)\n    tag_136:\n        /* \"--CODEGEN--\":57:135   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":142:272   */\n    tag_138:\n      0x00\n        /* \"--CODEGEN--\":222:228   */\n      dup2\n        /* \"--CODEGEN--\":209:229   */\n      calldataload\n        /* \"--CODEGEN--\":200:229   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":234:267   */\n      tag_140\n        /* \"--CODEGEN--\":261:266   */\n      dup2\n        /* \"--CODEGEN--\":234:267   */\n      jump(tag_141)\n    tag_140:\n        /* \"--CODEGEN--\":194:272   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":279:409   */\n    tag_142:\n      0x00\n        /* \"--CODEGEN--\":359:365   */\n      dup2\n        /* \"--CODEGEN--\":346:366   */\n      calldataload\n        /* \"--CODEGEN--\":337:366   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":371:404   */\n      tag_144\n        /* \"--CODEGEN--\":398:403   */\n      dup2\n        /* \"--CODEGEN--\":371:404   */\n      jump(tag_145)\n    tag_144:\n        /* \"--CODEGEN--\":331:409   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":416:657   */\n    tag_15:\n      0x00\n        /* \"--CODEGEN--\":520:522   */\n      0x20\n        /* \"--CODEGEN--\":508:517   */\n      dup3\n        /* \"--CODEGEN--\":499:506   */\n      dup5\n        /* \"--CODEGEN--\":495:518   */\n      sub\n        /* \"--CODEGEN--\":491:523   */\n      slt\n        /* \"--CODEGEN--\":488:490   */\n      iszero\n      tag_147\n      jumpi\n        /* \"--CODEGEN--\":536:537   */\n      0x00\n        /* \"--CODEGEN--\":533:534   */\n      dup1\n        /* \"--CODEGEN--\":526:538   */\n      revert\n        /* \"--CODEGEN--\":488:490   */\n    tag_147:\n        /* \"--CODEGEN--\":571:572   */\n      0x00\n        /* \"--CODEGEN--\":588:641   */\n      tag_148\n        /* \"--CODEGEN--\":633:640   */\n      dup5\n        /* \"--CODEGEN--\":624:630   */\n      dup3\n        /* \"--CODEGEN--\":613:622   */\n      dup6\n        /* \"--CODEGEN--\":609:631   */\n      add\n        /* \"--CODEGEN--\":588:641   */\n      jump(tag_138)\n    tag_148:\n        /* \"--CODEGEN--\":578:641   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":550:647   */\n      pop\n        /* \"--CODEGEN--\":482:657   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":664:1030   */\n    tag_21:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":785:787   */\n      0x40\n        /* \"--CODEGEN--\":773:782   */\n      dup4\n        /* \"--CODEGEN--\":764:771   */\n      dup6\n        /* \"--CODEGEN--\":760:783   */\n      sub\n        /* \"--CODEGEN--\":756:788   */\n      slt\n        /* \"--CODEGEN--\":753:755   */\n      iszero\n      tag_150\n      jumpi\n        /* \"--CODEGEN--\":801:802   */\n      0x00\n        /* \"--CODEGEN--\":798:799   */\n      dup1\n        /* \"--CODEGEN--\":791:803   */\n      revert\n        /* \"--CODEGEN--\":753:755   */\n    tag_150:\n        /* \"--CODEGEN--\":836:837   */\n      0x00\n        /* \"--CODEGEN--\":853:906   */\n      tag_151\n        /* \"--CODEGEN--\":898:905   */\n      dup6\n        /* \"--CODEGEN--\":889:895   */\n      dup3\n        /* \"--CODEGEN--\":878:887   */\n      dup7\n        /* \"--CODEGEN--\":874:896   */\n      add\n        /* \"--CODEGEN--\":853:906   */\n      jump(tag_138)\n    tag_151:\n        /* \"--CODEGEN--\":843:906   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":815:912   */\n      pop\n        /* \"--CODEGEN--\":943:945   */\n      0x20\n        /* \"--CODEGEN--\":961:1014   */\n      tag_152\n        /* \"--CODEGEN--\":1006:1013   */\n      dup6\n        /* \"--CODEGEN--\":997:1003   */\n      dup3\n        /* \"--CODEGEN--\":986:995   */\n      dup7\n        /* \"--CODEGEN--\":982:1004   */\n      add\n        /* \"--CODEGEN--\":961:1014   */\n      jump(tag_134)\n    tag_152:\n        /* \"--CODEGEN--\":951:1014   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":922:1020   */\n      pop\n        /* \"--CODEGEN--\":747:1030   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":1037:1403   */\n    tag_32:\n      0x00\n      dup1\n        /* \"--CODEGEN--\":1158:1160   */\n      0x40\n        /* \"--CODEGEN--\":1146:1155   */\n      dup4\n        /* \"--CODEGEN--\":1137:1144   */\n      dup6\n        /* \"--CODEGEN--\":1133:1156   */\n      sub\n        /* \"--CODEGEN--\":1129:1161   */\n      slt\n        /* \"--CODEGEN--\":1126:1128   */\n      iszero\n      tag_154\n      jumpi\n        /* \"--CODEGEN--\":1174:1175   */\n      0x00\n        /* \"--CODEGEN--\":1171:1172   */\n      dup1\n        /* \"--CODEGEN--\":1164:1176   */\n      revert\n        /* \"--CODEGEN--\":1126:1128   */\n    tag_154:\n        /* \"--CODEGEN--\":1209:1210   */\n      0x00\n        /* \"--CODEGEN--\":1226:1279   */\n      tag_155\n        /* \"--CODEGEN--\":1271:1278   */\n      dup6\n        /* \"--CODEGEN--\":1262:1268   */\n      dup3\n        /* \"--CODEGEN--\":1251:1260   */\n      dup7\n        /* \"--CODEGEN--\":1247:1269   */\n      add\n        /* \"--CODEGEN--\":1226:1279   */\n      jump(tag_138)\n    tag_155:\n        /* \"--CODEGEN--\":1216:1279   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":1188:1285   */\n      pop\n        /* \"--CODEGEN--\":1316:1318   */\n      0x20\n        /* \"--CODEGEN--\":1334:1387   */\n      tag_156\n        /* \"--CODEGEN--\":1379:1386   */\n      dup6\n        /* \"--CODEGEN--\":1370:1376   */\n      dup3\n        /* \"--CODEGEN--\":1359:1368   */\n      dup7\n        /* \"--CODEGEN--\":1355:1377   */\n      add\n        /* \"--CODEGEN--\":1334:1387   */\n      jump(tag_142)\n    tag_156:\n        /* \"--CODEGEN--\":1324:1387   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":1295:1393   */\n      pop\n        /* \"--CODEGEN--\":1120:1403   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":1410:1523   */\n    tag_157:\n        /* \"--CODEGEN--\":1493:1517   */\n      tag_159\n        /* \"--CODEGEN--\":1511:1516   */\n      dup2\n        /* \"--CODEGEN--\":1493:1517   */\n      jump(tag_160)\n    tag_159:\n        /* \"--CODEGEN--\":1488:1491   */\n      dup3\n        /* \"--CODEGEN--\":1481:1518   */\n      mstore\n        /* \"--CODEGEN--\":1475:1523   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1530:1634   */\n    tag_161:\n        /* \"--CODEGEN--\":1607:1628   */\n      tag_163\n        /* \"--CODEGEN--\":1622:1627   */\n      dup2\n        /* \"--CODEGEN--\":1607:1628   */\n      jump(tag_164)\n    tag_163:\n        /* \"--CODEGEN--\":1602:1605   */\n      dup3\n        /* \"--CODEGEN--\":1595:1629   */\n      mstore\n        /* \"--CODEGEN--\":1589:1634   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1641:1754   */\n    tag_165:\n        /* \"--CODEGEN--\":1724:1748   */\n      tag_167\n        /* \"--CODEGEN--\":1742:1747   */\n      dup2\n        /* \"--CODEGEN--\":1724:1748   */\n      jump(tag_168)\n    tag_167:\n        /* \"--CODEGEN--\":1719:1722   */\n      dup3\n        /* \"--CODEGEN--\":1712:1749   */\n      mstore\n        /* \"--CODEGEN--\":1706:1754   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":1762:2133   */\n    tag_169:\n      0x00\n        /* \"--CODEGEN--\":1922:1989   */\n      tag_171\n        /* \"--CODEGEN--\":1986:1988   */\n      0x22\n        /* \"--CODEGEN--\":1981:1984   */\n      dup4\n        /* \"--CODEGEN--\":1922:1989   */\n      jump(tag_172)\n    tag_171:\n        /* \"--CODEGEN--\":1915:1989   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":2022:2056   */\n      0x456e756d657261626c655365743a20696e646578206f7574206f6620626f756e\n        /* \"--CODEGEN--\":2018:2019   */\n      0x00\n        /* \"--CODEGEN--\":2013:2016   */\n      dup4\n        /* \"--CODEGEN--\":2009:2020   */\n      add\n        /* \"--CODEGEN--\":2002:2057   */\n      mstore\n        /* \"--CODEGEN--\":2091:2095   */\n      0x6473000000000000000000000000000000000000000000000000000000000000\n        /* \"--CODEGEN--\":2086:2088   */\n      0x20\n        /* \"--CODEGEN--\":2081:2084   */\n      dup4\n        /* \"--CODEGEN--\":2077:2089   */\n      add\n        /* \"--CODEGEN--\":2070:2096   */\n      mstore\n        /* \"--CODEGEN--\":2124:2126   */\n      0x40\n        /* \"--CODEGEN--\":2119:2122   */\n      dup3\n        /* \"--CODEGEN--\":2115:2127   */\n      add\n        /* \"--CODEGEN--\":2108:2127   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":1908:2133   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":2142:2526   */\n    tag_173:\n      0x00\n        /* \"--CODEGEN--\":2302:2369   */\n      tag_175\n        /* \"--CODEGEN--\":2366:2368   */\n      0x2f\n        /* \"--CODEGEN--\":2361:2364   */\n      dup4\n        /* \"--CODEGEN--\":2302:2369   */\n      jump(tag_172)\n    tag_175:\n        /* \"--CODEGEN--\":2295:2369   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":2402:2436   */\n      0x416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e\n        /* \"--CODEGEN--\":2398:2399   */\n      0x00\n        /* \"--CODEGEN--\":2393:2396   */\n      dup4\n        /* \"--CODEGEN--\":2389:2400   */\n      add\n        /* \"--CODEGEN--\":2382:2437   */\n      mstore\n        /* \"--CODEGEN--\":2471:2488   */\n      0x2061646d696e20746f206772616e740000000000000000000000000000000000\n        /* \"--CODEGEN--\":2466:2468   */\n      0x20\n        /* \"--CODEGEN--\":2461:2464   */\n      dup4\n        /* \"--CODEGEN--\":2457:2469   */\n      add\n        /* \"--CODEGEN--\":2450:2489   */\n      mstore\n        /* \"--CODEGEN--\":2517:2519   */\n      0x40\n        /* \"--CODEGEN--\":2512:2515   */\n      dup3\n        /* \"--CODEGEN--\":2508:2520   */\n      add\n        /* \"--CODEGEN--\":2501:2520   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2288:2526   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":2535:2920   */\n    tag_176:\n      0x00\n        /* \"--CODEGEN--\":2695:2762   */\n      tag_178\n        /* \"--CODEGEN--\":2759:2761   */\n      0x30\n        /* \"--CODEGEN--\":2754:2757   */\n      dup4\n        /* \"--CODEGEN--\":2695:2762   */\n      jump(tag_172)\n    tag_178:\n        /* \"--CODEGEN--\":2688:2762   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":2795:2829   */\n      0x416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e\n        /* \"--CODEGEN--\":2791:2792   */\n      0x00\n        /* \"--CODEGEN--\":2786:2789   */\n      dup4\n        /* \"--CODEGEN--\":2782:2793   */\n      add\n        /* \"--CODEGEN--\":2775:2830   */\n      mstore\n        /* \"--CODEGEN--\":2864:2882   */\n      0x2061646d696e20746f207265766f6b6500000000000000000000000000000000\n        /* \"--CODEGEN--\":2859:2861   */\n      0x20\n        /* \"--CODEGEN--\":2854:2857   */\n      dup4\n        /* \"--CODEGEN--\":2850:2862   */\n      add\n        /* \"--CODEGEN--\":2843:2883   */\n      mstore\n        /* \"--CODEGEN--\":2911:2913   */\n      0x40\n        /* \"--CODEGEN--\":2906:2909   */\n      dup3\n        /* \"--CODEGEN--\":2902:2914   */\n      add\n        /* \"--CODEGEN--\":2895:2914   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":2681:2920   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":2929:3313   */\n    tag_179:\n      0x00\n        /* \"--CODEGEN--\":3089:3156   */\n      tag_181\n        /* \"--CODEGEN--\":3153:3155   */\n      0x2f\n        /* \"--CODEGEN--\":3148:3151   */\n      dup4\n        /* \"--CODEGEN--\":3089:3156   */\n      jump(tag_172)\n    tag_181:\n        /* \"--CODEGEN--\":3082:3156   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":3189:3223   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"--CODEGEN--\":3185:3186   */\n      0x00\n        /* \"--CODEGEN--\":3180:3183   */\n      dup4\n        /* \"--CODEGEN--\":3176:3187   */\n      add\n        /* \"--CODEGEN--\":3169:3224   */\n      mstore\n        /* \"--CODEGEN--\":3258:3275   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"--CODEGEN--\":3253:3255   */\n      0x20\n        /* \"--CODEGEN--\":3248:3251   */\n      dup4\n        /* \"--CODEGEN--\":3244:3256   */\n      add\n        /* \"--CODEGEN--\":3237:3276   */\n      mstore\n        /* \"--CODEGEN--\":3304:3306   */\n      0x40\n        /* \"--CODEGEN--\":3299:3302   */\n      dup3\n        /* \"--CODEGEN--\":3295:3307   */\n      add\n        /* \"--CODEGEN--\":3288:3307   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3075:3313   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":3321:3434   */\n    tag_182:\n        /* \"--CODEGEN--\":3404:3428   */\n      tag_184\n        /* \"--CODEGEN--\":3422:3427   */\n      dup2\n        /* \"--CODEGEN--\":3404:3428   */\n      jump(tag_185)\n    tag_184:\n        /* \"--CODEGEN--\":3399:3402   */\n      dup3\n        /* \"--CODEGEN--\":3392:3429   */\n      mstore\n        /* \"--CODEGEN--\":3386:3434   */\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3441:3654   */\n    tag_35:\n      0x00\n        /* \"--CODEGEN--\":3559:3561   */\n      0x20\n        /* \"--CODEGEN--\":3548:3557   */\n      dup3\n        /* \"--CODEGEN--\":3544:3562   */\n      add\n        /* \"--CODEGEN--\":3536:3562   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3573:3644   */\n      tag_187\n        /* \"--CODEGEN--\":3641:3642   */\n      0x00\n        /* \"--CODEGEN--\":3630:3639   */\n      dup4\n        /* \"--CODEGEN--\":3626:3643   */\n      add\n        /* \"--CODEGEN--\":3617:3623   */\n      dup5\n        /* \"--CODEGEN--\":3573:3644   */\n      jump(tag_157)\n    tag_187:\n        /* \"--CODEGEN--\":3530:3654   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3661:3862   */\n    tag_29:\n      0x00\n        /* \"--CODEGEN--\":3773:3775   */\n      0x20\n        /* \"--CODEGEN--\":3762:3771   */\n      dup3\n        /* \"--CODEGEN--\":3758:3776   */\n      add\n        /* \"--CODEGEN--\":3750:3776   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":3787:3852   */\n      tag_189\n        /* \"--CODEGEN--\":3849:3850   */\n      0x00\n        /* \"--CODEGEN--\":3838:3847   */\n      dup4\n        /* \"--CODEGEN--\":3834:3851   */\n      add\n        /* \"--CODEGEN--\":3825:3831   */\n      dup5\n        /* \"--CODEGEN--\":3787:3852   */\n      jump(tag_161)\n    tag_189:\n        /* \"--CODEGEN--\":3744:3862   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":3869:4082   */\n    tag_18:\n      0x00\n        /* \"--CODEGEN--\":3987:3989   */\n      0x20\n        /* \"--CODEGEN--\":3976:3985   */\n      dup3\n        /* \"--CODEGEN--\":3972:3990   */\n      add\n        /* \"--CODEGEN--\":3964:3990   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":4001:4072   */\n      tag_191\n        /* \"--CODEGEN--\":4069:4070   */\n      0x00\n        /* \"--CODEGEN--\":4058:4067   */\n      dup4\n        /* \"--CODEGEN--\":4054:4071   */\n      add\n        /* \"--CODEGEN--\":4045:4051   */\n      dup5\n        /* \"--CODEGEN--\":4001:4072   */\n      jump(tag_165)\n    tag_191:\n        /* \"--CODEGEN--\":3958:4082   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":4089:4496   */\n    tag_114:\n      0x00\n        /* \"--CODEGEN--\":4280:4282   */\n      0x20\n        /* \"--CODEGEN--\":4269:4278   */\n      dup3\n        /* \"--CODEGEN--\":4265:4283   */\n      add\n        /* \"--CODEGEN--\":4257:4283   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":4330:4339   */\n      dup2\n        /* \"--CODEGEN--\":4324:4328   */\n      dup2\n        /* \"--CODEGEN--\":4320:4340   */\n      sub\n        /* \"--CODEGEN--\":4316:4317   */\n      0x00\n        /* \"--CODEGEN--\":4305:4314   */\n      dup4\n        /* \"--CODEGEN--\":4301:4318   */\n      add\n        /* \"--CODEGEN--\":4294:4341   */\n      mstore\n        /* \"--CODEGEN--\":4355:4486   */\n      tag_193\n        /* \"--CODEGEN--\":4481:4485   */\n      dup2\n        /* \"--CODEGEN--\":4355:4486   */\n      jump(tag_169)\n    tag_193:\n        /* \"--CODEGEN--\":4347:4486   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":4251:4496   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":4503:4910   */\n    tag_58:\n      0x00\n        /* \"--CODEGEN--\":4694:4696   */\n      0x20\n        /* \"--CODEGEN--\":4683:4692   */\n      dup3\n        /* \"--CODEGEN--\":4679:4697   */\n      add\n        /* \"--CODEGEN--\":4671:4697   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":4744:4753   */\n      dup2\n        /* \"--CODEGEN--\":4738:4742   */\n      dup2\n        /* \"--CODEGEN--\":4734:4754   */\n      sub\n        /* \"--CODEGEN--\":4730:4731   */\n      0x00\n        /* \"--CODEGEN--\":4719:4728   */\n      dup4\n        /* \"--CODEGEN--\":4715:4732   */\n      add\n        /* \"--CODEGEN--\":4708:4755   */\n      mstore\n        /* \"--CODEGEN--\":4769:4900   */\n      tag_195\n        /* \"--CODEGEN--\":4895:4899   */\n      dup2\n        /* \"--CODEGEN--\":4769:4900   */\n      jump(tag_173)\n    tag_195:\n        /* \"--CODEGEN--\":4761:4900   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":4665:4910   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":4917:5324   */\n    tag_83:\n      0x00\n        /* \"--CODEGEN--\":5108:5110   */\n      0x20\n        /* \"--CODEGEN--\":5097:5106   */\n      dup3\n        /* \"--CODEGEN--\":5093:5111   */\n      add\n        /* \"--CODEGEN--\":5085:5111   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":5158:5167   */\n      dup2\n        /* \"--CODEGEN--\":5152:5156   */\n      dup2\n        /* \"--CODEGEN--\":5148:5168   */\n      sub\n        /* \"--CODEGEN--\":5144:5145   */\n      0x00\n        /* \"--CODEGEN--\":5133:5142   */\n      dup4\n        /* \"--CODEGEN--\":5129:5146   */\n      add\n        /* \"--CODEGEN--\":5122:5169   */\n      mstore\n        /* \"--CODEGEN--\":5183:5314   */\n      tag_197\n        /* \"--CODEGEN--\":5309:5313   */\n      dup2\n        /* \"--CODEGEN--\":5183:5314   */\n      jump(tag_176)\n    tag_197:\n        /* \"--CODEGEN--\":5175:5314   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":5079:5324   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":5331:5738   */\n    tag_65:\n      0x00\n        /* \"--CODEGEN--\":5522:5524   */\n      0x20\n        /* \"--CODEGEN--\":5511:5520   */\n      dup3\n        /* \"--CODEGEN--\":5507:5525   */\n      add\n        /* \"--CODEGEN--\":5499:5525   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":5572:5581   */\n      dup2\n        /* \"--CODEGEN--\":5566:5570   */\n      dup2\n        /* \"--CODEGEN--\":5562:5582   */\n      sub\n        /* \"--CODEGEN--\":5558:5559   */\n      0x00\n        /* \"--CODEGEN--\":5547:5556   */\n      dup4\n        /* \"--CODEGEN--\":5543:5560   */\n      add\n        /* \"--CODEGEN--\":5536:5583   */\n      mstore\n        /* \"--CODEGEN--\":5597:5728   */\n      tag_199\n        /* \"--CODEGEN--\":5723:5727   */\n      dup2\n        /* \"--CODEGEN--\":5597:5728   */\n      jump(tag_179)\n    tag_199:\n        /* \"--CODEGEN--\":5589:5728   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":5493:5738   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":5745:5958   */\n    tag_47:\n      0x00\n        /* \"--CODEGEN--\":5863:5865   */\n      0x20\n        /* \"--CODEGEN--\":5852:5861   */\n      dup3\n        /* \"--CODEGEN--\":5848:5866   */\n      add\n        /* \"--CODEGEN--\":5840:5866   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":5877:5948   */\n      tag_201\n        /* \"--CODEGEN--\":5945:5946   */\n      0x00\n        /* \"--CODEGEN--\":5934:5943   */\n      dup4\n        /* \"--CODEGEN--\":5930:5947   */\n      add\n        /* \"--CODEGEN--\":5921:5927   */\n      dup5\n        /* \"--CODEGEN--\":5877:5948   */\n      jump(tag_182)\n    tag_201:\n        /* \"--CODEGEN--\":5834:5958   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":5966:6129   */\n    tag_172:\n      0x00\n        /* \"--CODEGEN--\":6081:6087   */\n      dup3\n        /* \"--CODEGEN--\":6076:6079   */\n      dup3\n        /* \"--CODEGEN--\":6069:6088   */\n      mstore\n        /* \"--CODEGEN--\":6118:6122   */\n      0x20\n        /* \"--CODEGEN--\":6113:6116   */\n      dup3\n        /* \"--CODEGEN--\":6109:6123   */\n      add\n        /* \"--CODEGEN--\":6094:6123   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":6062:6129   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\n        /* \"--CODEGEN--\":6137:6228   */\n    tag_160:\n      0x00\n        /* \"--CODEGEN--\":6199:6223   */\n      tag_204\n        /* \"--CODEGEN--\":6217:6222   */\n      dup3\n        /* \"--CODEGEN--\":6199:6223   */\n      jump(tag_205)\n    tag_204:\n        /* \"--CODEGEN--\":6188:6223   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":6182:6228   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":6235:6320   */\n    tag_164:\n      0x00\n        /* \"--CODEGEN--\":6308:6313   */\n      dup2\n        /* \"--CODEGEN--\":6301:6314   */\n      iszero\n        /* \"--CODEGEN--\":6294:6315   */\n      iszero\n        /* \"--CODEGEN--\":6283:6315   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":6277:6320   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":6327:6399   */\n    tag_168:\n      0x00\n        /* \"--CODEGEN--\":6389:6394   */\n      dup2\n        /* \"--CODEGEN--\":6378:6394   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":6372:6399   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":6406:6527   */\n    tag_205:\n      0x00\n        /* \"--CODEGEN--\":6479:6521   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":6472:6477   */\n      dup3\n        /* \"--CODEGEN--\":6468:6522   */\n      and\n        /* \"--CODEGEN--\":6457:6522   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":6451:6527   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":6534:6606   */\n    tag_185:\n      0x00\n        /* \"--CODEGEN--\":6596:6601   */\n      dup2\n        /* \"--CODEGEN--\":6585:6601   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":6579:6606   */\n      swap2\n      swap1\n      pop\n      jump\n        /* \"--CODEGEN--\":6613:6730   */\n    tag_137:\n        /* \"--CODEGEN--\":6682:6706   */\n      tag_211\n        /* \"--CODEGEN--\":6700:6705   */\n      dup2\n        /* \"--CODEGEN--\":6682:6706   */\n      jump(tag_160)\n    tag_211:\n        /* \"--CODEGEN--\":6675:6680   */\n      dup2\n        /* \"--CODEGEN--\":6672:6707   */\n      eq\n        /* \"--CODEGEN--\":6662:6664   */\n      tag_212\n      jumpi\n        /* \"--CODEGEN--\":6721:6722   */\n      0x00\n        /* \"--CODEGEN--\":6718:6719   */\n      dup1\n        /* \"--CODEGEN--\":6711:6723   */\n      revert\n        /* \"--CODEGEN--\":6662:6664   */\n    tag_212:\n        /* \"--CODEGEN--\":6656:6730   */\n      pop\n      jump\n        /* \"--CODEGEN--\":6737:6854   */\n    tag_141:\n        /* \"--CODEGEN--\":6806:6830   */\n      tag_214\n        /* \"--CODEGEN--\":6824:6829   */\n      dup2\n        /* \"--CODEGEN--\":6806:6830   */\n      jump(tag_168)\n    tag_214:\n        /* \"--CODEGEN--\":6799:6804   */\n      dup2\n        /* \"--CODEGEN--\":6796:6831   */\n      eq\n        /* \"--CODEGEN--\":6786:6788   */\n      tag_215\n      jumpi\n        /* \"--CODEGEN--\":6845:6846   */\n      0x00\n        /* \"--CODEGEN--\":6842:6843   */\n      dup1\n        /* \"--CODEGEN--\":6835:6847   */\n      revert\n        /* \"--CODEGEN--\":6786:6788   */\n    tag_215:\n        /* \"--CODEGEN--\":6780:6854   */\n      pop\n      jump\n        /* \"--CODEGEN--\":6861:6978   */\n    tag_145:\n        /* \"--CODEGEN--\":6930:6954   */\n      tag_217\n        /* \"--CODEGEN--\":6948:6953   */\n      dup2\n        /* \"--CODEGEN--\":6930:6954   */\n      jump(tag_185)\n    tag_217:\n        /* \"--CODEGEN--\":6923:6928   */\n      dup2\n        /* \"--CODEGEN--\":6920:6955   */\n      eq\n        /* \"--CODEGEN--\":6910:6912   */\n      tag_218\n      jumpi\n        /* \"--CODEGEN--\":6969:6970   */\n      0x00\n        /* \"--CODEGEN--\":6966:6967   */\n      dup1\n        /* \"--CODEGEN--\":6959:6971   */\n      revert\n        /* \"--CODEGEN--\":6910:6912   */\n    tag_218:\n        /* \"--CODEGEN--\":6904:6978   */\n      pop\n      jump\n\n    auxdata: 0xa2646970667358221220dc8b5be6c8094df1edb98c54cb9087a9caf85de6f6040e642863c432ac64824364736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff021916908315150217905550610c818061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80639010d07c116100665780639010d07c1461011e57806391d148541461014e578063a217fddf1461017e578063ca15c8731461019c578063d547741f146101cc57610093565b8063248a9ca3146100985780632f2ff15d146100c857806336568abe146100e45780635c975abb14610100575b600080fd5b6100b260048036038101906100ad9190610842565b6101e8565b6040516100bf9190610aed565b60405180910390f35b6100e260048036038101906100dd919061086b565b610208565b005b6100fe60048036038101906100f9919061086b565b61027c565b005b6101086102ff565b6040516101159190610ad2565b60405180910390f35b610138600480360381019061013391906108a7565b610315565b6040516101459190610ab7565b60405180910390f35b6101686004803603810190610163919061086b565b610347565b6040516101759190610ad2565b60405180910390f35b610186610379565b6040516101939190610aed565b60405180910390f35b6101b660048036038101906101b19190610842565b610380565b6040516101c39190610b88565b60405180910390f35b6101e660048036038101906101e1919061086b565b6103a7565b005b600060016000838152602001908152602001600020600201549050919050565b61022f600160008481526020019081526020016000206002015461022a61041b565b610347565b61026e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026590610b28565b60405180910390fd5b6102788282610423565b5050565b61028461041b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146102f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e890610b68565b60405180910390fd5b6102fb82826104b7565b5050565b60008060009054906101000a900460ff16905090565b600061033f826001600086815260200190815260200160002060000161054b90919063ffffffff16565b905092915050565b6000610371826001600086815260200190815260200160002060000161056590919063ffffffff16565b905092915050565b6000801b81565b60006103a060016000848152602001908152602001600020600001610595565b9050919050565b6103ce60016000848152602001908152602001600020600201546103c961041b565b610347565b61040d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040490610b48565b60405180910390fd5b61041782826104b7565b5050565b600033905090565b61044b81600160008581526020019081526020016000206000016105aa90919063ffffffff16565b156104b35761045861041b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6104df81600160008581526020019081526020016000206000016105da90919063ffffffff16565b15610547576104ec61041b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600061055a836000018361060a565b60001c905092915050565b600061058d836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610677565b905092915050565b60006105a38260000161069a565b9050919050565b60006105d2836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6106ab565b905092915050565b6000610602836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61071b565b905092915050565b600081836000018054905011610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90610b08565b60405180910390fd5b82600001828154811061066457fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b60006106b78383610677565b610710578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610715565b600090505b92915050565b600080836001016000848152602001908152602001600020549050600081146107f7576000600182039050600060018660000180549050039050600086600001828154811061076657fe5b906000526020600020015490508087600001848154811061078357fe5b90600052602060002001819055506001830187600101600083815260200190815260200160002081905550866000018054806107bb57fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506107fd565b60009150505b92915050565b60008135905061081281610c06565b92915050565b60008135905061082781610c1d565b92915050565b60008135905061083c81610c34565b92915050565b60006020828403121561085457600080fd5b600061086284828501610818565b91505092915050565b6000806040838503121561087e57600080fd5b600061088c85828601610818565b925050602061089d85828601610803565b9150509250929050565b600080604083850312156108ba57600080fd5b60006108c885828601610818565b92505060206108d98582860161082d565b9150509250929050565b6108ec81610bb4565b82525050565b6108fb81610bc6565b82525050565b61090a81610bd2565b82525050565b600061091d602283610ba3565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610983602f83610ba3565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b60006109e9603083610ba3565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b6000610a4f602f83610ba3565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b610ab181610bfc565b82525050565b6000602082019050610acc60008301846108e3565b92915050565b6000602082019050610ae760008301846108f2565b92915050565b6000602082019050610b026000830184610901565b92915050565b60006020820190508181036000830152610b2181610910565b9050919050565b60006020820190508181036000830152610b4181610976565b9050919050565b60006020820190508181036000830152610b61816109dc565b9050919050565b60006020820190508181036000830152610b8181610a42565b9050919050565b6000602082019050610b9d6000830184610aa8565b92915050565b600082825260208201905092915050565b6000610bbf82610bdc565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610c0f81610bb4565b8114610c1a57600080fd5b50565b610c2681610bd2565b8114610c3157600080fd5b50565b610c3d81610bfc565b8114610c4857600080fd5b5056fea2646970667358221220dc8b5be6c8094df1edb98c54cb9087a9caf85de6f6040e642863c432ac64824364736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xC81 DUP1 PUSH2 0x2D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9010D07C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1CC JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x100 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x842 JUMP JUMPDEST PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xAED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x208 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x27C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x193 SWAP2 SWAP1 PUSH2 0xAED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x842 JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x3A7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22F PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x22A PUSH2 0x41B JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH2 0x26E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x265 SWAP1 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x278 DUP3 DUP3 PUSH2 0x423 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x284 PUSH2 0x41B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E8 SWAP1 PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FB DUP3 DUP3 PUSH2 0x4B7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33F DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x54B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x371 DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x565 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x595 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x3C9 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH2 0x40D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x404 SWAP1 PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x417 DUP3 DUP3 PUSH2 0x4B7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x44B DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x5AA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x4B3 JUMPI PUSH2 0x458 PUSH2 0x41B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4DF DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x5DA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x547 JUMPI PUSH2 0x4EC PUSH2 0x41B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55A DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x677 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A3 DUP3 PUSH1 0x0 ADD PUSH2 0x69A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x6AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x602 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x71B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64C SWAP1 PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x664 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B7 DUP4 DUP4 PUSH2 0x677 JUMP JUMPDEST PUSH2 0x710 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x715 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x7F7 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SUB SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x766 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x783 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 ADD DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x7BB JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x812 DUP2 PUSH2 0xC06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x827 DUP2 PUSH2 0xC1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x83C DUP2 PUSH2 0xC34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x862 DUP5 DUP3 DUP6 ADD PUSH2 0x818 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x87E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x88C DUP6 DUP3 DUP7 ADD PUSH2 0x818 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x89D DUP6 DUP3 DUP7 ADD PUSH2 0x803 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8C8 DUP6 DUP3 DUP7 ADD PUSH2 0x818 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8D9 DUP6 DUP3 DUP7 ADD PUSH2 0x82D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EC DUP2 PUSH2 0xBB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x8FB DUP2 PUSH2 0xBC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x90A DUP2 PUSH2 0xBD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91D PUSH1 0x22 DUP4 PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP PUSH32 0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6473000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x983 PUSH1 0x2F DUP4 PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x2061646D696E20746F206772616E740000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E9 PUSH1 0x30 DUP4 PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x2061646D696E20746F207265766F6B6500000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4F PUSH1 0x2F DUP4 PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB1 DUP2 PUSH2 0xBFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xACC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAE7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB02 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x901 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB21 DUP2 PUSH2 0x910 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB41 DUP2 PUSH2 0x976 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB61 DUP2 PUSH2 0x9DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB81 DUP2 PUSH2 0xA42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB9D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBF DUP3 PUSH2 0xBDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC0F DUP2 PUSH2 0xBB4 JUMP JUMPDEST DUP2 EQ PUSH2 0xC1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC26 DUP2 PUSH2 0xBD2 JUMP JUMPDEST DUP2 EQ PUSH2 0xC31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC3D DUP2 PUSH2 0xBFC JUMP JUMPDEST DUP2 EQ PUSH2 0xC48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC DUP12 JUMPDEST 0xE6 0xC8 MULMOD 0x4D CALL 0xED 0xB9 DUP13 SLOAD 0xCB SWAP1 DUP8 0xA9 0xCA 0xF8 0x5D 0xE6 0xF6 DIV 0xE PUSH5 0x2863C432AC PUSH5 0x824364736F PUSH13 0x63430006040033000000000000 ",
							"sourceMap": "457:57:1:-:0;;;782:5:9;772:7;;:15;;;;;;;;;;;;;;;;;;457:57:1;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c80639010d07c116100665780639010d07c1461011e57806391d148541461014e578063a217fddf1461017e578063ca15c8731461019c578063d547741f146101cc57610093565b8063248a9ca3146100985780632f2ff15d146100c857806336568abe146100e45780635c975abb14610100575b600080fd5b6100b260048036038101906100ad9190610842565b6101e8565b6040516100bf9190610aed565b60405180910390f35b6100e260048036038101906100dd919061086b565b610208565b005b6100fe60048036038101906100f9919061086b565b61027c565b005b6101086102ff565b6040516101159190610ad2565b60405180910390f35b610138600480360381019061013391906108a7565b610315565b6040516101459190610ab7565b60405180910390f35b6101686004803603810190610163919061086b565b610347565b6040516101759190610ad2565b60405180910390f35b610186610379565b6040516101939190610aed565b60405180910390f35b6101b660048036038101906101b19190610842565b610380565b6040516101c39190610b88565b60405180910390f35b6101e660048036038101906101e1919061086b565b6103a7565b005b600060016000838152602001908152602001600020600201549050919050565b61022f600160008481526020019081526020016000206002015461022a61041b565b610347565b61026e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026590610b28565b60405180910390fd5b6102788282610423565b5050565b61028461041b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146102f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e890610b68565b60405180910390fd5b6102fb82826104b7565b5050565b60008060009054906101000a900460ff16905090565b600061033f826001600086815260200190815260200160002060000161054b90919063ffffffff16565b905092915050565b6000610371826001600086815260200190815260200160002060000161056590919063ffffffff16565b905092915050565b6000801b81565b60006103a060016000848152602001908152602001600020600001610595565b9050919050565b6103ce60016000848152602001908152602001600020600201546103c961041b565b610347565b61040d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040490610b48565b60405180910390fd5b61041782826104b7565b5050565b600033905090565b61044b81600160008581526020019081526020016000206000016105aa90919063ffffffff16565b156104b35761045861041b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6104df81600160008581526020019081526020016000206000016105da90919063ffffffff16565b15610547576104ec61041b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600061055a836000018361060a565b60001c905092915050565b600061058d836000018373ffffffffffffffffffffffffffffffffffffffff1660001b610677565b905092915050565b60006105a38260000161069a565b9050919050565b60006105d2836000018373ffffffffffffffffffffffffffffffffffffffff1660001b6106ab565b905092915050565b6000610602836000018373ffffffffffffffffffffffffffffffffffffffff1660001b61071b565b905092915050565b600081836000018054905011610655576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064c90610b08565b60405180910390fd5b82600001828154811061066457fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b60006106b78383610677565b610710578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050610715565b600090505b92915050565b600080836001016000848152602001908152602001600020549050600081146107f7576000600182039050600060018660000180549050039050600086600001828154811061076657fe5b906000526020600020015490508087600001848154811061078357fe5b90600052602060002001819055506001830187600101600083815260200190815260200160002081905550866000018054806107bb57fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506107fd565b60009150505b92915050565b60008135905061081281610c06565b92915050565b60008135905061082781610c1d565b92915050565b60008135905061083c81610c34565b92915050565b60006020828403121561085457600080fd5b600061086284828501610818565b91505092915050565b6000806040838503121561087e57600080fd5b600061088c85828601610818565b925050602061089d85828601610803565b9150509250929050565b600080604083850312156108ba57600080fd5b60006108c885828601610818565b92505060206108d98582860161082d565b9150509250929050565b6108ec81610bb4565b82525050565b6108fb81610bc6565b82525050565b61090a81610bd2565b82525050565b600061091d602283610ba3565b91507f456e756d657261626c655365743a20696e646578206f7574206f6620626f756e60008301527f64730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610983602f83610ba3565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f206772616e7400000000000000000000000000000000006020830152604082019050919050565b60006109e9603083610ba3565b91507f416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e60008301527f2061646d696e20746f207265766f6b65000000000000000000000000000000006020830152604082019050919050565b6000610a4f602f83610ba3565b91507f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008301527f20726f6c657320666f722073656c6600000000000000000000000000000000006020830152604082019050919050565b610ab181610bfc565b82525050565b6000602082019050610acc60008301846108e3565b92915050565b6000602082019050610ae760008301846108f2565b92915050565b6000602082019050610b026000830184610901565b92915050565b60006020820190508181036000830152610b2181610910565b9050919050565b60006020820190508181036000830152610b4181610976565b9050919050565b60006020820190508181036000830152610b61816109dc565b9050919050565b60006020820190508181036000830152610b8181610a42565b9050919050565b6000602082019050610b9d6000830184610aa8565b92915050565b600082825260208201905092915050565b6000610bbf82610bdc565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b610c0f81610bb4565b8114610c1a57600080fd5b50565b610c2681610bd2565b8114610c3157600080fd5b50565b610c3d81610bfc565b8114610c4857600080fd5b5056fea2646970667358221220dc8b5be6c8094df1edb98c54cb9087a9caf85de6f6040e642863c432ac64824364736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9010D07C GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x19C JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1CC JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x100 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x842 JUMP JUMPDEST PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0xAED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x208 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x27C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x108 PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x138 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x315 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x145 SWAP2 SWAP1 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x168 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x193 SWAP2 SWAP1 PUSH2 0xAED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x842 JUMP JUMPDEST PUSH2 0x380 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0xB88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x3A7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22F PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x22A PUSH2 0x41B JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH2 0x26E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x265 SWAP1 PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x278 DUP3 DUP3 PUSH2 0x423 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x284 PUSH2 0x41B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E8 SWAP1 PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FB DUP3 DUP3 PUSH2 0x4B7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33F DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x54B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x371 DUP3 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x565 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A0 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x595 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CE PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x3C9 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH2 0x40D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x404 SWAP1 PUSH2 0xB48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x417 DUP3 DUP3 PUSH2 0x4B7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x44B DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x5AA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x4B3 JUMPI PUSH2 0x458 PUSH2 0x41B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4DF DUP2 PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH2 0x5DA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST ISZERO PUSH2 0x547 JUMPI PUSH2 0x4EC PUSH2 0x41B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x55A DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x60A JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x58D DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x677 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A3 DUP3 PUSH1 0x0 ADD PUSH2 0x69A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D2 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x6AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x602 DUP4 PUSH1 0x0 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SHL PUSH2 0x71B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP GT PUSH2 0x655 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x64C SWAP1 PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x664 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B7 DUP4 DUP4 PUSH2 0x677 JUMP JUMPDEST PUSH2 0x710 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x715 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x7F7 JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 SUB SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SUB SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x766 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x783 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP4 ADD DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP7 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x7BB JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x812 DUP2 PUSH2 0xC06 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x827 DUP2 PUSH2 0xC1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x83C DUP2 PUSH2 0xC34 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x862 DUP5 DUP3 DUP6 ADD PUSH2 0x818 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x87E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x88C DUP6 DUP3 DUP7 ADD PUSH2 0x818 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x89D DUP6 DUP3 DUP7 ADD PUSH2 0x803 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8C8 DUP6 DUP3 DUP7 ADD PUSH2 0x818 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x8D9 DUP6 DUP3 DUP7 ADD PUSH2 0x82D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EC DUP2 PUSH2 0xBB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x8FB DUP2 PUSH2 0xBC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x90A DUP2 PUSH2 0xBD2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91D PUSH1 0x22 DUP4 PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP PUSH32 0x456E756D657261626C655365743A20696E646578206F7574206F6620626F756E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6473000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x983 PUSH1 0x2F DUP4 PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x2061646D696E20746F206772616E740000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9E9 PUSH1 0x30 DUP4 PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP PUSH32 0x416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x2061646D696E20746F207265766F6B6500000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA4F PUSH1 0x2F DUP4 PUSH2 0xBA3 JUMP JUMPDEST SWAP2 POP PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAB1 DUP2 PUSH2 0xBFC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xACC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8E3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xAE7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8F2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB02 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x901 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB21 DUP2 PUSH2 0x910 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB41 DUP2 PUSH2 0x976 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB61 DUP2 PUSH2 0x9DC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB81 DUP2 PUSH2 0xA42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB9D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xAA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBBF DUP3 PUSH2 0xBDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC0F DUP2 PUSH2 0xBB4 JUMP JUMPDEST DUP2 EQ PUSH2 0xC1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC26 DUP2 PUSH2 0xBD2 JUMP JUMPDEST DUP2 EQ PUSH2 0xC31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xC3D DUP2 PUSH2 0xBFC JUMP JUMPDEST DUP2 EQ PUSH2 0xC48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC DUP12 JUMPDEST 0xE6 0xC8 MULMOD 0x4D CALL 0xED 0xB9 DUP13 SLOAD 0xCB SWAP1 DUP8 0xA9 0xCA 0xF8 0x5D 0xE6 0xF6 DIV 0xE PUSH5 0x2863C432AC PUSH5 0x824364736F PUSH13 0x63430006040033000000000000 ",
							"sourceMap": "457:57:1:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;457:57:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;3826:112:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4188:223;;;;;;;;;;;;;;;;:::i;:::-;;5362:205;;;;;;;;;;;;;;;;:::i;:::-;;889:76:9;;;:::i;:::-;;;;;;;;;;;;;;;;3509:136:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2494:137;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1684:49;;;:::i;:::-;;;;;;;;;;;;;;;;2799:125;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4645:226;;;;;;;;;;;;;;;;:::i;:::-;;3826:112;3883:7;3909:6;:12;3916:4;3909:12;;;;;;;;;;;:22;;;3902:29;;3826:112;;;:::o;4188:223::-;4271:45;4279:6;:12;4286:4;4279:12;;;;;;;;;;;:22;;;4303:12;:10;:12::i;:::-;4271:7;:45::i;:::-;4263:105;;;;;;;;;;;;;;;;;;;;;;4379:25;4390:4;4396:7;4379:10;:25::i;:::-;4188:223;;:::o;5362:205::-;5459:12;:10;:12::i;:::-;5448:23;;:7;:23;;;5440:83;;;;;;;;;;;;;;;;;;;;;;5534:26;5546:4;5552:7;5534:11;:26::i;:::-;5362:205;;:::o;889:76:9:-;928:4;951:7;;;;;;;;;;;944:14;;889:76;:::o;3509:136:2:-;3582:7;3608:30;3632:5;3608:6;:12;3615:4;3608:12;;;;;;;;;;;:20;;:23;;:30;;;;:::i;:::-;3601:37;;3509:136;;;;:::o;2494:137::-;2563:4;2586:38;2616:7;2586:6;:12;2593:4;2586:12;;;;;;;;;;;:20;;:29;;:38;;;;:::i;:::-;2579:45;;2494:137;;;;:::o;1684:49::-;1729:4;1684:49;;;:::o;2799:125::-;2862:7;2888:29;:6;:12;2895:4;2888:12;;;;;;;;;;;:20;;:27;:29::i;:::-;2881:36;;2799:125;;;:::o;4645:226::-;4729:45;4737:6;:12;4744:4;4737:12;;;;;;;;;;;:22;;;4761:12;:10;:12::i;:::-;4729:7;:45::i;:::-;4721:106;;;;;;;;;;;;;;;;;;;;;;4838:26;4850:4;4856:7;4838:11;:26::i;:::-;4645:226;;:::o;735:104:0:-;788:15;822:10;815:17;;735:104;:::o;6449:184:2:-;6522:33;6547:7;6522:6;:12;6529:4;6522:12;;;;;;;;;;;:20;;:24;;:33;;;;:::i;:::-;6518:109;;;6603:12;:10;:12::i;:::-;6576:40;;6594:7;6576:40;;6588:4;6576:40;;;;;;;;;;6518:109;6449:184;;:::o;6639:188::-;6713:36;6741:7;6713:6;:12;6720:4;6713:12;;;;;;;;;;;:20;;:27;;:36;;;;:::i;:::-;6709:112;;;6797:12;:10;:12::i;:::-;6770:40;;6788:7;6770:40;;6782:4;6770:40;;;;;;;;;;6709:112;6639:188;;:::o;6052:147:8:-;6126:7;6168:22;6172:3;:10;;6184:5;6168:3;:22::i;:::-;6160:31;;6145:47;;6052:147;;;;:::o;5368:156::-;5448:4;5471:46;5481:3;:10;;5509:5;5501:14;;5493:23;;5471:9;:46::i;:::-;5464:53;;5368:156;;;;:::o;5605:115::-;5668:7;5694:19;5702:3;:10;;5694:7;:19::i;:::-;5687:26;;5605:115;;;:::o;4831:141::-;4901:4;4924:41;4929:3;:10;;4957:5;4949:14;;4941:23;;4924:4;:41::i;:::-;4917:48;;4831:141;;;;:::o;5140:147::-;5213:4;5236:44;5244:3;:10;;5272:5;5264:14;;5256:23;;5236:7;:44::i;:::-;5229:51;;5140:147;;;;:::o;4390:201::-;4457:7;4505:5;4484:3;:11;;:18;;;;:26;4476:73;;;;;;;;;;;;;;;;;;;;;;4566:3;:11;;4578:5;4566:18;;;;;;;;;;;;;;;;4559:25;;4390:201;;;;:::o;3743:127::-;3816:4;3862:1;3839:3;:12;;:19;3852:5;3839:19;;;;;;;;;;;;:24;;3832:31;;3743:127;;;;:::o;3951:107::-;4007:7;4033:3;:11;;:18;;;;4026:25;;3951:107;;;:::o;1578:404::-;1641:4;1662:21;1672:3;1677:5;1662:9;:21::i;:::-;1657:319;;1699:3;:11;;1716:5;1699:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1699:23:8;;;;;;;;;;;;;;;;;;;1879:3;:11;;:18;;;;1857:3;:12;;:19;1870:5;1857:19;;;;;;;;;;;:40;;;;1918:4;1911:11;;;;1657:319;1960:5;1953:12;;1578:404;;;;;:::o;2150:1512::-;2216:4;2332:18;2353:3;:12;;:19;2366:5;2353:19;;;;;;;;;;;;2332:40;;2401:1;2387:10;:15;2383:1273;;2744:21;2781:1;2768:10;:14;2744:38;;2796:17;2837:1;2816:3;:11;;:18;;;;:22;2796:42;;3078:17;3098:3;:11;;3110:9;3098:22;;;;;;;;;;;;;;;;3078:42;;3241:9;3212:3;:11;;3224:13;3212:26;;;;;;;;;;;;;;;:38;;;;3358:1;3342:13;:17;3316:3;:12;;:23;3329:9;3316:23;;;;;;;;;;;:43;;;;3465:3;:11;;:17;;;;;;;;;;;;;;;;;;;;;;;;3557:3;:12;;:19;3570:5;3557:19;;;;;;;;;;;3550:26;;;3598:4;3591:11;;;;;;;;2383:1273;3640:5;3633:12;;;2150:1512;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:130;;222:6;209:20;200:29;;234:33;261:5;234:33;;;194:78;;;;;279:130;;359:6;346:20;337:29;;371:33;398:5;371:33;;;331:78;;;;;416:241;;520:2;508:9;499:7;495:23;491:32;488:2;;;536:1;533;526:12;488:2;571:1;588:53;633:7;624:6;613:9;609:22;588:53;;;578:63;;550:97;482:175;;;;;664:366;;;785:2;773:9;764:7;760:23;756:32;753:2;;;801:1;798;791:12;753:2;836:1;853:53;898:7;889:6;878:9;874:22;853:53;;;843:63;;815:97;943:2;961:53;1006:7;997:6;986:9;982:22;961:53;;;951:63;;922:98;747:283;;;;;;1037:366;;;1158:2;1146:9;1137:7;1133:23;1129:32;1126:2;;;1174:1;1171;1164:12;1126:2;1209:1;1226:53;1271:7;1262:6;1251:9;1247:22;1226:53;;;1216:63;;1188:97;1316:2;1334:53;1379:7;1370:6;1359:9;1355:22;1334:53;;;1324:63;;1295:98;1120:283;;;;;;1410:113;1493:24;1511:5;1493:24;;;1488:3;1481:37;1475:48;;;1530:104;1607:21;1622:5;1607:21;;;1602:3;1595:34;1589:45;;;1641:113;1724:24;1742:5;1724:24;;;1719:3;1712:37;1706:48;;;1762:371;;1922:67;1986:2;1981:3;1922:67;;;1915:74;;2022:34;2018:1;2013:3;2009:11;2002:55;2091:4;2086:2;2081:3;2077:12;2070:26;2124:2;2119:3;2115:12;2108:19;;1908:225;;;;2142:384;;2302:67;2366:2;2361:3;2302:67;;;2295:74;;2402:34;2398:1;2393:3;2389:11;2382:55;2471:17;2466:2;2461:3;2457:12;2450:39;2517:2;2512:3;2508:12;2501:19;;2288:238;;;;2535:385;;2695:67;2759:2;2754:3;2695:67;;;2688:74;;2795:34;2791:1;2786:3;2782:11;2775:55;2864:18;2859:2;2854:3;2850:12;2843:40;2911:2;2906:3;2902:12;2895:19;;2681:239;;;;2929:384;;3089:67;3153:2;3148:3;3089:67;;;3082:74;;3189:34;3185:1;3180:3;3176:11;3169:55;3258:17;3253:2;3248:3;3244:12;3237:39;3304:2;3299:3;3295:12;3288:19;;3075:238;;;;3321:113;3404:24;3422:5;3404:24;;;3399:3;3392:37;3386:48;;;3441:213;;3559:2;3548:9;3544:18;3536:26;;3573:71;3641:1;3630:9;3626:17;3617:6;3573:71;;;3530:124;;;;;3661:201;;3773:2;3762:9;3758:18;3750:26;;3787:65;3849:1;3838:9;3834:17;3825:6;3787:65;;;3744:118;;;;;3869:213;;3987:2;3976:9;3972:18;3964:26;;4001:71;4069:1;4058:9;4054:17;4045:6;4001:71;;;3958:124;;;;;4089:407;;4280:2;4269:9;4265:18;4257:26;;4330:9;4324:4;4320:20;4316:1;4305:9;4301:17;4294:47;4355:131;4481:4;4355:131;;;4347:139;;4251:245;;;;4503:407;;4694:2;4683:9;4679:18;4671:26;;4744:9;4738:4;4734:20;4730:1;4719:9;4715:17;4708:47;4769:131;4895:4;4769:131;;;4761:139;;4665:245;;;;4917:407;;5108:2;5097:9;5093:18;5085:26;;5158:9;5152:4;5148:20;5144:1;5133:9;5129:17;5122:47;5183:131;5309:4;5183:131;;;5175:139;;5079:245;;;;5331:407;;5522:2;5511:9;5507:18;5499:26;;5572:9;5566:4;5562:20;5558:1;5547:9;5543:17;5536:47;5597:131;5723:4;5597:131;;;5589:139;;5493:245;;;;5745:213;;5863:2;5852:9;5848:18;5840:26;;5877:71;5945:1;5934:9;5930:17;5921:6;5877:71;;;5834:124;;;;;5966:163;;6081:6;6076:3;6069:19;6118:4;6113:3;6109:14;6094:29;;6062:67;;;;;6137:91;;6199:24;6217:5;6199:24;;;6188:35;;6182:46;;;;6235:85;;6308:5;6301:13;6294:21;6283:32;;6277:43;;;;6327:72;;6389:5;6378:16;;6372:27;;;;6406:121;;6479:42;6472:5;6468:54;6457:65;;6451:76;;;;6534:72;;6596:5;6585:16;;6579:27;;;;6613:117;6682:24;6700:5;6682:24;;;6675:5;6672:35;6662:2;;6721:1;6718;6711:12;6662:2;6656:74;;6737:117;6806:24;6824:5;6806:24;;;6799:5;6796:35;6786:2;;6845:1;6842;6835:12;6786:2;6780:74;;6861:117;6930:24;6948:5;6930:24;;;6923:5;6920:35;6910:2;;6969:1;6966;6959:12;6910:2;6904:74;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "640200",
								"executionCost": "21519",
								"totalCost": "661719"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "379",
								"getRoleAdmin(bytes32)": "infinite",
								"getRoleMember(bytes32,uint256)": "infinite",
								"getRoleMemberCount(bytes32)": "1658",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "infinite",
								"paused()": "1246",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 457,
									"end": 514,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 457,
									"end": 514,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 457,
									"end": 514,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 782,
									"end": 787,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 772,
									"end": 779,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 772,
									"end": 779,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 772,
									"end": 787,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 772,
									"end": 787,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 772,
									"end": 787,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 772,
									"end": 787,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 772,
									"end": 787,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 772,
									"end": 787,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 772,
									"end": 787,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 772,
									"end": 787,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 772,
									"end": 787,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 772,
									"end": 787,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 772,
									"end": 787,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 772,
									"end": 787,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 772,
									"end": 787,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 772,
									"end": 787,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 772,
									"end": 787,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 772,
									"end": 787,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 772,
									"end": 787,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 772,
									"end": 787,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 457,
									"end": 514,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 457,
									"end": 514,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 457,
									"end": 514,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 457,
									"end": 514,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 514,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 457,
									"end": 514,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 514,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dc8b5be6c8094df1edb98c54cb9087a9caf85de6f6040e642863c432ac64824364736f6c63430006040033",
									".code": [
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "9010D07C"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "9010D07C"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "91D14854"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "A217FDDF"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "CA15C873"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "D547741F"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "248A9CA3"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "2F2FF15D"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "36568ABE"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH",
											"source": 1,
											"value": "5C975ABB"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 457,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 457,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 889,
											"end": 965,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 889,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "JUMP",
											"source": 9,
											"value": "[in]"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 889,
											"end": 965,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 889,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 889,
											"end": 965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 889,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 889,
											"end": 965,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 889,
											"end": 965,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 889,
											"end": 965,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 889,
											"end": 965,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 889,
											"end": 965,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 889,
											"end": 965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 889,
											"end": 965,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3883,
											"end": 3890,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3909,
											"end": 3915,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3916,
											"end": 3920,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 3931,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3909,
											"end": 3931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3909,
											"end": 3931,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 3931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 3931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3826,
											"end": 3938,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4279,
											"end": 4285,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4290,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4279,
											"end": 4291,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4301,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4279,
											"end": 4301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4279,
											"end": 4301,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4303,
											"end": 4315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4303,
											"end": 4313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4303,
											"end": 4315,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4303,
											"end": 4315,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4303,
											"end": 4315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4271,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4271,
											"end": 4316,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4271,
											"end": 4316,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4271,
											"end": 4316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4263,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4379,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4390,
											"end": 4394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4396,
											"end": 4403,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4379,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4379,
											"end": 4404,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4379,
											"end": 4404,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4379,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4411,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5459,
											"end": 5471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5459,
											"end": 5469,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 5459,
											"end": 5471,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5459,
											"end": 5471,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5459,
											"end": 5471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5448,
											"end": 5471,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5448,
											"end": 5471,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5448,
											"end": 5455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5448,
											"end": 5471,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5448,
											"end": 5471,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5448,
											"end": 5471,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5440,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5534,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5546,
											"end": 5550,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5559,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5534,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 5534,
											"end": 5560,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5534,
											"end": 5560,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 5534,
											"end": 5560,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5362,
											"end": 5567,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 889,
											"end": 965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 928,
											"end": 932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 951,
											"end": 958,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 951,
											"end": 958,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 951,
											"end": 958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 951,
											"end": 958,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 951,
											"end": 958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 951,
											"end": 958,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 951,
											"end": 958,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 951,
											"end": 958,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 944,
											"end": 958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 944,
											"end": 958,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 889,
											"end": 965,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 889,
											"end": 965,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3608,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3614,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3608,
											"end": 3620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3615,
											"end": 3619,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3620,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3620,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3608,
											"end": 3620,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3620,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3620,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3620,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3608,
											"end": 3620,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3608,
											"end": 3620,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3608,
											"end": 3628,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3608,
											"end": 3631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3638,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3608,
											"end": 3638,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3608,
											"end": 3638,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3608,
											"end": 3638,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3608,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3638,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3638,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3645,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2563,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2616,
											"end": 2623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2592,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2593,
											"end": 2597,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2598,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2606,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2586,
											"end": 2615,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 2586,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2624,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2494,
											"end": 2631,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1729,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1733,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2862,
											"end": 2869,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2888,
											"end": 2894,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2899,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2900,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2888,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2888,
											"end": 2917,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2888,
											"end": 2917,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2888,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2881,
											"end": 2917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2799,
											"end": 2924,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4729,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4737,
											"end": 4743,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4748,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4737,
											"end": 4749,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4759,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4737,
											"end": 4759,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4737,
											"end": 4759,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4761,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4761,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4761,
											"end": 4773,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4761,
											"end": 4773,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4761,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4729,
											"end": 4736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4729,
											"end": 4774,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4729,
											"end": 4774,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4729,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4721,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4838,
											"end": 4864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4850,
											"end": 4854,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4856,
											"end": 4863,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4838,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4838,
											"end": 4864,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4838,
											"end": 4864,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 4838,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4871,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 735,
											"end": 839,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 735,
											"end": 839,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 788,
											"end": 803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 832,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 815,
											"end": 832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 815,
											"end": 832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 735,
											"end": 839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 735,
											"end": 839,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6449,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6449,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6547,
											"end": 6554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6529,
											"end": 6533,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6534,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6522,
											"end": 6542,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6522,
											"end": 6546,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6555,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6555,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6555,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6522,
											"end": 6555,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6555,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6522,
											"end": 6555,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6522,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6627,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6627,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 6518,
											"end": 6627,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6603,
											"end": 6613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6603,
											"end": 6615,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6603,
											"end": 6615,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 6603,
											"end": 6615,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6576,
											"end": 6616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6576,
											"end": 6616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6594,
											"end": 6601,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6576,
											"end": 6616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6576,
											"end": 6616,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6588,
											"end": 6592,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6576,
											"end": 6616,
											"name": "PUSH",
											"source": 2,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6576,
											"end": 6616,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6576,
											"end": 6616,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6576,
											"end": 6616,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6576,
											"end": 6616,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6576,
											"end": 6616,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6576,
											"end": 6616,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6576,
											"end": 6616,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6576,
											"end": 6616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6576,
											"end": 6616,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6627,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 6518,
											"end": 6627,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6449,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6449,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6449,
											"end": 6633,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6639,
											"end": 6827,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 6639,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6713,
											"end": 6749,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6741,
											"end": 6748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6713,
											"end": 6719,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6713,
											"end": 6725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6720,
											"end": 6724,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6713,
											"end": 6725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6713,
											"end": 6725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6713,
											"end": 6725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6713,
											"end": 6725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6713,
											"end": 6725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6713,
											"end": 6725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6713,
											"end": 6725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6713,
											"end": 6725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6713,
											"end": 6725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6713,
											"end": 6725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6713,
											"end": 6725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6713,
											"end": 6733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6713,
											"end": 6733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6713,
											"end": 6740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6713,
											"end": 6740,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6713,
											"end": 6749,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6713,
											"end": 6749,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6713,
											"end": 6749,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6713,
											"end": 6749,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6713,
											"end": 6749,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6713,
											"end": 6749,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6713,
											"end": 6749,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6709,
											"end": 6821,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6709,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6709,
											"end": 6821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6797,
											"end": 6809,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 6797,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6797,
											"end": 6809,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6797,
											"end": 6809,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 6797,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6810,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6770,
											"end": 6810,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6788,
											"end": 6795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6810,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6770,
											"end": 6810,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6782,
											"end": 6786,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6810,
											"name": "PUSH",
											"source": 2,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6770,
											"end": 6810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6770,
											"end": 6810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6770,
											"end": 6810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6770,
											"end": 6810,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 6709,
											"end": 6821,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 6709,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6639,
											"end": 6827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6639,
											"end": 6827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6639,
											"end": 6827,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6052,
											"end": 6199,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 6052,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6126,
											"end": 6133,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6172,
											"end": 6175,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6172,
											"end": 6182,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6172,
											"end": 6182,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6184,
											"end": 6189,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6168,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 6168,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6160,
											"end": 6191,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6160,
											"end": 6191,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6192,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6192,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6052,
											"end": 6199,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6052,
											"end": 6199,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6052,
											"end": 6199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6052,
											"end": 6199,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6052,
											"end": 6199,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5368,
											"end": 5524,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 5368,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5471,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5481,
											"end": 5484,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5481,
											"end": 5491,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5481,
											"end": 5491,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5514,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5515,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5501,
											"end": 5515,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5493,
											"end": 5516,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5493,
											"end": 5516,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5471,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 5471,
											"end": 5517,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5471,
											"end": 5517,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 5471,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5464,
											"end": 5517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5368,
											"end": 5524,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5368,
											"end": 5524,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5368,
											"end": 5524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5368,
											"end": 5524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5368,
											"end": 5524,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5605,
											"end": 5720,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 5605,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5668,
											"end": 5675,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5694,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 5702,
											"end": 5705,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5702,
											"end": 5712,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5694,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 5694,
											"end": 5713,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5694,
											"end": 5713,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 5694,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5687,
											"end": 5713,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5687,
											"end": 5713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5605,
											"end": 5720,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5605,
											"end": 5720,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5605,
											"end": 5720,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5605,
											"end": 5720,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4831,
											"end": 4972,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 4831,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4901,
											"end": 4905,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4924,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 4929,
											"end": 4932,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4929,
											"end": 4939,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4929,
											"end": 4939,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4957,
											"end": 4962,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4941,
											"end": 4964,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4964,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 4924,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 4924,
											"end": 4965,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 4924,
											"end": 4965,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 4924,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4917,
											"end": 4965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4917,
											"end": 4965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4831,
											"end": 4972,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4831,
											"end": 4972,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4831,
											"end": 4972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4831,
											"end": 4972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4831,
											"end": 4972,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5140,
											"end": 5287,
											"name": "tag",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 5140,
											"end": 5287,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5213,
											"end": 5217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 5244,
											"end": 5247,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5244,
											"end": 5254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5254,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5272,
											"end": 5277,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5264,
											"end": 5278,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5264,
											"end": 5278,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5279,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5236,
											"end": 5243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 5236,
											"end": 5280,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 5236,
											"end": 5280,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 5236,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5280,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5229,
											"end": 5280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5287,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5287,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5287,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5140,
											"end": 5287,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 4390,
											"end": 4591,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 4390,
											"end": 4591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4457,
											"end": 4464,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4505,
											"end": 4510,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4487,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4495,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4484,
											"end": 4495,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4502,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4484,
											"end": 4510,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "tag",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 4476,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4569,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4577,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4566,
											"end": 4577,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4578,
											"end": 4583,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4559,
											"end": 4584,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4559,
											"end": 4584,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4390,
											"end": 4591,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4390,
											"end": 4591,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4390,
											"end": 4591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4390,
											"end": 4591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4390,
											"end": 4591,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3743,
											"end": 3870,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 3743,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3816,
											"end": 3820,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3862,
											"end": 3863,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3842,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3839,
											"end": 3851,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3857,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3858,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3858,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3839,
											"end": 3858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3858,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3858,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3858,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3839,
											"end": 3858,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3839,
											"end": 3858,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3858,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3863,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3863,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 3863,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3832,
											"end": 3863,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3743,
											"end": 3870,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3743,
											"end": 3870,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3743,
											"end": 3870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3743,
											"end": 3870,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3743,
											"end": 3870,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 3951,
											"end": 4058,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 3951,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4007,
											"end": 4014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4036,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4044,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4033,
											"end": 4044,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4033,
											"end": 4051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4051,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4026,
											"end": 4051,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3951,
											"end": 4058,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3951,
											"end": 4058,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3951,
											"end": 4058,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3951,
											"end": 4058,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 1578,
											"end": 1982,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 1578,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1641,
											"end": 1645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1683,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1672,
											"end": 1675,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 1662,
											"end": 1683,
											"name": "JUMP",
											"source": 8,
											"value": "[in]"
										},
										{
											"begin": 1662,
											"end": 1683,
											"name": "tag",
											"source": 8,
											"value": "120"
										},
										{
											"begin": 1662,
											"end": 1683,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1976,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1657,
											"end": 1976,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1702,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1710,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1710,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1722,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1882,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1890,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1897,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1897,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1897,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1860,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1857,
											"end": 1869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1870,
											"end": 1875,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1857,
											"end": 1876,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1922,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1911,
											"end": 1922,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1922,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1911,
											"end": 1922,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1911,
											"end": 1922,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1657,
											"end": 1976,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 1657,
											"end": 1976,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1960,
											"end": 1965,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 1965,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1953,
											"end": 1965,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1578,
											"end": 1982,
											"name": "tag",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1578,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1578,
											"end": 1982,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1578,
											"end": 1982,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1578,
											"end": 1982,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1578,
											"end": 1982,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1578,
											"end": 1982,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 2150,
											"end": 3662,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 2150,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2216,
											"end": 2220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2332,
											"end": 2350,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2365,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2353,
											"end": 2365,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2372,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2366,
											"end": 2371,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2372,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2372,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2372,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2353,
											"end": 2372,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2372,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2372,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2372,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2353,
											"end": 2372,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2372,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2372,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2353,
											"end": 2372,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2332,
											"end": 2372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2397,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2402,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 3656,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2383,
											"end": 3656,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2765,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2782,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2768,
											"end": 2778,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2768,
											"end": 2782,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2782,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2813,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2837,
											"end": 2838,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2816,
											"end": 2819,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2827,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2827,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2834,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2834,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2834,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2816,
											"end": 2838,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2838,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2838,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3078,
											"end": 3095,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3101,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3109,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3110,
											"end": 3119,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3098,
											"end": 3120,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3078,
											"end": 3120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3078,
											"end": 3120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3241,
											"end": 3250,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3215,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3223,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3223,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3224,
											"end": 3237,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3238,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3238,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3238,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 3212,
											"end": 3238,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3238,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3238,
											"name": "tag",
											"source": 8,
											"value": "128"
										},
										{
											"begin": 3212,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3238,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3238,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 3238,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3212,
											"end": 3238,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3238,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3250,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3250,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3250,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3212,
											"end": 3250,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3358,
											"end": 3359,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3342,
											"end": 3355,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3359,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3319,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3316,
											"end": 3328,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3338,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3339,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3339,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3316,
											"end": 3339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3339,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3339,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3339,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3339,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3316,
											"end": 3339,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3339,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3316,
											"end": 3339,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3359,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3359,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3359,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3316,
											"end": 3359,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3468,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3476,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3476,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3465,
											"end": 3482,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3560,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3569,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3557,
											"end": 3569,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3576,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3570,
											"end": 3575,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3576,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3576,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3557,
											"end": 3576,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3576,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3576,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3557,
											"end": 3576,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3557,
											"end": 3576,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3576,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3550,
											"end": 3576,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3550,
											"end": 3576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3550,
											"end": 3576,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 3598,
											"end": 3602,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3591,
											"end": 3602,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3602,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 3591,
											"end": 3602,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2383,
											"end": 3656,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2383,
											"end": 3656,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3640,
											"end": 3645,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3633,
											"end": 3645,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3633,
											"end": 3645,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 3662,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 2150,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 3662,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 3662,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 3662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 3662,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2150,
											"end": 3662,
											"name": "JUMP",
											"source": 8,
											"value": "[out]"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "tag",
											"source": -1,
											"value": "134"
										},
										{
											"begin": 5,
											"end": 135,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5,
											"end": 135,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 85,
											"end": 91,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 72,
											"end": 92,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 63,
											"end": 92,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 63,
											"end": 92,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "136"
										},
										{
											"begin": 124,
											"end": 129,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "137"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 97,
											"end": 130,
											"name": "tag",
											"source": -1,
											"value": "136"
										},
										{
											"begin": 97,
											"end": 130,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 57,
											"end": 135,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 57,
											"end": 135,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 57,
											"end": 135,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57,
											"end": 135,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57,
											"end": 135,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 142,
											"end": 272,
											"name": "tag",
											"source": -1,
											"value": "138"
										},
										{
											"begin": 142,
											"end": 272,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 142,
											"end": 272,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 222,
											"end": 228,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 209,
											"end": 229,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 200,
											"end": 229,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 200,
											"end": 229,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 234,
											"end": 267,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "140"
										},
										{
											"begin": 261,
											"end": 266,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 234,
											"end": 267,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "141"
										},
										{
											"begin": 234,
											"end": 267,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 234,
											"end": 267,
											"name": "tag",
											"source": -1,
											"value": "140"
										},
										{
											"begin": 234,
											"end": 267,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 194,
											"end": 272,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 194,
											"end": 272,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 194,
											"end": 272,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 194,
											"end": 272,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 194,
											"end": 272,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 279,
											"end": 409,
											"name": "tag",
											"source": -1,
											"value": "142"
										},
										{
											"begin": 279,
											"end": 409,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 279,
											"end": 409,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 359,
											"end": 365,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 346,
											"end": 366,
											"name": "CALLDATALOAD",
											"source": -1
										},
										{
											"begin": 337,
											"end": 366,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 337,
											"end": 366,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 371,
											"end": 404,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "144"
										},
										{
											"begin": 398,
											"end": 403,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 371,
											"end": 404,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "145"
										},
										{
											"begin": 371,
											"end": 404,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 371,
											"end": 404,
											"name": "tag",
											"source": -1,
											"value": "144"
										},
										{
											"begin": 371,
											"end": 404,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 331,
											"end": 409,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 331,
											"end": 409,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 331,
											"end": 409,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 331,
											"end": 409,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 331,
											"end": 409,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 416,
											"end": 657,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": 416,
											"end": 657,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 416,
											"end": 657,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 522,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 508,
											"end": 517,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 499,
											"end": 506,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 495,
											"end": 518,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 491,
											"end": 523,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 488,
											"end": 490,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 488,
											"end": 490,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "147"
										},
										{
											"begin": 488,
											"end": 490,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 536,
											"end": 537,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 533,
											"end": 534,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 526,
											"end": 538,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 488,
											"end": 490,
											"name": "tag",
											"source": -1,
											"value": "147"
										},
										{
											"begin": 488,
											"end": 490,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 571,
											"end": 572,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 588,
											"end": 641,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "148"
										},
										{
											"begin": 633,
											"end": 640,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 624,
											"end": 630,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 613,
											"end": 622,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 609,
											"end": 631,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 588,
											"end": 641,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "138"
										},
										{
											"begin": 588,
											"end": 641,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 588,
											"end": 641,
											"name": "tag",
											"source": -1,
											"value": "148"
										},
										{
											"begin": 588,
											"end": 641,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 578,
											"end": 641,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 578,
											"end": 641,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 550,
											"end": 647,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 482,
											"end": 657,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 482,
											"end": 657,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 482,
											"end": 657,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 482,
											"end": 657,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 482,
											"end": 657,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 664,
											"end": 1030,
											"name": "tag",
											"source": -1,
											"value": "21"
										},
										{
											"begin": 664,
											"end": 1030,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 664,
											"end": 1030,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 1030,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 785,
											"end": 787,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 782,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 764,
											"end": 771,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 760,
											"end": 783,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 756,
											"end": 788,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 753,
											"end": 755,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 753,
											"end": 755,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "150"
										},
										{
											"begin": 753,
											"end": 755,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 801,
											"end": 802,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 799,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 791,
											"end": 803,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 753,
											"end": 755,
											"name": "tag",
											"source": -1,
											"value": "150"
										},
										{
											"begin": 753,
											"end": 755,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 836,
											"end": 837,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 906,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "151"
										},
										{
											"begin": 898,
											"end": 905,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 889,
											"end": 895,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 878,
											"end": 887,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 874,
											"end": 896,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 853,
											"end": 906,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "138"
										},
										{
											"begin": 853,
											"end": 906,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 853,
											"end": 906,
											"name": "tag",
											"source": -1,
											"value": "151"
										},
										{
											"begin": 853,
											"end": 906,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 843,
											"end": 906,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 843,
											"end": 906,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 815,
											"end": 912,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 943,
											"end": 945,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "152"
										},
										{
											"begin": 1006,
											"end": 1013,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 986,
											"end": 995,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 982,
											"end": 1004,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "134"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "tag",
											"source": -1,
											"value": "152"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 951,
											"end": 1014,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 951,
											"end": 1014,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 922,
											"end": 1020,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 747,
											"end": 1030,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 747,
											"end": 1030,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 747,
											"end": 1030,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 747,
											"end": 1030,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 747,
											"end": 1030,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 747,
											"end": 1030,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1037,
											"end": 1403,
											"name": "tag",
											"source": -1,
											"value": "32"
										},
										{
											"begin": 1037,
											"end": 1403,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1037,
											"end": 1403,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1403,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1158,
											"end": 1160,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 1155,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1137,
											"end": 1144,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1156,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1129,
											"end": 1161,
											"name": "SLT",
											"source": -1
										},
										{
											"begin": 1126,
											"end": 1128,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 1126,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "154"
										},
										{
											"begin": 1126,
											"end": 1128,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 1174,
											"end": 1175,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1171,
											"end": 1172,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 1126,
											"end": 1128,
											"name": "tag",
											"source": -1,
											"value": "154"
										},
										{
											"begin": 1126,
											"end": 1128,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1209,
											"end": 1210,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "155"
										},
										{
											"begin": 1271,
											"end": 1278,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1251,
											"end": 1260,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1269,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1226,
											"end": 1279,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "138"
										},
										{
											"begin": 1226,
											"end": 1279,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1226,
											"end": 1279,
											"name": "tag",
											"source": -1,
											"value": "155"
										},
										{
											"begin": 1226,
											"end": 1279,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1216,
											"end": 1279,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1216,
											"end": 1279,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1188,
											"end": 1285,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1316,
											"end": 1318,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 1334,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "156"
										},
										{
											"begin": 1379,
											"end": 1386,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 1376,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1359,
											"end": 1368,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": 1355,
											"end": 1377,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 1334,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "142"
										},
										{
											"begin": 1334,
											"end": 1387,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1334,
											"end": 1387,
											"name": "tag",
											"source": -1,
											"value": "156"
										},
										{
											"begin": 1334,
											"end": 1387,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1324,
											"end": 1387,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1324,
											"end": 1387,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1295,
											"end": 1393,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1403,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1403,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1403,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1403,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1403,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1120,
											"end": 1403,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1410,
											"end": 1523,
											"name": "tag",
											"source": -1,
											"value": "157"
										},
										{
											"begin": 1410,
											"end": 1523,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1493,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "159"
										},
										{
											"begin": 1511,
											"end": 1516,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1493,
											"end": 1517,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "160"
										},
										{
											"begin": 1493,
											"end": 1517,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1493,
											"end": 1517,
											"name": "tag",
											"source": -1,
											"value": "159"
										},
										{
											"begin": 1493,
											"end": 1517,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1488,
											"end": 1491,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1481,
											"end": 1518,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1475,
											"end": 1523,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1475,
											"end": 1523,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1475,
											"end": 1523,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1530,
											"end": 1634,
											"name": "tag",
											"source": -1,
											"value": "161"
										},
										{
											"begin": 1530,
											"end": 1634,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "163"
										},
										{
											"begin": 1622,
											"end": 1627,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "164"
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "tag",
											"source": -1,
											"value": "163"
										},
										{
											"begin": 1607,
											"end": 1628,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1602,
											"end": 1605,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1595,
											"end": 1629,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1589,
											"end": 1634,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1589,
											"end": 1634,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1589,
											"end": 1634,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1641,
											"end": 1754,
											"name": "tag",
											"source": -1,
											"value": "165"
										},
										{
											"begin": 1641,
											"end": 1754,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1724,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "167"
										},
										{
											"begin": 1742,
											"end": 1747,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 1724,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "168"
										},
										{
											"begin": 1724,
											"end": 1748,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1724,
											"end": 1748,
											"name": "tag",
											"source": -1,
											"value": "167"
										},
										{
											"begin": 1724,
											"end": 1748,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1719,
											"end": 1722,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 1712,
											"end": 1749,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1754,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1754,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1706,
											"end": 1754,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1762,
											"end": 2133,
											"name": "tag",
											"source": -1,
											"value": "169"
										},
										{
											"begin": 1762,
											"end": 2133,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1762,
											"end": 2133,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1922,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "171"
										},
										{
											"begin": 1986,
											"end": 1988,
											"name": "PUSH",
											"source": -1,
											"value": "22"
										},
										{
											"begin": 1981,
											"end": 1984,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "172"
										},
										{
											"begin": 1922,
											"end": 1989,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 1922,
											"end": 1989,
											"name": "tag",
											"source": -1,
											"value": "171"
										},
										{
											"begin": 1922,
											"end": 1989,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1915,
											"end": 1989,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1915,
											"end": 1989,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2022,
											"end": 2056,
											"name": "PUSH",
											"source": -1,
											"value": "456E756D657261626C655365743A20696E646578206F7574206F6620626F756E"
										},
										{
											"begin": 2018,
											"end": 2019,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2016,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2009,
											"end": 2020,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2057,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2091,
											"end": 2095,
											"name": "PUSH",
											"source": -1,
											"value": "6473000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2086,
											"end": 2088,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2081,
											"end": 2084,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 2089,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2070,
											"end": 2096,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2124,
											"end": 2126,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2122,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2115,
											"end": 2127,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2127,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2127,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1908,
											"end": 2133,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 1908,
											"end": 2133,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 1908,
											"end": 2133,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1908,
											"end": 2133,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2142,
											"end": 2526,
											"name": "tag",
											"source": -1,
											"value": "173"
										},
										{
											"begin": 2142,
											"end": 2526,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2142,
											"end": 2526,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "175"
										},
										{
											"begin": 2366,
											"end": 2368,
											"name": "PUSH",
											"source": -1,
											"value": "2F"
										},
										{
											"begin": 2361,
											"end": 2364,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "172"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "tag",
											"source": -1,
											"value": "175"
										},
										{
											"begin": 2302,
											"end": 2369,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2295,
											"end": 2369,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2295,
											"end": 2369,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2402,
											"end": 2436,
											"name": "PUSH",
											"source": -1,
											"value": "416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
										},
										{
											"begin": 2398,
											"end": 2399,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2396,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2389,
											"end": 2400,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2382,
											"end": 2437,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2471,
											"end": 2488,
											"name": "PUSH",
											"source": -1,
											"value": "2061646D696E20746F206772616E740000000000000000000000000000000000"
										},
										{
											"begin": 2466,
											"end": 2468,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2461,
											"end": 2464,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2450,
											"end": 2489,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2517,
											"end": 2519,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 2512,
											"end": 2515,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2508,
											"end": 2520,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2501,
											"end": 2520,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2501,
											"end": 2520,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2288,
											"end": 2526,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2288,
											"end": 2526,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2288,
											"end": 2526,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2288,
											"end": 2526,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2535,
											"end": 2920,
											"name": "tag",
											"source": -1,
											"value": "176"
										},
										{
											"begin": 2535,
											"end": 2920,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2535,
											"end": 2920,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "178"
										},
										{
											"begin": 2759,
											"end": 2761,
											"name": "PUSH",
											"source": -1,
											"value": "30"
										},
										{
											"begin": 2754,
											"end": 2757,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2695,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "172"
										},
										{
											"begin": 2695,
											"end": 2762,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2695,
											"end": 2762,
											"name": "tag",
											"source": -1,
											"value": "178"
										},
										{
											"begin": 2695,
											"end": 2762,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2688,
											"end": 2762,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2688,
											"end": 2762,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2795,
											"end": 2829,
											"name": "PUSH",
											"source": -1,
											"value": "416363657373436F6E74726F6C3A2073656E646572206D75737420626520616E"
										},
										{
											"begin": 2791,
											"end": 2792,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2786,
											"end": 2789,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2782,
											"end": 2793,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2775,
											"end": 2830,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2864,
											"end": 2882,
											"name": "PUSH",
											"source": -1,
											"value": "2061646D696E20746F207265766F6B6500000000000000000000000000000000"
										},
										{
											"begin": 2859,
											"end": 2861,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2857,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 2850,
											"end": 2862,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2843,
											"end": 2883,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2911,
											"end": 2913,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 2906,
											"end": 2909,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 2902,
											"end": 2914,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 2895,
											"end": 2914,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2895,
											"end": 2914,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2681,
											"end": 2920,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 2681,
											"end": 2920,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 2681,
											"end": 2920,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2681,
											"end": 2920,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 2929,
											"end": 3313,
											"name": "tag",
											"source": -1,
											"value": "179"
										},
										{
											"begin": 2929,
											"end": 3313,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 2929,
											"end": 3313,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "181"
										},
										{
											"begin": 3153,
											"end": 3155,
											"name": "PUSH",
											"source": -1,
											"value": "2F"
										},
										{
											"begin": 3148,
											"end": 3151,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3089,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "172"
										},
										{
											"begin": 3089,
											"end": 3156,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3089,
											"end": 3156,
											"name": "tag",
											"source": -1,
											"value": "181"
										},
										{
											"begin": 3089,
											"end": 3156,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3082,
											"end": 3156,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3082,
											"end": 3156,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3189,
											"end": 3223,
											"name": "PUSH",
											"source": -1,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 3185,
											"end": 3186,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3183,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3176,
											"end": 3187,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3169,
											"end": 3224,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3258,
											"end": 3275,
											"name": "PUSH",
											"source": -1,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 3253,
											"end": 3255,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3248,
											"end": 3251,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3244,
											"end": 3256,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3237,
											"end": 3276,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3304,
											"end": 3306,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3302,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3288,
											"end": 3307,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3075,
											"end": 3313,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3075,
											"end": 3313,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3075,
											"end": 3313,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3075,
											"end": 3313,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3321,
											"end": 3434,
											"name": "tag",
											"source": -1,
											"value": "182"
										},
										{
											"begin": 3321,
											"end": 3434,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3404,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "184"
										},
										{
											"begin": 3422,
											"end": 3427,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 3404,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "185"
										},
										{
											"begin": 3404,
											"end": 3428,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3404,
											"end": 3428,
											"name": "tag",
											"source": -1,
											"value": "184"
										},
										{
											"begin": 3404,
											"end": 3428,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3399,
											"end": 3402,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3392,
											"end": 3429,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3386,
											"end": 3434,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3386,
											"end": 3434,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3386,
											"end": 3434,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3441,
											"end": 3654,
											"name": "tag",
											"source": -1,
											"value": "35"
										},
										{
											"begin": 3441,
											"end": 3654,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3441,
											"end": 3654,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3561,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3557,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3544,
											"end": 3562,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 3562,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 3562,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3573,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "187"
										},
										{
											"begin": 3641,
											"end": 3642,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3639,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3626,
											"end": 3643,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3617,
											"end": 3623,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3573,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "157"
										},
										{
											"begin": 3573,
											"end": 3644,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3573,
											"end": 3644,
											"name": "tag",
											"source": -1,
											"value": "187"
										},
										{
											"begin": 3573,
											"end": 3644,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3654,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3654,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3654,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3654,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3530,
											"end": 3654,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3661,
											"end": 3862,
											"name": "tag",
											"source": -1,
											"value": "29"
										},
										{
											"begin": 3661,
											"end": 3862,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3661,
											"end": 3862,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3775,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3771,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3750,
											"end": 3776,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3750,
											"end": 3776,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3787,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "189"
										},
										{
											"begin": 3849,
											"end": 3850,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3838,
											"end": 3847,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 3834,
											"end": 3851,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3825,
											"end": 3831,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 3787,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "161"
										},
										{
											"begin": 3787,
											"end": 3852,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3787,
											"end": 3852,
											"name": "tag",
											"source": -1,
											"value": "189"
										},
										{
											"begin": 3787,
											"end": 3852,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3744,
											"end": 3862,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3744,
											"end": 3862,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3744,
											"end": 3862,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3744,
											"end": 3862,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3744,
											"end": 3862,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 4082,
											"name": "tag",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 3869,
											"end": 4082,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3869,
											"end": 4082,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3989,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 3976,
											"end": 3985,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 3972,
											"end": 3990,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 3964,
											"end": 3990,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3964,
											"end": 3990,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4001,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "191"
										},
										{
											"begin": 4069,
											"end": 4070,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4067,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4054,
											"end": 4071,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4045,
											"end": 4051,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 4001,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "165"
										},
										{
											"begin": 4001,
											"end": 4072,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4001,
											"end": 4072,
											"name": "tag",
											"source": -1,
											"value": "191"
										},
										{
											"begin": 4001,
											"end": 4072,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 3958,
											"end": 4082,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 3958,
											"end": 4082,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 3958,
											"end": 4082,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3958,
											"end": 4082,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3958,
											"end": 4082,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4089,
											"end": 4496,
											"name": "tag",
											"source": -1,
											"value": "114"
										},
										{
											"begin": 4089,
											"end": 4496,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4089,
											"end": 4496,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4282,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4269,
											"end": 4278,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4265,
											"end": 4283,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4257,
											"end": 4283,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4257,
											"end": 4283,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4330,
											"end": 4339,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4324,
											"end": 4328,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4320,
											"end": 4340,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4316,
											"end": 4317,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4305,
											"end": 4314,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4301,
											"end": 4318,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4341,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4355,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "193"
										},
										{
											"begin": 4481,
											"end": 4485,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4355,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "169"
										},
										{
											"begin": 4355,
											"end": 4486,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4355,
											"end": 4486,
											"name": "tag",
											"source": -1,
											"value": "193"
										},
										{
											"begin": 4355,
											"end": 4486,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4347,
											"end": 4486,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4347,
											"end": 4486,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4251,
											"end": 4496,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4251,
											"end": 4496,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4251,
											"end": 4496,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4251,
											"end": 4496,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4503,
											"end": 4910,
											"name": "tag",
											"source": -1,
											"value": "58"
										},
										{
											"begin": 4503,
											"end": 4910,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4503,
											"end": 4910,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4696,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 4683,
											"end": 4692,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 4679,
											"end": 4697,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4671,
											"end": 4697,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4671,
											"end": 4697,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4744,
											"end": 4753,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4738,
											"end": 4742,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4734,
											"end": 4754,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 4708,
											"end": 4755,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4769,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "195"
										},
										{
											"begin": 4895,
											"end": 4899,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 4769,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "173"
										},
										{
											"begin": 4769,
											"end": 4900,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4769,
											"end": 4900,
											"name": "tag",
											"source": -1,
											"value": "195"
										},
										{
											"begin": 4769,
											"end": 4900,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4761,
											"end": 4900,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4761,
											"end": 4900,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4665,
											"end": 4910,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 4665,
											"end": 4910,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 4665,
											"end": 4910,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4665,
											"end": 4910,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 4917,
											"end": 5324,
											"name": "tag",
											"source": -1,
											"value": "83"
										},
										{
											"begin": 4917,
											"end": 5324,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 4917,
											"end": 5324,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5110,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5106,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5093,
											"end": 5111,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5085,
											"end": 5111,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5085,
											"end": 5111,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5158,
											"end": 5167,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5152,
											"end": 5156,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5148,
											"end": 5168,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5144,
											"end": 5145,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5133,
											"end": 5142,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 5129,
											"end": 5146,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5122,
											"end": 5169,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5183,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "197"
										},
										{
											"begin": 5309,
											"end": 5313,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5183,
											"end": 5314,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "176"
										},
										{
											"begin": 5183,
											"end": 5314,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5183,
											"end": 5314,
											"name": "tag",
											"source": -1,
											"value": "197"
										},
										{
											"begin": 5183,
											"end": 5314,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5175,
											"end": 5314,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5175,
											"end": 5314,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5079,
											"end": 5324,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5079,
											"end": 5324,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5079,
											"end": 5324,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5079,
											"end": 5324,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5331,
											"end": 5738,
											"name": "tag",
											"source": -1,
											"value": "65"
										},
										{
											"begin": 5331,
											"end": 5738,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5331,
											"end": 5738,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5522,
											"end": 5524,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5511,
											"end": 5520,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5507,
											"end": 5525,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5499,
											"end": 5525,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5572,
											"end": 5581,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5566,
											"end": 5570,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5562,
											"end": 5582,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5558,
											"end": 5559,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5556,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 5543,
											"end": 5560,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5536,
											"end": 5583,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 5597,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "199"
										},
										{
											"begin": 5723,
											"end": 5727,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 5597,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "179"
										},
										{
											"begin": 5597,
											"end": 5728,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5597,
											"end": 5728,
											"name": "tag",
											"source": -1,
											"value": "199"
										},
										{
											"begin": 5597,
											"end": 5728,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5589,
											"end": 5728,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5589,
											"end": 5728,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5493,
											"end": 5738,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5493,
											"end": 5738,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5493,
											"end": 5738,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5493,
											"end": 5738,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5745,
											"end": 5958,
											"name": "tag",
											"source": -1,
											"value": "47"
										},
										{
											"begin": 5745,
											"end": 5958,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5745,
											"end": 5958,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5863,
											"end": 5865,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 5852,
											"end": 5861,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 5848,
											"end": 5866,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5840,
											"end": 5866,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 5840,
											"end": 5866,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5877,
											"end": 5948,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "201"
										},
										{
											"begin": 5945,
											"end": 5946,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5943,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 5930,
											"end": 5947,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 5921,
											"end": 5927,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": 5877,
											"end": 5948,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "182"
										},
										{
											"begin": 5877,
											"end": 5948,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5877,
											"end": 5948,
											"name": "tag",
											"source": -1,
											"value": "201"
										},
										{
											"begin": 5877,
											"end": 5948,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5958,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5958,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5958,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5958,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5958,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 5966,
											"end": 6129,
											"name": "tag",
											"source": -1,
											"value": "172"
										},
										{
											"begin": 5966,
											"end": 6129,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 5966,
											"end": 6129,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6087,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6076,
											"end": 6079,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6069,
											"end": 6088,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6118,
											"end": 6122,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 6113,
											"end": 6116,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6123,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": 6094,
											"end": 6123,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6094,
											"end": 6123,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6062,
											"end": 6129,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 6062,
											"end": 6129,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6062,
											"end": 6129,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6062,
											"end": 6129,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6062,
											"end": 6129,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6137,
											"end": 6228,
											"name": "tag",
											"source": -1,
											"value": "160"
										},
										{
											"begin": 6137,
											"end": 6228,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6137,
											"end": 6228,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6199,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "204"
										},
										{
											"begin": 6217,
											"end": 6222,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 6223,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "205"
										},
										{
											"begin": 6199,
											"end": 6223,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6199,
											"end": 6223,
											"name": "tag",
											"source": -1,
											"value": "204"
										},
										{
											"begin": 6199,
											"end": 6223,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6188,
											"end": 6223,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6188,
											"end": 6223,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6182,
											"end": 6228,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6182,
											"end": 6228,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6182,
											"end": 6228,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6182,
											"end": 6228,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6235,
											"end": 6320,
											"name": "tag",
											"source": -1,
											"value": "164"
										},
										{
											"begin": 6235,
											"end": 6320,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6235,
											"end": 6320,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6308,
											"end": 6313,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6301,
											"end": 6314,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 6294,
											"end": 6315,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 6283,
											"end": 6315,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6283,
											"end": 6315,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6277,
											"end": 6320,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6277,
											"end": 6320,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6277,
											"end": 6320,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6277,
											"end": 6320,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6327,
											"end": 6399,
											"name": "tag",
											"source": -1,
											"value": "168"
										},
										{
											"begin": 6327,
											"end": 6399,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6327,
											"end": 6399,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6389,
											"end": 6394,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6378,
											"end": 6394,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6378,
											"end": 6394,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6372,
											"end": 6399,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6372,
											"end": 6399,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6372,
											"end": 6399,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6372,
											"end": 6399,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6406,
											"end": 6527,
											"name": "tag",
											"source": -1,
											"value": "205"
										},
										{
											"begin": 6406,
											"end": 6527,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6406,
											"end": 6527,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6479,
											"end": 6521,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6472,
											"end": 6477,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": 6468,
											"end": 6522,
											"name": "AND",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6522,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6522,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6451,
											"end": 6527,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6451,
											"end": 6527,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6451,
											"end": 6527,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6451,
											"end": 6527,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6534,
											"end": 6606,
											"name": "tag",
											"source": -1,
											"value": "185"
										},
										{
											"begin": 6534,
											"end": 6606,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6534,
											"end": 6606,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6596,
											"end": 6601,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6585,
											"end": 6601,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6585,
											"end": 6601,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6579,
											"end": 6606,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 6579,
											"end": 6606,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6579,
											"end": 6606,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6579,
											"end": 6606,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6613,
											"end": 6730,
											"name": "tag",
											"source": -1,
											"value": "137"
										},
										{
											"begin": 6613,
											"end": 6730,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6682,
											"end": 6706,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "211"
										},
										{
											"begin": 6700,
											"end": 6705,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6682,
											"end": 6706,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "160"
										},
										{
											"begin": 6682,
											"end": 6706,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6682,
											"end": 6706,
											"name": "tag",
											"source": -1,
											"value": "211"
										},
										{
											"begin": 6682,
											"end": 6706,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6675,
											"end": 6680,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6672,
											"end": 6707,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 6662,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "212"
										},
										{
											"begin": 6662,
											"end": 6664,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 6721,
											"end": 6722,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6718,
											"end": 6719,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6711,
											"end": 6723,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 6662,
											"end": 6664,
											"name": "tag",
											"source": -1,
											"value": "212"
										},
										{
											"begin": 6662,
											"end": 6664,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6730,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6656,
											"end": 6730,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6737,
											"end": 6854,
											"name": "tag",
											"source": -1,
											"value": "141"
										},
										{
											"begin": 6737,
											"end": 6854,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "214"
										},
										{
											"begin": 6824,
											"end": 6829,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "168"
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "tag",
											"source": -1,
											"value": "214"
										},
										{
											"begin": 6806,
											"end": 6830,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6799,
											"end": 6804,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6796,
											"end": 6831,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 6786,
											"end": 6788,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "215"
										},
										{
											"begin": 6786,
											"end": 6788,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 6845,
											"end": 6846,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6842,
											"end": 6843,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6835,
											"end": 6847,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 6786,
											"end": 6788,
											"name": "tag",
											"source": -1,
											"value": "215"
										},
										{
											"begin": 6786,
											"end": 6788,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6780,
											"end": 6854,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6780,
											"end": 6854,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "tag",
											"source": -1,
											"value": "145"
										},
										{
											"begin": 6861,
											"end": 6978,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "217"
										},
										{
											"begin": 6948,
											"end": 6953,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6954,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "185"
										},
										{
											"begin": 6930,
											"end": 6954,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 6954,
											"name": "tag",
											"source": -1,
											"value": "217"
										},
										{
											"begin": 6930,
											"end": 6954,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6923,
											"end": 6928,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6920,
											"end": 6955,
											"name": "EQ",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "218"
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 6969,
											"end": 6970,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 6967,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 6959,
											"end": 6971,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "tag",
											"source": -1,
											"value": "218"
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 6904,
											"end": 6978,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6904,
											"end": 6978,
											"name": "JUMP",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ChainSafe Systems.\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"}},\"title\":\"Facilitates deposits, creation and votiing of deposit proposals, and deposit executions.\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/MonkeyNft.sol\":\"Bridge\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GSN/Context.sol\":{\"keccak256\":\"0x8610316b7096a19d9f99ae7587e393f1039211fd82d541e26a0693a76e8bc570\",\"urls\":[\"bzz-raw://cb7ca41b389fc0b5de53802af64d86ad0c92b4704eeb695bfabc7e79769fd64c\",\"dweb:/ipfs/Qmd6LUJURrcN7RBSLoporoAAeJ8cWtjGT96QKCaCeCofKN\"]},\"contracts/MonkeyNft.sol\":{\"keccak256\":\"0x2789f5c65beb286e1811df1d2be3ae967ab3d8e5747fe67f972794286be3cc7c\",\"urls\":[\"bzz-raw://0d7b3596e85ccfe602a3f38a91c688dd78960adc2b7ca21ee8524ad6254aa4d5\",\"dweb:/ipfs/QmZiNuotmnANLnLAcUkP1Z1ASzHX4LTJkr53mRijzSVrCt\"]},\"contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb3924f27b64d9e85d1e9a7bb1c6f5e5a5b75f0c50d84d62e7f76c91f1fccab50\",\"urls\":[\"bzz-raw://45ccac9c56c5e95d6d68ae55439693babde7bc3561479d12b4be40aa212becf5\",\"dweb:/ipfs/QmcxRKBSPsLdL2cS2NPcR1pdjTmjnxnq9KKauh1QzFi3iM\"]},\"contracts/interfaces/IBridge.sol\":{\"keccak256\":\"0x69acbf5e85d70afb39f819efa08ff2442e8b122f35a012f6e37ed96fb35222b6\",\"urls\":[\"bzz-raw://02c37de0e9beefc6cf988b43980aaee9f68b2b60b34cc889aa374aeee135c13c\",\"dweb:/ipfs/QmVZFyHbMq8KgMyboAspK1VK25kR2uXv6x6t6nh5dfERHF\"]},\"contracts/interfaces/IDepositExecute.sol\":{\"keccak256\":\"0x0e294346387f78e5762ed8f30ef4ba23c577abc9e2dfbaeb29e97b1b5099aa35\",\"urls\":[\"bzz-raw://896aa03012baece6caca18cf66386717e1cd47e5700ea24f1a31589b3513d814\",\"dweb:/ipfs/QmVJWiXZgEjFiZB21wsvkhHAUupNqBJ8FvZuJcB4X4NEvj\"]},\"contracts/interfaces/IERCHandler.sol\":{\"keccak256\":\"0xae4a0687ed7310b0e5b1e82074b38bd492de3c14f33acf12486f7380cd523578\",\"urls\":[\"bzz-raw://0e4195985bfa8305ea9ca1ecd40d34023846a89f3313104e84aedb84069a2926\",\"dweb:/ipfs/QmcrKQzMC6YnXRZeE8Wau4rYB815kXrFTpPWVJBkmSS4SV\"]},\"contracts/interfaces/IGenericHandler.sol\":{\"keccak256\":\"0x9f660f1583d7a7c27fff0c60a7f944f6f27f836f4577c10de1db38d58ea26077\",\"urls\":[\"bzz-raw://d782b3dc5499e19315007afa18f30327b044bf0d98f71413b129bb62ac8ad811\",\"dweb:/ipfs/QmbY4bKnqUJwMNw3JtR2hDH3gzSHoJopZkbykRxYcB7e3y\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x95ab5946f04d7d1f6f1ddaae196b9aea974b8e39a6cf2f94d0678b54186cf952\",\"urls\":[\"bzz-raw://788aa249ac4dbf9ced05dc9f65038ee3a3e516ed6324099c8dd904f34fc5375a\",\"dweb:/ipfs/QmSM35jDe6EXVWxxo9qe574MQ4vV2qtq8NoWruLRe7jCWz\"]},\"contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xe2a9ad9ddc0004c34fa5e59e0c70f9e5a61ff17a6419de0bc8745b31525c310b\",\"urls\":[\"bzz-raw://1ee2bcdb983c586b2bb8af4d4157e1136c25c3eebdcd3459ee729888afd0ba4c\",\"dweb:/ipfs/QmPwoNSZgd3L6ghCA1Rih58AJayF4FLMVS7mcySC6AikBN\"]},\"contracts/utils/Pausable.sol\":{\"keccak256\":\"0xd995bcc6b4067ac18db610e47a2a969e8009cb311b017cdd34fc2b46c3be7020\",\"urls\":[\"bzz-raw://53e0d1dc839eb40ba23a887d302f26764eed0fe035d0e519be6a1099a1237b33\",\"dweb:/ipfs/QmbMhz1VEBxhRsz6par2rKgErxFphimiCqrmCREiusVDHv\"]},\"contracts/utils/SafeMath.sol\":{\"keccak256\":\"0x0f714e07671743649ebdc961f0380ecb7b86b9572e4a43f77e18c77c015e2977\",\"urls\":[\"bzz-raw://d39b51548731cf4968c01ad302330697df92c297d4edace1c4c020017178264d\",\"dweb:/ipfs/QmeNowPEdLsw558fStna6zoh4actw95gVXB5pU5YAoqAzg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 863,
								"contract": "contracts/MonkeyNft.sol:Bridge",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 67,
								"contract": "contracts/MonkeyNft.sol:Bridge",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)63_storage)"
							}
						],
						"types": {
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)63_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)63_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)644_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 643,
										"contract": "contracts/MonkeyNft.sol:Bridge",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)464_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)63_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 60,
										"contract": "contracts/MonkeyNft.sol:Bridge",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)644_storage"
									},
									{
										"astId": 62,
										"contract": "contracts/MonkeyNft.sol:Bridge",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)464_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 459,
										"contract": "contracts/MonkeyNft.sol:Bridge",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 463,
										"contract": "contracts/MonkeyNft.sol:Bridge",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. * Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: * ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` * Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: * ``` function foo() public {    require(hasRole(MY_ROLE, msg.sender));    ... } ``` * Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleMember(bytes32,uint256)": "9010d07c",
							"getRoleMemberCount(bytes32)": "ca15c873",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. * Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: * ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` * Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: * ``` function foo() public {    require(hasRole(MY_ROLE, msg.sender));    ... } ``` * Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}.     * To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive.     * Role bearers are not sorted in any particular way, and their ordering may change at any point.     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`.     * If `account` had not been already granted `role`, emits a {RoleGranted} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account.     * Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced).     * If the calling account had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`.     * If `account` had been granted `role`, emits a {RoleRevoked} event.     * Requirements:     * - the caller must have ``role``'s admin role.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GSN/Context.sol\":{\"keccak256\":\"0x8610316b7096a19d9f99ae7587e393f1039211fd82d541e26a0693a76e8bc570\",\"urls\":[\"bzz-raw://cb7ca41b389fc0b5de53802af64d86ad0c92b4704eeb695bfabc7e79769fd64c\",\"dweb:/ipfs/Qmd6LUJURrcN7RBSLoporoAAeJ8cWtjGT96QKCaCeCofKN\"]},\"contracts/access/AccessControl.sol\":{\"keccak256\":\"0xb3924f27b64d9e85d1e9a7bb1c6f5e5a5b75f0c50d84d62e7f76c91f1fccab50\",\"urls\":[\"bzz-raw://45ccac9c56c5e95d6d68ae55439693babde7bc3561479d12b4be40aa212becf5\",\"dweb:/ipfs/QmcxRKBSPsLdL2cS2NPcR1pdjTmjnxnq9KKauh1QzFi3iM\"]},\"contracts/utils/Address.sol\":{\"keccak256\":\"0x95ab5946f04d7d1f6f1ddaae196b9aea974b8e39a6cf2f94d0678b54186cf952\",\"urls\":[\"bzz-raw://788aa249ac4dbf9ced05dc9f65038ee3a3e516ed6324099c8dd904f34fc5375a\",\"dweb:/ipfs/QmSM35jDe6EXVWxxo9qe574MQ4vV2qtq8NoWruLRe7jCWz\"]},\"contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xe2a9ad9ddc0004c34fa5e59e0c70f9e5a61ff17a6419de0bc8745b31525c310b\",\"urls\":[\"bzz-raw://1ee2bcdb983c586b2bb8af4d4157e1136c25c3eebdcd3459ee729888afd0ba4c\",\"dweb:/ipfs/QmPwoNSZgd3L6ghCA1Rih58AJayF4FLMVS7mcySC6AikBN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 67,
								"contract": "contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)63_storage)"
							}
						],
						"types": {
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)63_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)63_storage"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)644_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 643,
										"contract": "contracts/access/AccessControl.sol:AccessControl",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)464_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(RoleData)63_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 60,
										"contract": "contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(AddressSet)644_storage"
									},
									{
										"astId": 62,
										"contract": "contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Set)464_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 459,
										"contract": "contracts/access/AccessControl.sol:AccessControl",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 463,
										"contract": "contracts/access/AccessControl.sol:AccessControl",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/IBridge.sol": {
				"IBridge": {
					"abi": [
						{
							"inputs": [],
							"name": "_chainID",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "ChainSafe Systems.",
						"methods": {},
						"title": "Interface for Bridge contract."
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"_chainID()": "beab7131"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"_chainID\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ChainSafe Systems.\",\"methods\":{},\"title\":\"Interface for Bridge contract.\"},\"userdoc\":{\"methods\":{\"_chainID()\":{\"notice\":\"Exposing getter for {_chainID} instead of forcing the use of call.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IBridge.sol\":\"IBridge\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IBridge.sol\":{\"keccak256\":\"0x69acbf5e85d70afb39f819efa08ff2442e8b122f35a012f6e37ed96fb35222b6\",\"urls\":[\"bzz-raw://02c37de0e9beefc6cf988b43980aaee9f68b2b60b34cc889aa374aeee135c13c\",\"dweb:/ipfs/QmVZFyHbMq8KgMyboAspK1VK25kR2uXv6x6t6nh5dfERHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"_chainID()": {
								"notice": "Exposing getter for {_chainID} instead of forcing the use of call."
							}
						}
					}
				}
			},
			"contracts/interfaces/IDepositExecute.sol": {
				"IDepositExecute": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "resourceID",
									"type": "bytes32"
								},
								{
									"internalType": "uint8",
									"name": "destinationChainID",
									"type": "uint8"
								},
								{
									"internalType": "uint64",
									"name": "depositNonce",
									"type": "uint64"
								},
								{
									"internalType": "address",
									"name": "depositer",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "resourceID",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "executeProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "ChainSafe Systems.",
						"methods": {
							"deposit(bytes32,uint8,uint64,address,bytes)": {
								"params": {
									"data": "Consists of additional data needed for a specific deposit.",
									"depositNonce": "This value is generated as an ID by the Bridge contract.",
									"depositer": "Address of account making the deposit in the Bridge contract.",
									"destinationChainID": "Chain ID deposit is expected to be bridged to."
								}
							},
							"executeProposal(bytes32,bytes)": {
								"params": {
									"data": "Consists of additional data needed for a specific deposit execution."
								}
							}
						},
						"title": "Interface for handler contracts that support deposits and deposit executions."
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deposit(bytes32,uint8,uint64,address,bytes)": "38995da9",
							"executeProposal(bytes32,bytes)": "e248cff2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"destinationChainID\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"depositNonce\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"depositer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ChainSafe Systems.\",\"methods\":{\"deposit(bytes32,uint8,uint64,address,bytes)\":{\"params\":{\"data\":\"Consists of additional data needed for a specific deposit.\",\"depositNonce\":\"This value is generated as an ID by the Bridge contract.\",\"depositer\":\"Address of account making the deposit in the Bridge contract.\",\"destinationChainID\":\"Chain ID deposit is expected to be bridged to.\"}},\"executeProposal(bytes32,bytes)\":{\"params\":{\"data\":\"Consists of additional data needed for a specific deposit execution.\"}}},\"title\":\"Interface for handler contracts that support deposits and deposit executions.\"},\"userdoc\":{\"methods\":{\"deposit(bytes32,uint8,uint64,address,bytes)\":{\"notice\":\"It is intended that deposit are made using the Bridge contract.\"},\"executeProposal(bytes32,bytes)\":{\"notice\":\"It is intended that proposals are executed by the Bridge contract.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDepositExecute.sol\":\"IDepositExecute\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IDepositExecute.sol\":{\"keccak256\":\"0x0e294346387f78e5762ed8f30ef4ba23c577abc9e2dfbaeb29e97b1b5099aa35\",\"urls\":[\"bzz-raw://896aa03012baece6caca18cf66386717e1cd47e5700ea24f1a31589b3513d814\",\"dweb:/ipfs/QmVJWiXZgEjFiZB21wsvkhHAUupNqBJ8FvZuJcB4X4NEvj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"deposit(bytes32,uint8,uint64,address,bytes)": {
								"notice": "It is intended that deposit are made using the Bridge contract."
							},
							"executeProposal(bytes32,bytes)": {
								"notice": "It is intended that proposals are executed by the Bridge contract."
							}
						}
					}
				}
			},
			"contracts/interfaces/IERCHandler.sol": {
				"IERCHandler": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "setBurnable",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "resourceID",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								}
							],
							"name": "setResource",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountOrTokenID",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "ChainSafe Systems.",
						"methods": {
							"setBurnable(address)": {
								"params": {
									"contractAddress": "Address of contract to be used when making or executing deposits."
								}
							},
							"setResource(bytes32,address)": {
								"params": {
									"contractAddress": "Address of contract to be called when a deposit is made and a deposited is executed.",
									"resourceID": "ResourceID to be used when making deposits."
								}
							},
							"withdraw(address,address,uint256)": {
								"params": {
									"amountOrTokenID": "Either the amount of ERC20 tokens or the ERC721 token ID to release.",
									"recipient": "Address to release tokens to.",
									"tokenAddress": "Address of token contract to release."
								}
							}
						},
						"title": "Interface to be used with handlers that support ERC20s and ERC721s."
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setBurnable(address)": "07b7ed99",
							"setResource(bytes32,address)": "b8fa3736",
							"withdraw(address,address,uint256)": "d9caed12"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setBurnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setResource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOrTokenID\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ChainSafe Systems.\",\"methods\":{\"setBurnable(address)\":{\"params\":{\"contractAddress\":\"Address of contract to be used when making or executing deposits.\"}},\"setResource(bytes32,address)\":{\"params\":{\"contractAddress\":\"Address of contract to be called when a deposit is made and a deposited is executed.\",\"resourceID\":\"ResourceID to be used when making deposits.\"}},\"withdraw(address,address,uint256)\":{\"params\":{\"amountOrTokenID\":\"Either the amount of ERC20 tokens or the ERC721 token ID to release.\",\"recipient\":\"Address to release tokens to.\",\"tokenAddress\":\"Address of token contract to release.\"}}},\"title\":\"Interface to be used with handlers that support ERC20s and ERC721s.\"},\"userdoc\":{\"methods\":{\"setBurnable(address)\":{\"notice\":\"Marks {contractAddress} as mintable/burnable.\"},\"setResource(bytes32,address)\":{\"notice\":\"Correlates {resourceID} with {contractAddress}.\"},\"withdraw(address,address,uint256)\":{\"notice\":\"Used to manually release funds from ERC safes.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERCHandler.sol\":\"IERCHandler\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERCHandler.sol\":{\"keccak256\":\"0xae4a0687ed7310b0e5b1e82074b38bd492de3c14f33acf12486f7380cd523578\",\"urls\":[\"bzz-raw://0e4195985bfa8305ea9ca1ecd40d34023846a89f3313104e84aedb84069a2926\",\"dweb:/ipfs/QmcrKQzMC6YnXRZeE8Wau4rYB815kXrFTpPWVJBkmSS4SV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"setBurnable(address)": {
								"notice": "Marks {contractAddress} as mintable/burnable."
							},
							"setResource(bytes32,address)": {
								"notice": "Correlates {resourceID} with {contractAddress}."
							},
							"withdraw(address,address,uint256)": {
								"notice": "Used to manually release funds from ERC safes."
							}
						}
					}
				}
			},
			"contracts/interfaces/IGenericHandler.sol": {
				"IGenericHandler": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "resourceID",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "depositFunctionSig",
									"type": "bytes4"
								},
								{
									"internalType": "bytes4",
									"name": "executeFunctionSig",
									"type": "bytes4"
								}
							],
							"name": "setResource",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "ChainSafe Systems.",
						"methods": {
							"setResource(bytes32,address,bytes4,bytes4)": {
								"params": {
									"contractAddress": "Address of contract to be called when a deposit is made and a deposited is executed.",
									"depositFunctionSig": "Function signature of method to be called in {contractAddress} when a deposit is made.",
									"executeFunctionSig": "Function signature of method to be called in {contractAddress} when a deposit is executed.",
									"resourceID": "ResourceID to be used when making deposits."
								}
							}
						},
						"title": "Interface for handler that handles generic deposits and deposit executions."
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"setResource(bytes32,address,bytes4,bytes4)": "bba8185a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"depositFunctionSig\",\"type\":\"bytes4\"},{\"internalType\":\"bytes4\",\"name\":\"executeFunctionSig\",\"type\":\"bytes4\"}],\"name\":\"setResource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ChainSafe Systems.\",\"methods\":{\"setResource(bytes32,address,bytes4,bytes4)\":{\"params\":{\"contractAddress\":\"Address of contract to be called when a deposit is made and a deposited is executed.\",\"depositFunctionSig\":\"Function signature of method to be called in {contractAddress} when a deposit is made.\",\"executeFunctionSig\":\"Function signature of method to be called in {contractAddress} when a deposit is executed.\",\"resourceID\":\"ResourceID to be used when making deposits.\"}}},\"title\":\"Interface for handler that handles generic deposits and deposit executions.\"},\"userdoc\":{\"methods\":{\"setResource(bytes32,address,bytes4,bytes4)\":{\"notice\":\"Correlates {resourceID} with {contractAddress}, {depositFunctionSig}, and {executeFunctionSig}.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IGenericHandler.sol\":\"IGenericHandler\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IGenericHandler.sol\":{\"keccak256\":\"0x9f660f1583d7a7c27fff0c60a7f944f6f27f836f4577c10de1db38d58ea26077\",\"urls\":[\"bzz-raw://d782b3dc5499e19315007afa18f30327b044bf0d98f71413b129bb62ac8ad811\",\"dweb:/ipfs/QmbY4bKnqUJwMNw3JtR2hDH3gzSHoJopZkbykRxYcB7e3y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {
							"setResource(bytes32,address,bytes4,bytes4)": {
								"notice": "Correlates {resourceID} with {contractAddress}, {depositFunctionSig}, and {executeFunctionSig}."
							}
						}
					}
				}
			},
			"contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/Address.sol\":93:2605  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/Address.sol\":93:2605  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa2646970667358221220ca0362edff75204818dcc4228d9339f578fa77a68933f433018ecb3a14dbf92964736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ca0362edff75204818dcc4228d9339f578fa77a68933f433018ecb3a14dbf92964736f6c63430006040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA SUB PUSH3 0xEDFF75 KECCAK256 0x48 XOR 0xDC 0xC4 0x22 DUP14 SWAP4 CODECOPY CREATE2 PUSH25 0xFA77A68933F433018ECB3A14DBF92964736F6C634300060400 CALLER ",
							"sourceMap": "93:2512:7:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ca0362edff75204818dcc4228d9339f578fa77a68933f433018ecb3a14dbf92964736f6c63430006040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA SUB PUSH3 0xEDFF75 KECCAK256 0x48 XOR 0xDC 0xC4 0x22 DUP14 SWAP4 CODECOPY CREATE2 PUSH25 0xFA77A68933F433018ECB3A14DBF92964736F6C634300060400 CALLER ",
							"sourceMap": "93:2512:7:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 93,
									"end": 2605,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 93,
									"end": 2605,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ca0362edff75204818dcc4228d9339f578fa77a68933f433018ecb3a14dbf92964736f6c63430006040033",
									".code": [
										{
											"begin": 93,
											"end": 2605,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 93,
											"end": 2605,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Address.sol\":{\"keccak256\":\"0x95ab5946f04d7d1f6f1ddaae196b9aea974b8e39a6cf2f94d0678b54186cf952\",\"urls\":[\"bzz-raw://788aa249ac4dbf9ced05dc9f65038ee3a3e516ed6324099c8dd904f34fc5375a\",\"dweb:/ipfs/QmSM35jDe6EXVWxxo9qe574MQ4vV2qtq8NoWruLRe7jCWz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/utils/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. * Sets have the following properties: * - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. * ``` contract Example {    // Add the library methods    using EnumerableSet for EnumerableSet.AddressSet; *     // Declare a set state variable    EnumerableSet.AddressSet private mySet; } ``` * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/EnumerableSet.sol\":691:7753  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/EnumerableSet.sol\":691:7753  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa26469706673582212203a5ea389e0a46fd043c0ffcea51a46c2d1c62b6c67aa812469e5af9b1910e9dc64736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a5ea389e0a46fd043c0ffcea51a46c2d1c62b6c67aa812469e5af9b1910e9dc64736f6c63430006040033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0x5E LOG3 DUP10 0xE0 LOG4 PUSH16 0xD043C0FFCEA51A46C2D1C62B6C67AA81 0x24 PUSH10 0xE5AF9B1910E9DC64736F PUSH13 0x63430006040033000000000000 ",
							"sourceMap": "691:7062:8:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a5ea389e0a46fd043c0ffcea51a46c2d1c62b6c67aa812469e5af9b1910e9dc64736f6c63430006040033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0x5E LOG3 DUP10 0xE0 LOG4 PUSH16 0xD043C0FFCEA51A46C2D1C62B6C67AA81 0x24 PUSH10 0xE5AF9B1910E9DC64736F PUSH13 0x63430006040033000000000000 ",
							"sourceMap": "691:7062:8:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 691,
									"end": 7753,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 691,
									"end": 7753,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a5ea389e0a46fd043c0ffcea51a46c2d1c62b6c67aa812469e5af9b1910e9dc64736f6c63430006040033",
									".code": [
										{
											"begin": 691,
											"end": 7753,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 691,
											"end": 7753,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 691,
											"end": 7753,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 691,
											"end": 7753,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 691,
											"end": 7753,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 7753,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. * Sets have the following properties: * - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. * ``` contract Example {    // Add the library methods    using EnumerableSet for EnumerableSet.AddressSet; *     // Declare a set state variable    EnumerableSet.AddressSet private mySet; } ``` * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/utils/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xe2a9ad9ddc0004c34fa5e59e0c70f9e5a61ff17a6419de0bc8745b31525c310b\",\"urls\":[\"bzz-raw://1ee2bcdb983c586b2bb8af4d4157e1136c25c3eebdcd3459ee729888afd0ba4c\",\"dweb:/ipfs/QmPwoNSZgd3L6ghCA1Rih58AJayF4FLMVS7mcySC6AikBN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. * This is a stripped down version of Open zeppelin's Pausable contract. https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/EnumerableSet.sol ",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. * This is a stripped down version of Open zeppelin's Pausable contract. https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/EnumerableSet.sol \",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/Pausable.sol\":{\"keccak256\":\"0xd995bcc6b4067ac18db610e47a2a969e8009cb311b017cdd34fc2b46c3be7020\",\"urls\":[\"bzz-raw://53e0d1dc839eb40ba23a887d302f26764eed0fe035d0e519be6a1099a1237b33\",\"dweb:/ipfs/QmbMhz1VEBxhRsz6par2rKgErxFphimiCqrmCREiusVDHv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 863,
								"contract": "contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/utils/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * note that this is a stripped down version of open zeppelin's safemath https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/utils/SafeMath.sol\":327:1220  contract SafeMath {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"contracts/utils/SafeMath.sol\":327:1220  contract SafeMath {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/utils/SafeMath.sol\":327:1220  contract SafeMath {... */\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa26469706673582212206fe1cfe452d57ea238571e40f22d013eea1bbdf3a96eb14235a13e3a50b7683364736f6c63430006040033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212206fe1cfe452d57ea238571e40f22d013eea1bbdf3a96eb14235a13e3a50b7683364736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xE1CFE452D57EA238571E40F22D013EEA SHL 0xBD RETURN 0xA9 PUSH15 0xB14235A13E3A50B7683364736F6C63 NUMBER STOP MOD DIV STOP CALLER ",
							"sourceMap": "327:893:10:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;327:893:10;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212206fe1cfe452d57ea238571e40f22d013eea1bbdf3a96eb14235a13e3a50b7683364736f6c63430006040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xE1CFE452D57EA238571E40F22D013EEA SHL 0xBD RETURN 0xA9 PUSH15 0xB14235A13E3A50B7683364736F6C63 NUMBER STOP MOD DIV STOP CALLER ",
							"sourceMap": "327:893:10:-:0;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							},
							"internal": {
								"_sub(uint256,uint256,string memory)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 327,
									"end": 1220,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 327,
									"end": 1220,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 327,
									"end": 1220,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 327,
									"end": 1220,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 327,
									"end": 1220,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 327,
									"end": 1220,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 327,
									"end": 1220,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 327,
									"end": 1220,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 327,
									"end": 1220,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 1220,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 327,
									"end": 1220,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 1220,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206fe1cfe452d57ea238571e40f22d013eea1bbdf3a96eb14235a13e3a50b7683364736f6c63430006040033",
									".code": [
										{
											"begin": 327,
											"end": 1220,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 327,
											"end": 1220,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 327,
											"end": 1220,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * note that this is a stripped down version of open zeppelin's safemath https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/utils/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/utils/SafeMath.sol\":{\"keccak256\":\"0x0f714e07671743649ebdc961f0380ecb7b86b9572e4a43f77e18c77c015e2977\",\"urls\":[\"bzz-raw://d39b51548731cf4968c01ad302330697df92c297d4edace1c4c020017178264d\",\"dweb:/ipfs/QmeNowPEdLsw558fStna6zoh4actw95gVXB5pU5YAoqAzg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/GSN/Context.sol": {
				"ast": {
					"absolutePath": "contracts/GSN/Context.sol",
					"exportedSymbols": {
						"Context": [
							26
						]
					},
					"id": 27,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 26,
							"linearizedBaseContracts": [
								26
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 4,
										"nodeType": "Block",
										"src": "726:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 5,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "714:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "726:0:0"
									},
									"scope": 26,
									"src": "702:27:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 13,
										"nodeType": "Block",
										"src": "805:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 10,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "822:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "822:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 9,
												"id": 12,
												"nodeType": "Return",
												"src": "815:17:0"
											}
										]
									},
									"documentation": null,
									"id": 14,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 14,
												"src": "788:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "788:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "787:17:0"
									},
									"scope": 26,
									"src": "735:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "910:165:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 19,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "920:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$26",
														"typeString": "contract Context"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "920:4:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 21,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "1060:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1060:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 18,
												"id": 23,
												"nodeType": "Return",
												"src": "1053:15:0"
											}
										]
									},
									"documentation": null,
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "862:2:0"
									},
									"returnParameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 25,
												"src": "896:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 16,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "896:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "895:14:0"
									},
									"scope": 26,
									"src": "845:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 27,
							"src": "525:552:0"
						}
					],
					"src": "0:1077:0"
				},
				"id": 0
			},
			"contracts/MonkeyNft.sol": {
				"ast": {
					"absolutePath": "contracts/MonkeyNft.sol",
					"exportedSymbols": {
						"Bridge": [
							44
						]
					},
					"id": 45,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 28,
							"literals": [
								"solidity",
								"0.6",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:1"
						},
						{
							"id": 29,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "23:33:1"
						},
						{
							"absolutePath": "contracts/access/AccessControl.sol",
							"file": "./access/AccessControl.sol",
							"id": 30,
							"nodeType": "ImportDirective",
							"scope": 45,
							"sourceUnit": 310,
							"src": "58:36:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Pausable.sol",
							"file": "./utils/Pausable.sol",
							"id": 31,
							"nodeType": "ImportDirective",
							"scope": 45,
							"sourceUnit": 950,
							"src": "95:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/SafeMath.sol",
							"file": "./utils/SafeMath.sol",
							"id": 32,
							"nodeType": "ImportDirective",
							"scope": 45,
							"sourceUnit": 999,
							"src": "126:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IDepositExecute.sol",
							"file": "./interfaces/IDepositExecute.sol",
							"id": 33,
							"nodeType": "ImportDirective",
							"scope": 45,
							"sourceUnit": 346,
							"src": "157:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IBridge.sol",
							"file": "./interfaces/IBridge.sol",
							"id": 34,
							"nodeType": "ImportDirective",
							"scope": 45,
							"sourceUnit": 320,
							"src": "200:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERCHandler.sol",
							"file": "./interfaces/IERCHandler.sol",
							"id": 35,
							"nodeType": "ImportDirective",
							"scope": 45,
							"sourceUnit": 374,
							"src": "235:38:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IGenericHandler.sol",
							"file": "./interfaces/IGenericHandler.sol",
							"id": 36,
							"nodeType": "ImportDirective",
							"scope": 45,
							"sourceUnit": 390,
							"src": "274:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 38,
										"name": "Pausable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 949,
										"src": "476:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Pausable_$949",
											"typeString": "contract Pausable"
										}
									},
									"id": 39,
									"nodeType": "InheritanceSpecifier",
									"src": "476:8:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 40,
										"name": "AccessControl",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 309,
										"src": "486:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AccessControl_$309",
											"typeString": "contract AccessControl"
										}
									},
									"id": 41,
									"nodeType": "InheritanceSpecifier",
									"src": "486:13:1"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 42,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 998,
										"src": "501:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$998",
											"typeString": "contract SafeMath"
										}
									},
									"id": 43,
									"nodeType": "InheritanceSpecifier",
									"src": "501:8:1"
								}
							],
							"contractDependencies": [
								26,
								309,
								949,
								998
							],
							"contractKind": "contract",
							"documentation": {
								"id": 37,
								"nodeType": "StructuredDocumentation",
								"src": "318:138:1",
								"text": "@title Facilitates deposits, creation and votiing of deposit proposals, and deposit executions.\n@author ChainSafe Systems."
							},
							"fullyImplemented": true,
							"id": 44,
							"linearizedBaseContracts": [
								44,
								998,
								309,
								26,
								949
							],
							"name": "Bridge",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 45,
							"src": "457:57:1"
						}
					],
					"src": "0:515:1"
				},
				"id": 1
			},
			"contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							309
						]
					},
					"id": 310,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 46,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"absolutePath": "contracts/utils/EnumerableSet.sol",
							"file": "../utils/EnumerableSet.sol",
							"id": 47,
							"nodeType": "ImportDirective",
							"scope": 310,
							"sourceUnit": 849,
							"src": "25:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/utils/Address.sol",
							"file": "../utils/Address.sol",
							"id": 48,
							"nodeType": "ImportDirective",
							"scope": 310,
							"sourceUnit": 454,
							"src": "62:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/GSN/Context.sol",
							"file": "../GSN/Context.sol",
							"id": 49,
							"nodeType": "ImportDirective",
							"scope": 310,
							"sourceUnit": 27,
							"src": "93:28:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 51,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 26,
										"src": "1435:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$26",
											"typeString": "contract Context"
										}
									},
									"id": 52,
									"nodeType": "InheritanceSpecifier",
									"src": "1435:7:2"
								}
							],
							"contractDependencies": [
								26
							],
							"contractKind": "contract",
							"documentation": {
								"id": 50,
								"nodeType": "StructuredDocumentation",
								"src": "123:1276:2",
								"text": "@dev Contract module that allows children to implement role-based access\ncontrol mechanisms.\n * Roles are referred to by their `bytes32` identifier. These should be exposed\nin the external API and be unique. The best way to achieve this is by\nusing `public constant` hash digests:\n * ```\nbytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n```\n * Roles can be used to represent a set of permissions. To restrict access to a\nfunction call, use {hasRole}:\n * ```\nfunction foo() public {\n    require(hasRole(MY_ROLE, msg.sender));\n    ...\n}\n```\n * Roles can be granted and revoked dynamically via the {grantRole} and\n{revokeRole} functions. Each role has an associated admin role, and only\naccounts that have a role's admin role can call {grantRole} and {revokeRole}.\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\nthat only accounts with this role will be able to grant or revoke other\nroles. More complex role relationships can be created by using\n{_setRoleAdmin}.\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\ngrant and revoke this role. Extra precautions should be taken to secure\naccounts that have been granted it."
							},
							"fullyImplemented": true,
							"id": 309,
							"linearizedBaseContracts": [
								309,
								26
							],
							"name": "AccessControl",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 55,
									"libraryName": {
										"contractScope": null,
										"id": 53,
										"name": "EnumerableSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 848,
										"src": "1455:13:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EnumerableSet_$848",
											"typeString": "library EnumerableSet"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1449:49:2",
									"typeName": {
										"contractScope": null,
										"id": 54,
										"name": "EnumerableSet.AddressSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 644,
										"src": "1473:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"id": 58,
									"libraryName": {
										"contractScope": null,
										"id": 56,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 453,
										"src": "1509:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$453",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "1503:26:2",
									"typeName": {
										"id": 57,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1521:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 63,
									"members": [
										{
											"constant": false,
											"id": 60,
											"name": "members",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 63,
											"src": "1561:32:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
												"typeString": "struct EnumerableSet.AddressSet"
											},
											"typeName": {
												"contractScope": null,
												"id": 59,
												"name": "EnumerableSet.AddressSet",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 644,
												"src": "1561:24:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 62,
											"name": "adminRole",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 63,
											"src": "1603:17:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 61,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1603:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nodeType": "StructDefinition",
									"scope": 309,
									"src": "1535:92:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 67,
									"name": "_roles",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 309,
									"src": "1633:44:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$63_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 66,
										"keyType": {
											"id": 64,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1642:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1633:29:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$63_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueType": {
											"contractScope": null,
											"id": 65,
											"name": "RoleData",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 63,
											"src": "1653:8:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$63_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 70,
									"name": "DEFAULT_ADMIN_ROLE",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 309,
									"src": "1684:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 68,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1684:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30783030",
										"id": 69,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1729:4:2",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1740:198:2",
										"text": "@dev Emitted when `account` is granted `role`.\n     * `sender` is the account that originated the contract call, an admin role\nbearer except when using {_setupRole}."
									},
									"id": 79,
									"name": "RoleGranted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"indexed": true,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 79,
												"src": "1961:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 72,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1961:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"indexed": true,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 79,
												"src": "1983:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 79,
												"src": "2008:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1960:71:2"
									},
									"src": "1943:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "2038:275:2",
										"text": "@dev Emitted when `account` is revoked `role`.\n     * `sender` is the account that originated the contract call:\n  - if using `revokeRole`, it is the admin role bearer\n  - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"id": 88,
									"name": "RoleRevoked",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"indexed": true,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 88,
												"src": "2336:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"indexed": true,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 88,
												"src": "2358:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2358:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": true,
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 88,
												"src": "2383:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2335:71:2"
									},
									"src": "2318:89:2"
								},
								{
									"body": {
										"id": 106,
										"nodeType": "Block",
										"src": "2569:62:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 103,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "2616:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 98,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "2586:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$63_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 100,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 99,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "2593:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2586:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$63_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 101,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 60,
															"src": "2586:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$644_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 713,
														"src": "2586:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$644_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$644_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2586:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 97,
												"id": 105,
												"nodeType": "Return",
												"src": "2579:45:2"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "2413:76:2",
										"text": "@dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 107,
												"src": "2511:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 90,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2511:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 107,
												"src": "2525:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2510:31:2"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 107,
												"src": "2563:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 95,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2563:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2562:6:2"
									},
									"scope": 309,
									"src": "2494:137:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "2871:53:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 115,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "2888:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$63_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 117,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 116,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "2895:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2888:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$63_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 118,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 60,
															"src": "2888:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$644_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 727,
														"src": "2888:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$644_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$644_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2888:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 114,
												"id": 121,
												"nodeType": "Return",
												"src": "2881:36:2"
											}
										]
									},
									"documentation": {
										"id": 108,
										"nodeType": "StructuredDocumentation",
										"src": "2637:157:2",
										"text": "@dev Returns the number of accounts that have `role`. Can be used\ntogether with {getRoleMember} to enumerate all bearers of a role."
									},
									"functionSelector": "ca15c873",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMemberCount",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 123,
												"src": "2827:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 109,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2827:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2826:14:2"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 123,
												"src": "2862:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2862:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2861:9:2"
									},
									"scope": 309,
									"src": "2799:125:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "3591:54:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 138,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3632:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 133,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "3608:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$63_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 135,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 134,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 126,
																	"src": "3615:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3608:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$63_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 60,
															"src": "3608:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$644_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 750,
														"src": "3608:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$644_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$644_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3608:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 132,
												"id": 140,
												"nodeType": "Return",
												"src": "3601:37:2"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "2930:574:2",
										"text": "@dev Returns one of the accounts that have `role`. `index` must be a\nvalue between 0 and {getRoleMemberCount}, non-inclusive.\n     * Role bearers are not sorted in any particular way, and their ordering may\nchange at any point.\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\nyou perform all queries on the same block. See the following\nhttps://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\nfor more information."
									},
									"functionSelector": "9010d07c",
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleMember",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 142,
												"src": "3532:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 125,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3532:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 142,
												"src": "3546:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3546:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3531:29:2"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 142,
												"src": "3582:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3581:9:2"
									},
									"scope": 309,
									"src": "3509:136:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "3892:46:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 150,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "3909:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$63_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 152,
														"indexExpression": {
															"argumentTypes": null,
															"id": 151,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "3916:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3909:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$63_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 62,
													"src": "3909:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 149,
												"id": 154,
												"nodeType": "Return",
												"src": "3902:29:2"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "3651:170:2",
										"text": "@dev Returns the admin role that controls `role`. See {grantRole} and\n{revokeRole}.\n     * To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 156,
												"src": "3848:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 144,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3847:14:2"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 156,
												"src": "3883:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 147,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3883:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3882:9:2"
									},
									"scope": 309,
									"src": "3826:112:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "4253:158:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 166,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "4279:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$63_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 168,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 167,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 159,
																			"src": "4286:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4279:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$63_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 169,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 62,
																	"src": "4279:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 170,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "4303:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 171,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4303:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 165,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "4271:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4271:45:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4318:49:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811",
																"typeString": "literal_string \"AccessControl: sender must be an admin to grant\""
															},
															"value": "AccessControl: sender must be an admin to grant"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ba7116025f1ef6b158a2bd2238e617f30e17c9e456917d901086ca4f8ad2811",
																"typeString": "literal_string \"AccessControl: sender must be an admin to grant\""
															}
														],
														"id": 164,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4263:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4263:105:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "4263:105:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 177,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "4390:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 178,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "4396:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 176,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "4379:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4379:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "4379:25:2"
											}
										]
									},
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "3944:239:2",
										"text": "@dev Grants `role` to `account`.\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\nevent.\n     * Requirements:\n     * - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 182,
												"src": "4207:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 158,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 182,
												"src": "4221:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4206:31:2"
									},
									"returnParameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4253:0:2"
									},
									"scope": 309,
									"src": "4188:223:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "4711:160:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 192,
																			"name": "_roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "4737:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$63_storage_$",
																				"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																			}
																		},
																		"id": 194,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 193,
																			"name": "role",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 185,
																			"src": "4744:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4737:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_RoleData_$63_storage",
																			"typeString": "struct AccessControl.RoleData storage ref"
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "adminRole",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 62,
																	"src": "4737:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 196,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "4761:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																			"typeString": "function () view returns (address payable)"
																		}
																	},
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4761:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 191,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "4729:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4729:45:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4776:50:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3",
																"typeString": "literal_string \"AccessControl: sender must be an admin to revoke\""
															},
															"value": "AccessControl: sender must be an admin to revoke"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64344570eab7406ca49d34d38bf2b2496dfda914405390c5057c8b0aabf798a3",
																"typeString": "literal_string \"AccessControl: sender must be an admin to revoke\""
															}
														],
														"id": 190,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4721:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4721:106:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "4721:106:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 203,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "4850:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 204,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "4856:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 202,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "4838:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4838:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "4838:26:2"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "4417:223:2",
										"text": "@dev Revokes `role` from `account`.\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     * Requirements:\n     * - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 208,
												"src": "4665:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 184,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4665:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 208,
												"src": "4679:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4664:31:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4711:0:2"
									},
									"scope": 309,
									"src": "4645:226:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "5430:137:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 217,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 213,
																"src": "5448:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 218,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 14,
																	"src": "5459:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5459:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "5448:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5473:49:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 216,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5440:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5440:83:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "5440:83:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 225,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "5546:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 226,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "5552:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 224,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "5534:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5534:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "5534:26:2"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "4877:480:2",
										"text": "@dev Revokes `role` from the calling account.\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\npurpose is to provide a mechanism for accounts to lose their privileges\nif they are compromised (such as when a trusted device is misplaced).\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\nevent.\n     * Requirements:\n     * - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "5384:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 210,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5384:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 230,
												"src": "5398:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5398:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5383:31:2"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5430:0:2"
									},
									"scope": 309,
									"src": "5362:205:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "6200:42:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 239,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "6221:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 240,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6227:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 238,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "6210:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6210:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "6210:25:2"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "5573:554:2",
										"text": "@dev Grants `role` to `account`.\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\nevent. Note that unlike {grantRole}, this function doesn't perform any\nchecks on the calling account.\n     * [WARNING]\n====\nThis function should only be called from the constructor when setting\nup the initial roles for the system.\n     * Using this function in any other way is effectively circumventing the admin\nsystem imposed by {AccessControl}.\n===="
									},
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 244,
												"src": "6152:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 232,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6152:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 244,
												"src": "6166:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6166:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6151:31:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6200:0:2"
									},
									"scope": 309,
									"src": "6132:110:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 259,
										"nodeType": "Block",
										"src": "6392:51:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 252,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "6402:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$63_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 254,
															"indexExpression": {
																"argumentTypes": null,
																"id": 253,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 247,
																"src": "6409:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6402:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$63_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 255,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 62,
														"src": "6402:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 256,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 249,
														"src": "6427:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6402:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "6402:34:2"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "6248:66:2",
										"text": "@dev Sets `adminRole` as ``role``'s admin role."
									},
									"id": 260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 260,
												"src": "6342:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"name": "adminRole",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 260,
												"src": "6356:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 248,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6341:33:2"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6392:0:2"
									},
									"scope": 309,
									"src": "6319:124:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "6508:125:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 272,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "6547:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 267,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "6522:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$63_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 269,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 268,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 262,
																	"src": "6529:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6522:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$63_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 60,
															"src": "6522:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$644_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 667,
														"src": "6522:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$644_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$644_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6522:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 282,
												"nodeType": "IfStatement",
												"src": "6518:109:2",
												"trueBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "6557:70:2",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 275,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6588:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 276,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 264,
																		"src": "6594:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 277,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "6603:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6603:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 274,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "6576:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6576:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 280,
															"nodeType": "EmitStatement",
															"src": "6571:45:2"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "6469:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 261,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6469:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 284,
												"src": "6483:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6483:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6468:31:2"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6508:0:2"
									},
									"scope": 309,
									"src": "6449:184:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "6699:128:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 296,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "6741:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 291,
																	"name": "_roles",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 67,
																	"src": "6713:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$63_storage_$",
																		"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																	}
																},
																"id": 293,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 292,
																	"name": "role",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "6720:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6713:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_RoleData_$63_storage",
																	"typeString": "struct AccessControl.RoleData storage ref"
																}
															},
															"id": 294,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 60,
															"src": "6713:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$644_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														"id": 295,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "6713:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$644_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$644_storage_ptr_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6713:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 306,
												"nodeType": "IfStatement",
												"src": "6709:112:2",
												"trueBody": {
													"id": 305,
													"nodeType": "Block",
													"src": "6751:70:2",
													"statements": [
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 299,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "6782:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 300,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "6788:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 301,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 14,
																			"src": "6797:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6797:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	],
																	"id": 298,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "6770:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6770:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 304,
															"nodeType": "EmitStatement",
															"src": "6765:45:2"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"name": "role",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "6660:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6660:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 308,
												"src": "6674:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6674:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6659:31:2"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6699:0:2"
									},
									"scope": 309,
									"src": "6639:188:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 310,
							"src": "1400:5429:2"
						}
					],
					"src": "0:6829:2"
				},
				"id": 2
			},
			"contracts/interfaces/IBridge.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IBridge.sol",
					"exportedSymbols": {
						"IBridge": [
							319
						]
					},
					"id": 320,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 311,
							"literals": [
								"solidity",
								"0.6",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 312,
								"nodeType": "StructuredDocumentation",
								"src": "24:80:3",
								"text": "@title Interface for Bridge contract.\n@author ChainSafe Systems."
							},
							"fullyImplemented": false,
							"id": 319,
							"linearizedBaseContracts": [
								319
							],
							"name": "IBridge",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 313,
										"nodeType": "StructuredDocumentation",
										"src": "129:178:3",
										"text": "@notice Exposing getter for {_chainID} instead of forcing the use of call.\n@return uint8 The {_chainID} that is currently set for the Bridge contract."
									},
									"functionSelector": "beab7131",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_chainID",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "329:2:3"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 318,
												"src": "350:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 315,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "350:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "349:7:3"
									},
									"scope": 319,
									"src": "312:45:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 320,
							"src": "105:254:3"
						}
					],
					"src": "0:359:3"
				},
				"id": 3
			},
			"contracts/interfaces/IDepositExecute.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IDepositExecute.sol",
					"exportedSymbols": {
						"IDepositExecute": [
							345
						]
					},
					"id": 346,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"0.6",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 322,
								"nodeType": "StructuredDocumentation",
								"src": "24:127:4",
								"text": "@title Interface for handler contracts that support deposits and deposit executions.\n@author ChainSafe Systems."
							},
							"fullyImplemented": false,
							"id": 345,
							"linearizedBaseContracts": [
								345
							],
							"name": "IDepositExecute",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "184:423:4",
										"text": "@notice It is intended that deposit are made using the Bridge contract.\n@param destinationChainID Chain ID deposit is expected to be bridged to.\n@param depositNonce This value is generated as an ID by the Bridge contract.\n@param depositer Address of account making the deposit in the Bridge contract.\n@param data Consists of additional data needed for a specific deposit."
									},
									"functionSelector": "38995da9",
									"id": 336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"name": "resourceID",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 336,
												"src": "629:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"name": "destinationChainID",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 336,
												"src": "649:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 326,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "649:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"name": "depositNonce",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 336,
												"src": "675:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 328,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "675:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"name": "depositer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 336,
												"src": "696:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "696:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 336,
												"src": "715:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 332,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "715:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "628:107:4"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "744:0:4"
									},
									"scope": 345,
									"src": "612:133:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "751:183:4",
										"text": "@notice It is intended that proposals are executed by the Bridge contract.\n@param data Consists of additional data needed for a specific deposit execution."
									},
									"functionSelector": "e248cff2",
									"id": 344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeProposal",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"name": "resourceID",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 344,
												"src": "964:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 344,
												"src": "984:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "984:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "963:41:4"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:0:4"
									},
									"scope": 345,
									"src": "939:75:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 346,
							"src": "152:864:4"
						}
					],
					"src": "0:1017:4"
				},
				"id": 4
			},
			"contracts/interfaces/IERCHandler.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERCHandler.sol",
					"exportedSymbols": {
						"IERCHandler": [
							373
						]
					},
					"id": 374,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 347,
							"literals": [
								"solidity",
								"0.6",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 348,
								"nodeType": "StructuredDocumentation",
								"src": "24:117:5",
								"text": "@title Interface to be used with handlers that support ERC20s and ERC721s.\n@author ChainSafe Systems."
							},
							"fullyImplemented": false,
							"id": 373,
							"linearizedBaseContracts": [
								373
							],
							"name": "IERCHandler",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "170:261:5",
										"text": "@notice Correlates {resourceID} with {contractAddress}.\n@param resourceID ResourceID to be used when making deposits.\n@param contractAddress Address of contract to be called when a deposit is made and a deposited is executed."
									},
									"functionSelector": "b8fa3736",
									"id": 356,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setResource",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"name": "resourceID",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 356,
												"src": "457:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "457:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"name": "contractAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 356,
												"src": "477:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "456:45:5"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "510:0:5"
									},
									"scope": 373,
									"src": "436:75:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "516:170:5",
										"text": "@notice Marks {contractAddress} as mintable/burnable.\n@param contractAddress Address of contract to be used when making or executing deposits."
									},
									"functionSelector": "07b7ed99",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setBurnable",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"name": "contractAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "712:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "711:25:5"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "745:0:5"
									},
									"scope": 373,
									"src": "691:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "751:295:5",
										"text": "@notice Used to manually release funds from ERC safes.\n@param tokenAddress Address of token contract to release.\n@param recipient Address to release tokens to.\n@param amountOrTokenID Either the amount of ERC20 tokens or the ERC721 token ID to release."
									},
									"functionSelector": "d9caed12",
									"id": 372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"name": "tokenAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 372,
												"src": "1069:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 372,
												"src": "1091:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"name": "amountOrTokenID",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 372,
												"src": "1110:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1110:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1068:66:5"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1143:0:5"
									},
									"scope": 373,
									"src": "1051:93:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 374,
							"src": "142:1004:5"
						}
					],
					"src": "0:1147:5"
				},
				"id": 5
			},
			"contracts/interfaces/IGenericHandler.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IGenericHandler.sol",
					"exportedSymbols": {
						"IGenericHandler": [
							389
						]
					},
					"id": 390,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 375,
							"literals": [
								"solidity",
								"0.6",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 376,
								"nodeType": "StructuredDocumentation",
								"src": "24:125:6",
								"text": "@title Interface for handler that handles generic deposits and deposit executions.\n@author ChainSafe Systems."
							},
							"fullyImplemented": false,
							"id": 389,
							"linearizedBaseContracts": [
								389
							],
							"name": "IGenericHandler",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "182:555:6",
										"text": "@notice Correlates {resourceID} with {contractAddress}, {depositFunctionSig}, and {executeFunctionSig}.\n@param resourceID ResourceID to be used when making deposits.\n@param contractAddress Address of contract to be called when a deposit is made and a deposited is executed.\n@param depositFunctionSig Function signature of method to be called in {contractAddress} when a deposit is made.\n@param executeFunctionSig Function signature of method to be called in {contractAddress} when a deposit is executed."
									},
									"functionSelector": "bba8185a",
									"id": 388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setResource",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"name": "resourceID",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 388,
												"src": "763:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 378,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "763:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"name": "contractAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 388,
												"src": "783:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"name": "depositFunctionSig",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 388,
												"src": "808:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 382,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "808:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"name": "executeFunctionSig",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 388,
												"src": "835:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 384,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "835:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "762:99:6"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "870:0:6"
									},
									"scope": 389,
									"src": "742:129:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 390,
							"src": "150:723:6"
						}
					],
					"src": "0:873:6"
				},
				"id": 6
			},
			"contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							453
						]
					},
					"id": 454,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 391,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 392,
								"nodeType": "StructuredDocumentation",
								"src": "25:67:7",
								"text": "@dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 453,
							"linearizedBaseContracts": [
								453
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "751:544:7",
										"statements": [
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"name": "codehash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 417,
														"src": "1003:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 400,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1003:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 402,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1003:16:7"
											},
											{
												"assignments": [
													404
												],
												"declarations": [
													{
														"constant": false,
														"id": 404,
														"name": "accountHash",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 417,
														"src": "1029:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 403,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "1029:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1051:66:7",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
														"typeString": "int_const 8947...(69 digits omitted)...1552"
													},
													"value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1029:88:7"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1192:36:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1194:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1218:7:7"
																	}
																],
																"functionName": {
																	"name": "extcodehash",
																	"nodeType": "YulIdentifier",
																	"src": "1206:11:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:20:7"
															},
															"variableNames": [
																{
																	"name": "codehash",
																	"nodeType": "YulIdentifier",
																	"src": "1194:8:7"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 395,
														"isOffset": false,
														"isSlot": false,
														"src": "1218:7:7",
														"valueSize": 1
													},
													{
														"declaration": 401,
														"isOffset": false,
														"isSlot": false,
														"src": "1194:8:7",
														"valueSize": 1
													}
												],
												"id": 407,
												"nodeType": "InlineAssembly",
												"src": "1183:45:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 408,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "1245:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 409,
																	"name": "accountHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "1257:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1245:23:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 411,
																	"name": "codehash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "1272:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "307830",
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1284:3:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0x0"
																},
																"src": "1272:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1245:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 415,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1244:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 399,
												"id": 416,
												"nodeType": "Return",
												"src": "1237:51:7"
											}
										]
									},
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "115:565:7",
										"text": "@dev Returns true if `account` is a contract.\n     * [IMPORTANT]\n====\nIt is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.\n     * Among others, `isContract` will return false for the following\ntypes of addresses:\n     *  - an externally-owned account\n - a contract in construction\n - an address where a contract will be created\n - an address where a contract lived, but was destroyed\n===="
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 418,
												"src": "705:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "704:17:7"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 418,
												"src": "745:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "745:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "744:6:7"
									},
									"scope": 453,
									"src": "685:610:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "2283:320:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 429,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2309:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$453",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$453",
																				"typeString": "library Address"
																			}
																		],
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2301:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 427,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2301:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2301:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2301:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 432,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "2326:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2301:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2334:31:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2293:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2293:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "2293:73:7"
											},
											{
												"assignments": [
													438,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 438,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 451,
														"src": "2455:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 437,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2455:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 445,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2505:2:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 439,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "2473:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2473:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 441,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "2496:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2473:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2454:54:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 447,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "2526:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2535:60:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2518:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2518:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "2518:78:7"
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "1301:906:7",
										"text": "@dev Replacement for Solidity's `transfer`: sends `amount` wei to\n`recipient`, forwarding all available gas and reverting on errors.\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by `transfer`, making them unable to receive funds via\n`transfer`. {sendValue} removes this limitation.\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     * IMPORTANT: because control is transferred to `recipient`, care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\nhttps://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 452,
												"src": "2231:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 452,
												"src": "2258:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2230:43:7"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2283:0:7"
									},
									"scope": 453,
									"src": "2212:391:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 454,
							"src": "93:2512:7"
						}
					],
					"src": "0:2605:7"
				},
				"id": 7
			},
			"contracts/utils/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "contracts/utils/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							848
						]
					},
					"id": 849,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 455,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 456,
								"nodeType": "StructuredDocumentation",
								"src": "25:665:8",
								"text": "@dev Library for managing\nhttps://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\ntypes.\n * Sets have the following properties:\n * - Elements are added, removed, and checked for existence in constant time\n(O(1)).\n- Elements are enumerated in O(n). No guarantees are made on the ordering.\n * ```\ncontract Example {\n    // Add the library methods\n    using EnumerableSet for EnumerableSet.AddressSet;\n *     // Declare a set state variable\n    EnumerableSet.AddressSet private mySet;\n}\n```\n * As of v3.0.0, only sets of type `address` (`AddressSet`) and `uint256`\n(`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 848,
							"linearizedBaseContracts": [
								848
							],
							"name": "EnumerableSet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 464,
									"members": [
										{
											"constant": false,
											"id": 459,
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 464,
											"src": "1213:17:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 457,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1213:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 458,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "1213:9:8",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 463,
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 464,
											"src": "1364:37:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 462,
												"keyType": {
													"id": 460,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "1364:28:8",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1384:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nodeType": "StructDefinition",
									"scope": 848,
									"src": "1159:249:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "1647:335:8",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1661:22:8",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 475,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1672:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"argumentTypes": null,
																"id": 476,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "1677:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 474,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "1662:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$464_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1662:21:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 502,
													"nodeType": "Block",
													"src": "1939:37:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1960:5:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 473,
															"id": 501,
															"nodeType": "Return",
															"src": "1953:12:8"
														}
													]
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "1657:319:8",
												"trueBody": {
													"id": 499,
													"nodeType": "Block",
													"src": "1685:248:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 484,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 469,
																		"src": "1716:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 479,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "1699:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 482,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 459,
																		"src": "1699:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1699:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1699:23:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 486,
															"nodeType": "ExpressionStatement",
															"src": "1699:23:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 487,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "1857:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 490,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 463,
																		"src": "1857:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 491,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 489,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 469,
																		"src": "1870:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1857:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 492,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "1879:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 493,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 459,
																		"src": "1879:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1879:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1857:40:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 496,
															"nodeType": "ExpressionStatement",
															"src": "1857:40:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1918:4:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 473,
															"id": 498,
															"nodeType": "Return",
															"src": "1911:11:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "1414:159:8",
										"text": "@dev Add a value to a set. O(1).\n     * Returns true if the value was added to the set, that is if it was not\nalready present."
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "1592:15:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 466,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 464,
													"src": "1592:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "1609:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 468,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1591:32:8"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 505,
												"src": "1641:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 471,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1641:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1640:6:8"
									},
									"scope": 848,
									"src": "1578:404:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "2222:1440:8",
										"statements": [
											{
												"assignments": [
													516
												],
												"declarations": [
													{
														"constant": false,
														"id": 516,
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 584,
														"src": "2332:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 515,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2332:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 521,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 517,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "2353:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 518,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 463,
														"src": "2353:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 520,
													"indexExpression": {
														"argumentTypes": null,
														"id": 519,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "2366:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2353:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2332:40:8"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 522,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "2387:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2401:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2387:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "3619:37:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3640:5:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 514,
															"id": 581,
															"nodeType": "Return",
															"src": "3633:12:8"
														}
													]
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "2383:1273:8",
												"trueBody": {
													"id": 579,
													"nodeType": "Block",
													"src": "2404:1209:8",
													"statements": [
														{
															"assignments": [
																526
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 526,
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 579,
																	"src": "2744:21:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 525,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2744:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 530,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 527,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "2768:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2781:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2768:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2744:38:8"
														},
														{
															"assignments": [
																532
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 532,
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 579,
																	"src": "2796:17:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 531,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2796:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 538,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 533,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "2816:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 534,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 459,
																		"src": "2816:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2816:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2837:1:8",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2816:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2796:42:8"
														},
														{
															"assignments": [
																540
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 540,
																	"name": "lastvalue",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 579,
																	"src": "3078:17:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 539,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "3078:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 545,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 541,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 508,
																		"src": "3098:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 459,
																	"src": "3098:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 544,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 543,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "3110:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3098:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3078:42:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 546,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "3212:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 549,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 459,
																		"src": "3212:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 550,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 548,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 526,
																		"src": "3224:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3212:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 551,
																	"name": "lastvalue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 540,
																	"src": "3241:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "3212:38:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 553,
															"nodeType": "ExpressionStatement",
															"src": "3212:38:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 554,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "3316:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 557,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 463,
																		"src": "3316:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 558,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 556,
																		"name": "lastvalue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 540,
																		"src": "3329:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3316:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 559,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 526,
																		"src": "3342:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3358:1:8",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3342:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3316:43:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 563,
															"nodeType": "ExpressionStatement",
															"src": "3316:43:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 564,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "3465:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 459,
																		"src": "3465:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3465:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3465:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 570,
															"nodeType": "ExpressionStatement",
															"src": "3465:17:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3550:26:8",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 571,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "3557:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 572,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 463,
																		"src": "3557:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 574,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 573,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 510,
																		"src": "3570:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3557:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 576,
															"nodeType": "ExpressionStatement",
															"src": "3550:26:8"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3598:4:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 514,
															"id": 578,
															"nodeType": "Return",
															"src": "3591:11:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "1988:157:8",
										"text": "@dev Removes a value from a set. O(1).\n     * Returns true if the value was removed from the set, that is if it was\npresent."
									},
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 585,
												"src": "2167:15:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 507,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 464,
													"src": "2167:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 585,
												"src": "2184:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 509,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2184:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2166:32:8"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 585,
												"src": "2216:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 512,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2216:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2215:6:8"
									},
									"scope": 848,
									"src": "2150:1512:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "3822:48:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 595,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "3839:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 596,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 463,
															"src": "3839:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 598,
														"indexExpression": {
															"argumentTypes": null,
															"id": 597,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "3852:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3839:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3862:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3839:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 594,
												"id": 601,
												"nodeType": "Return",
												"src": "3832:31:8"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "3668:70:8",
										"text": "@dev Returns true if the value is in the set. O(1)."
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 603,
												"src": "3762:15:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 587,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 464,
													"src": "3762:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 603,
												"src": "3779:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 589,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3779:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3761:32:8"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 603,
												"src": "3816:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 592,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3816:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3815:6:8"
									},
									"scope": 848,
									"src": "3743:127:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "4016:42:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 611,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "4033:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 459,
														"src": "4033:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "4033:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 614,
												"nodeType": "Return",
												"src": "4026:25:8"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "3876:70:8",
										"text": "@dev Returns the number of values on the set. O(1)."
									},
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "3968:15:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 605,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 464,
													"src": "3968:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3967:17:8"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 616,
												"src": "4007:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4007:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4006:9:8"
									},
									"scope": 848,
									"src": "3951:107:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "4466:125:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 627,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 619,
																		"src": "4484:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 628,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 459,
																	"src": "4484:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4484:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 630,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 621,
																"src": "4505:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4484:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4512:36:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															},
															"value": "EnumerableSet: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															}
														],
														"id": 626,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4476:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4476:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "ExpressionStatement",
												"src": "4476:73:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 635,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "4566:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 636,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 459,
														"src": "4566:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 638,
													"indexExpression": {
														"argumentTypes": null,
														"id": 637,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "4578:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4566:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 625,
												"id": 639,
												"nodeType": "Return",
												"src": "4559:25:8"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "4063:322:8",
										"text": "@dev Returns the value stored at position `index` in the set. O(1).\n    * Note that there are no guarantees on the ordering of values inside the\narray, and it may change when more values are added or removed.\n    * Requirements:\n    * - `index` must be strictly less than {length}."
									},
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 641,
												"src": "4403:15:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 618,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 464,
													"src": "4403:3:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 641,
												"src": "4420:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4402:32:8"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 641,
												"src": "4457:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 623,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4456:9:8"
									},
									"scope": 848,
									"src": "4390:201:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 644,
									"members": [
										{
											"constant": false,
											"id": 643,
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 644,
											"src": "4644:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 642,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 464,
												"src": "4644:3:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 848,
									"src": "4616:45:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "4907:65:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 655,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "4929:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 656,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 643,
															"src": "4929:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$464_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 661,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 649,
																			"src": "4957:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4949:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 659,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4949:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4949:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4941:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 657,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4941:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4941:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$464_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 654,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "4924:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$464_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4924:41:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 653,
												"id": 665,
												"nodeType": "Return",
												"src": "4917:48:8"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "4667:159:8",
										"text": "@dev Add a value to a set. O(1).\n     * Returns true if the value was added to the set, that is if it was not\nalready present."
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 667,
												"src": "4844:22:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 646,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 644,
													"src": "4844:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 667,
												"src": "4868:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4868:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4843:39:8"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 667,
												"src": "4901:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 651,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4901:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4900:6:8"
									},
									"scope": 848,
									"src": "4831:141:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "5219:68:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 678,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "5244:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 679,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 643,
															"src": "5244:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$464_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 684,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 672,
																			"src": "5272:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5264:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 682,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5264:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5264:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5256:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 680,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5256:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5256:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$464_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 677,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "5236:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$464_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5236:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 676,
												"id": 688,
												"nodeType": "Return",
												"src": "5229:51:8"
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "4978:157:8",
										"text": "@dev Removes a value from a set. O(1).\n     * Returns true if the value was removed from the set, that is if it was\npresent."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "5156:22:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 669,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 644,
													"src": "5156:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "5180:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5180:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5155:39:8"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 690,
												"src": "5213:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 674,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5213:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5212:6:8"
									},
									"scope": 848,
									"src": "5140:147:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "5454:70:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 701,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "5481:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 702,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 643,
															"src": "5481:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$464_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 707,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 695,
																			"src": "5509:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 706,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5501:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 705,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5501:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5501:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5493:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 703,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5493:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5493:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$464_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 700,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "5471:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$464_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5471:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 699,
												"id": 711,
												"nodeType": "Return",
												"src": "5464:53:8"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "5293:70:8",
										"text": "@dev Returns true if the value is in the set. O(1)."
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 713,
												"src": "5386:22:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 692,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 644,
													"src": "5386:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 713,
												"src": "5410:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5410:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5385:39:8"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 713,
												"src": "5448:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 697,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5448:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5447:6:8"
									},
									"scope": 848,
									"src": "5368:156:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 726,
										"nodeType": "Block",
										"src": "5677:43:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 722,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 716,
																"src": "5702:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 723,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 643,
															"src": "5702:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$464_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$464_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 721,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "5694:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$464_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5694:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 720,
												"id": 725,
												"nodeType": "Return",
												"src": "5687:26:8"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "5530:70:8",
										"text": "@dev Returns the number of values in the set. O(1)."
									},
									"id": 727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 727,
												"src": "5621:22:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 715,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 644,
													"src": "5621:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5620:24:8"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 727,
												"src": "5668:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5667:9:8"
									},
									"scope": 848,
									"src": "5605:115:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "6135:64:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 742,
																				"name": "set",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 730,
																				"src": "6172:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
																					"typeString": "struct EnumerableSet.AddressSet storage pointer"
																				}
																			},
																			"id": 743,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "_inner",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 643,
																			"src": "6172:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$464_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 744,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 732,
																			"src": "6184:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_Set_$464_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 741,
																		"name": "_at",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 641,
																		"src": "6168:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$464_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																			"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																		}
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6168:22:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6160:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 739,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6160:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6160:31:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6152:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 737,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6152:7:8",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6152:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 736,
												"id": 748,
												"nodeType": "Return",
												"src": "6145:47:8"
											}
										]
									},
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "5725:322:8",
										"text": "@dev Returns the value stored at position `index` in the set. O(1).\n    * Note that there are no guarantees on the ordering of values inside the\narray, and it may change when more values are added or removed.\n    * Requirements:\n    * - `index` must be strictly less than {length}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 750,
												"src": "6064:22:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 729,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 644,
													"src": "6064:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$644_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 750,
												"src": "6088:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6088:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6063:39:8"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 750,
												"src": "6126:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6126:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6125:9:8"
									},
									"scope": 848,
									"src": "6052:147:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 753,
									"members": [
										{
											"constant": false,
											"id": 752,
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 753,
											"src": "6247:10:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 751,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 464,
												"src": "6247:3:8",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$464_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nodeType": "StructDefinition",
									"scope": 848,
									"src": "6222:42:8",
									"visibility": "public"
								},
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "6507:56:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 764,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "6529:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$753_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 752,
															"src": "6529:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$464_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 768,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "6549:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6541:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 766,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6541:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6541:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$464_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 763,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "6524:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$464_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6524:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 762,
												"id": 771,
												"nodeType": "Return",
												"src": "6517:39:8"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "6270:159:8",
										"text": "@dev Add a value to a set. O(1).\n     * Returns true if the value was added to the set, that is if it was not\nalready present."
									},
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 773,
												"src": "6447:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$753_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 755,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 753,
													"src": "6447:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$753_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 773,
												"src": "6468:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6468:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6446:36:8"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 773,
												"src": "6501:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6501:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6500:6:8"
									},
									"scope": 848,
									"src": "6434:129:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "6807:59:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 784,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "6832:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$753_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 752,
															"src": "6832:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$464_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "6852:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6844:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 786,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6844:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6844:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$464_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 783,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "6824:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$464_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6824:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 782,
												"id": 791,
												"nodeType": "Return",
												"src": "6817:42:8"
											}
										]
									},
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "6569:157:8",
										"text": "@dev Removes a value from a set. O(1).\n     * Returns true if the value was removed from the set, that is if it was\npresent."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 793,
												"src": "6747:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$753_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 775,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 753,
													"src": "6747:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$753_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 793,
												"src": "6768:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6768:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6746:36:8"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 793,
												"src": "6801:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 780,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6801:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6800:6:8"
									},
									"scope": 848,
									"src": "6731:135:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "7030:61:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 804,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "7057:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$753_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 805,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 752,
															"src": "7057:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$464_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 808,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "7077:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 807,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7069:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 806,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7069:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7069:14:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$464_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 803,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "7047:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$464_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7047:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 802,
												"id": 811,
												"nodeType": "Return",
												"src": "7040:44:8"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "6872:70:8",
										"text": "@dev Returns true if the value is in the set. O(1)."
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 813,
												"src": "6965:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$753_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 795,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 753,
													"src": "6965:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$753_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 798,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 813,
												"src": "6986:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6986:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6964:36:8"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 813,
												"src": "7024:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 800,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7024:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7023:6:8"
									},
									"scope": 848,
									"src": "6947:144:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "7241:43:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 822,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "7266:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$753_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 752,
															"src": "7266:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$464_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$464_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 821,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 616,
														"src": "7258:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$464_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7258:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 820,
												"id": 825,
												"nodeType": "Return",
												"src": "7251:26:8"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "7097:70:8",
										"text": "@dev Returns the number of values on the set. O(1)."
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 827,
												"src": "7188:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$753_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 815,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 753,
													"src": "7188:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$753_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7187:21:8"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 827,
												"src": "7232:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7232:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7231:9:8"
									},
									"scope": 848,
									"src": "7172:112:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "7696:55:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 840,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "7725:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$753_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 841,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 752,
																	"src": "7725:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$464_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 842,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "7737:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$464_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 839,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 641,
																"src": "7721:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$464_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7721:22:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7713:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 837,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7713:7:8",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7713:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 836,
												"id": 845,
												"nodeType": "Return",
												"src": "7706:38:8"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "7289:322:8",
										"text": "@dev Returns the value stored at position `index` in the set. O(1).\n    * Note that there are no guarantees on the ordering of values inside the\narray, and it may change when more values are added or removed.\n    * Requirements:\n    * - `index` must be strictly less than {length}."
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 847,
												"src": "7628:19:8",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$753_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 829,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 753,
													"src": "7628:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$753_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 847,
												"src": "7649:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7649:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7627:36:8"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 847,
												"src": "7687:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7687:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7686:9:8"
									},
									"scope": 848,
									"src": "7616:135:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 849,
							"src": "691:7062:8"
						}
					],
					"src": "0:7753:8"
				},
				"id": 8
			},
			"contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Pausable": [
							949
						]
					},
					"id": 950,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 850,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 851,
								"nodeType": "StructuredDocumentation",
								"src": "59:328:9",
								"text": "@dev Contract module which allows children to implement an emergency stop\nmechanism that can be triggered by an authorized account.\n * This is a stripped down version of Open zeppelin's Pausable contract.\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/EnumerableSet.sol\n "
							},
							"fullyImplemented": true,
							"id": 949,
							"linearizedBaseContracts": [
								949
							],
							"name": "Pausable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "412:73:9",
										"text": "@dev Emitted when the pause is triggered by `account`."
									},
									"id": 856,
									"name": "Paused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"indexed": false,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 856,
												"src": "503:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "502:17:9"
									},
									"src": "490:30:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "526:70:9",
										"text": "@dev Emitted when the pause is lifted by `account`."
									},
									"id": 861,
									"name": "Unpaused",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"indexed": false,
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 861,
												"src": "616:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "615:17:9"
									},
									"src": "601:32:9"
								},
								{
									"constant": false,
									"id": 863,
									"name": "_paused",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 949,
									"src": "639:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 862,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "639:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "762:32:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 867,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "772:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "782:5:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "772:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "772:15:9"
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "666:67:9",
										"text": "@dev Initializes the contract in unpaused state."
									},
									"id": 872,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "750:2:9"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "762:0:9"
									},
									"scope": 949,
									"src": "738:56:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "934:31:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 878,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 863,
													"src": "951:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 877,
												"id": 879,
												"nodeType": "Return",
												"src": "944:14:9"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "800:84:9",
										"text": "@dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "904:2:9"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 881,
												"src": "928:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "928:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "927:6:9"
									},
									"scope": 949,
									"src": "889:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "1176:44:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 884,
														"name": "_whenNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "1186:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1186:16:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "1186:16:9"
											},
											{
												"id": 887,
												"nodeType": "PlaceholderStatement",
												"src": "1212:1:9"
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "971:175:9",
										"text": "@dev Modifier to make a function callable only when the contract is not paused.\n     * Requirements:\n     * - The contract must not be paused."
									},
									"id": 889,
									"name": "whenNotPaused",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1173:2:9"
									},
									"src": "1151:69:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "1265:54:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1283:8:9",
															"subExpression": {
																"argumentTypes": null,
																"id": 893,
																"name": "_paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "1284:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5061757361626c653a20706175736564",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1293:18:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 892,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1275:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1275:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "1275:37:9"
											}
										]
									},
									"documentation": null,
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_whenNotPaused",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1249:2:9"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1265:0:9"
									},
									"scope": 949,
									"src": "1226:93:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "1527:41:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 902,
														"name": "_whenPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "1537:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1537:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "1537:13:9"
											},
											{
												"id": 905,
												"nodeType": "PlaceholderStatement",
												"src": "1560:1:9"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "1325:175:9",
										"text": "@dev Modifier to make a function callable only when the contract is not paused.\n     * Requirements:\n     * - The contract must not be paused."
									},
									"id": 907,
									"name": "whenPaused",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1524:2:9"
									},
									"src": "1505:63:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "1610:57:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 911,
															"name": "_paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "1628:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1637:22:9",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1620:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1620:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 914,
												"nodeType": "ExpressionStatement",
												"src": "1620:40:9"
											}
										]
									},
									"documentation": null,
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_whenPaused",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1594:2:9"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1610:0:9"
									},
									"scope": 949,
									"src": "1574:93:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "1851:64:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 922,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "1861:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1871:4:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1861:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 925,
												"nodeType": "ExpressionStatement",
												"src": "1861:14:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 927,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "1897:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1897:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 926,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "1890:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1890:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 930,
												"nodeType": "EmitStatement",
												"src": "1885:23:9"
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "1673:124:9",
										"text": "@dev Triggers stopped state.\n     * Requirements:\n     * - The contract must not be paused."
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 920,
											"modifierName": {
												"argumentTypes": null,
												"id": 919,
												"name": "whenNotPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 889,
												"src": "1837:13:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1837:13:9"
										}
									],
									"name": "_pause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1817:2:9"
									},
									"returnParameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1851:0:9"
									},
									"scope": 949,
									"src": "1802:113:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "2095:67:9",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 938,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "2105:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2115:5:9",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2105:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "2105:15:9"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 943,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "2144:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2144:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 942,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "2135:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:20:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "EmitStatement",
												"src": "2130:25:9"
											}
										]
									},
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "1921:121:9",
										"text": "@dev Returns to normal state.\n     * Requirements:\n     * - The contract must be paused."
									},
									"id": 948,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 936,
											"modifierName": {
												"argumentTypes": null,
												"id": 935,
												"name": "whenPaused",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 907,
												"src": "2084:10:9",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2084:10:9"
										}
									],
									"name": "_unpause",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2064:2:9"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2095:0:9"
									},
									"scope": 949,
									"src": "2047:115:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 950,
							"src": "388:1776:9"
						}
					],
					"src": "33:2131:9"
				},
				"id": 9
			},
			"contracts/utils/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/utils/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							998
						]
					},
					"id": 999,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 951,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "58:267:10",
								"text": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * note that this is a stripped down version of open zeppelin's safemath\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/math/SafeMath.sol"
							},
							"fullyImplemented": true,
							"id": 998,
							"linearizedBaseContracts": [
								998
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "677:68:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 963,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "699:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 964,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "702:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "705:32:10",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 962,
														"name": "_sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "694:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "694:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 961,
												"id": 967,
												"nodeType": "Return",
												"src": "687:51:10"
											}
										]
									},
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "352:253:10",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow."
									},
									"id": 969,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 969,
												"src": "623:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 969,
												"src": "634:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "622:22:10"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 969,
												"src": "668:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "667:9:10"
									},
									"scope": 998,
									"src": "610:135:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "1125:92:10",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 982,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "1143:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 983,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "1148:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1143:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 985,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "1151:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 981,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1135:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1135:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 987,
												"nodeType": "ExpressionStatement",
												"src": "1135:29:10"
											},
											{
												"assignments": [
													989
												],
												"declarations": [
													{
														"constant": false,
														"id": 989,
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 996,
														"src": "1174:9:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 988,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1174:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 990,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 972,
														"src": "1186:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 991,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 974,
														"src": "1190:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1186:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1174:17:10"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 994,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 989,
													"src": "1209:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 980,
												"id": 995,
												"nodeType": "Return",
												"src": "1202:8:10"
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "751:273:10",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow."
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "1043:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "1054:9:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 976,
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "1065:26:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 975,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1065:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1042:50:10"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 997,
												"src": "1116:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1116:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1115:9:10"
									},
									"scope": 998,
									"src": "1029:188:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 999,
							"src": "327:893:10"
						}
					],
					"src": "33:1187:10"
				},
				"id": 10
			}
		}
	}
}